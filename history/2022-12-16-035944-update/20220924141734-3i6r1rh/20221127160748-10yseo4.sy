{
	"ID": "20221127160748-10yseo4",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221127160748-10yseo4",
		"title": "docker",
		"updated": "20221215191038"
	},
	"Children": [
		{
			"ID": "20221127160800-5n8h2tn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221127160800-5n8h2tn"
			}
		},
		{
			"ID": "20221127161011-7iub53k",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221127161011-7iub53k",
				"updated": "20221214055700"
			},
			"Children": [
				{
					"ID": "20221127161031-0az1ns1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221127161031-0az1ns1",
						"updated": "20221214055700"
					},
					"Children": [
						{
							"ID": "20221127161031-pszaoyi",
							"Type": "NodeHeading",
							"HeadingLevel": 1,
							"Properties": {
								"id": "20221127161031-pszaoyi",
								"updated": "20221127161034"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker基础篇"
								}
							]
						},
						{
							"ID": "20221127161043-9f40q2o",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221127161043-9f40q2o",
								"updated": "20221214055700"
							},
							"Children": [
								{
									"ID": "20221127161038-iaay3lc",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221127161038-iaay3lc"
									},
									"Children": [
										{
											"ID": "20221127161046-jlht1uc",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221127161046-jlht1uc",
												"updated": "20221127161056"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker简介"
												}
											]
										},
										{
											"ID": "20221127161057-6yv1zmp",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221127161057-6yv1zmp",
												"updated": "20221127161148"
											},
											"Children": [
												{
													"ID": "20221127161148-x12t4wb",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127161148-x12t4wb",
														"updated": "20221127161148"
													},
													"Children": [
														{
															"ID": "20221127161148-zxk30p6",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127161148-zxk30p6",
																"updated": "20221127161314"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "为什么用docker"
																}
															]
														},
														{
															"ID": "20221127161201-pyzjkhu",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161201-pyzjkhu",
																"updated": "20221127161208"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "Docker之所以发展如此迅速，也是因为它对此给出了一个标准化的解决方案-----"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "系统平滑移植，容器虚拟化技术"
																},
																{
																	"Type": "NodeText",
																	"Data": "。"
																}
															]
														},
														{
															"ID": "20221127161201-cq3n6q5",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161201-cq3n6q5",
																"updated": "20221127161217"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "环境配置相当麻烦，换一台机器，就要重来一次，费力费时。很多人想到，能不能从根本上解决问题，软件可以带环境安装？也就是说，安装的时候，把原始环境一模一样地复制过来。"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题"
																},
																{
																	"Type": "NodeText",
																	"Data": "。"
																}
															]
														},
														{
															"ID": "20221127161218-zrz4j2y",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161218-zrz4j2y",
																"updated": "20221127161308"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "开发需要清楚的告诉运维部署团队，用的全部配置文件+所有软件环境。不过，即便如此，仍然常常发生部署失败的状况。Docker的出现使得Docker得以"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "打破过去「程序即应用」的观念"
																},
																{
																	"Type": "NodeText",
																	"Data": "。透过镜像(images)将作业系统核心除外，运作应用程式所需要的系统环境，由下而上打包，"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "达到应用程式跨平台间的无缝接轨运作"
																},
																{
																	"Type": "NodeText",
																	"Data": "。"
																}
															]
														}
													]
												},
												{
													"ID": "20221127161317-vpfgeaf",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127161317-vpfgeaf"
													},
													"Children": [
														{
															"ID": "20221127161317-fl32g82",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127161317-fl32g82",
																"updated": "20221127161442"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker的理念"
																}
															]
														},
														{
															"ID": "20221127161341-ehbag9c",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161341-ehbag9c",
																"updated": "20221127161359"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "Docker是基于Go语言实现的云开源项目。\nDocker的主要目标是“Build，Ship and Run Any App,Anywhere”，也就是通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的APP（可以是一个WEB应用或"
																},
																{
																	"Type": "NodeText",
																	"Data": "数据库"
																},
																{
																	"Type": "NodeText",
																	"Data": "应用等等）及其运行环境能够做到“"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "一次镜像，处处运行"
																},
																{
																	"Type": "NodeText",
																	"Data": "”。"
																}
															]
														},
														{
															"ID": "20221127161341-8tmvfmi",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161341-8tmvfmi",
																"updated": "20221127161504"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "Linux容器技术的出现就解决了这样一个问题，而 Docker 就是在它的基础上发展过来的。将"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "应用打成镜像，通过镜像成为运行在Docker容器上面的实例，而 Docker容器在任何操作系统上都是一致的，这就实现了跨平台、跨服务器"
																},
																{
																	"Type": "NodeText",
																	"Data": "。只需要一次配置好环境，换到别的机子上就可以一键部署好，大大简化了操作。"
																}
															]
														}
													]
												},
												{
													"ID": "20221127161512-zsxc6vg",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127161512-zsxc6vg"
													},
													"Children": [
														{
															"ID": "20221127161512-bzf6qb5",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127161512-bzf6qb5",
																"updated": "20221127161515"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "总结"
																}
															]
														},
														{
															"ID": "20221127161516-i67mipv",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161516-i67mipv",
																"updated": "20221127161541"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "解决了"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "运行环境和配置问题"
																},
																{
																	"Type": "NodeText",
																	"Data": "的"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "软件容器"
																},
																{
																	"Type": "NodeText",
																	"Data": "，方便做持续集成并有助于整体发布的容器虚拟化技术。"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221127161611-timb0yz",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221127161611-timb0yz"
									},
									"Children": [
										{
											"ID": "20221127161611-hhuu12y",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221127161611-hhuu12y",
												"updated": "20221127161630"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "容器与虚拟机比较"
												}
											]
										},
										{
											"ID": "20221127161630-04lw2w2",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221127161630-04lw2w2",
												"updated": "20221127161655"
											},
											"Children": [
												{
													"ID": "20221127161655-3t79q7m",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127161655-3t79q7m",
														"updated": "20221127161655"
													},
													"Children": [
														{
															"ID": "20221127161655-d539flb",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127161655-d539flb",
																"updated": "20221127162041"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "传统虚拟机技术"
																}
															]
														},
														{
															"ID": "20221127161712-9mg2b7m",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161712-9mg2b7m",
																"updated": "20221127161712"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "虚拟机（virtual machine）就是带环境安装的一种解决方案。\n它可以在一种操作系统里面运行另一种操作系统，比如在Windows10系统里面运行Linux系统CentOS7。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。这类虚拟机完美的运行了另一套系统，能够使应用程序，操作系统和硬件三者之间的逻辑不变。"
																},
																{
																	"Type": "NodeBr",
																	"Data": "br"
																},
																{
																	"Type": "NodeText",
																	"Data": "Win10\tVMWare\tCentos7\t各种cpu、内存网络额配置+各种软件\t虚拟机实例"
																}
															]
														},
														{
															"ID": "20221127161801-yu2v0j7",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161801-yu2v0j7",
																"updated": "20221127162023"
															},
															"Children": [
																{
																	"Type": "NodeImage",
																	"Data": "span",
																	"Properties": {
																		"parent-style": "display: block; max-width: 467px;",
																		"style": "width: 457px;"
																	},
																	"Children": [
																		{
																			"Type": "NodeBang"
																		},
																		{
																			"Type": "NodeOpenBracket"
																		},
																		{
																			"Type": "NodeLinkText",
																			"Data": "image"
																		},
																		{
																			"Type": "NodeCloseBracket"
																		},
																		{
																			"Type": "NodeOpenParen"
																		},
																		{
																			"Type": "NodeLinkDest",
																			"Data": "assets/image-20221127162018-mw9vay1.png"
																		},
																		{
																			"Type": "NodeCloseParen"
																		}
																	]
																},
																{
																	"Type": "NodeKramdownSpanIAL",
																	"Data": "{: style=\"width: 457px;\" parent-style=\"display: block; max-width: 467px;\"}"
																}
															]
														},
														{
															"ID": "20221127161712-hjaeuj1",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161712-hjaeuj1",
																"updated": "20221127161712"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "虚拟机的缺点：\n1    资源占用多               2    冗余步骤多                 3    启动慢"
																}
															]
														}
													]
												},
												{
													"ID": "20221127162044-051j0dm",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127162044-051j0dm"
													},
													"Children": [
														{
															"ID": "20221127162044-n7o78st",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127162044-n7o78st",
																"updated": "20221127162113"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "容器虚拟化技术"
																}
															]
														},
														{
															"ID": "20221127162114-fdh5asb",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127162114-fdh5asb",
																"updated": "20221127162128"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "Linux容器(Linux Containers，缩写为 LXC)\nLinux容器是与系统其他部分隔离开的"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "一系列进程"
																},
																{
																	"Type": "NodeText",
																	"Data": "，从另一个镜像运行，并由该镜像提供支持进程所需的全部文件。容器提供的镜像包含了应用的所有依赖项，因而在从开发到测试再到生产的整个过程中，它都具有可移植性和一致性。"
																}
															]
														},
														{
															"ID": "20221127162257-g4bkq9z",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127162257-g4bkq9z",
																"updated": "20221127162302"
															},
															"Children": [
																{
																	"Type": "NodeImage",
																	"Data": "span",
																	"Properties": {
																		"parent-style": "max-width: 481px; display: block;",
																		"style": "width: 471px;"
																	},
																	"Children": [
																		{
																			"Type": "NodeBang"
																		},
																		{
																			"Type": "NodeOpenBracket"
																		},
																		{
																			"Type": "NodeLinkText",
																			"Data": "image"
																		},
																		{
																			"Type": "NodeCloseBracket"
																		},
																		{
																			"Type": "NodeOpenParen"
																		},
																		{
																			"Type": "NodeLinkDest",
																			"Data": "assets/image-20221127162257-jseb29r.png"
																		},
																		{
																			"Type": "NodeCloseParen"
																		}
																	]
																},
																{
																	"Type": "NodeKramdownSpanIAL",
																	"Data": "{: style=\"width: 471px;\" parent-style=\"max-width: 481px; display: block;\"}"
																}
															]
														},
														{
															"ID": "20221127162114-lpk68i3",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127162114-lpk68i3",
																"updated": "20221127162145"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "Linux 容器"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "不是"
																},
																{
																	"Type": "NodeText",
																	"Data": "模拟一个完整的操作系统而是对"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "进程进行隔离"
																},
																{
																	"Type": "NodeText",
																	"Data": "。有了容器，就可以将软件运行所需的所有资源打包到一个隔离的容器中。容器与虚拟机不同，不需要捆绑一整套操作系统，只需要软件工作所需的库资源和设置。系统因此而变得高效轻量并保证部署在任何环境中的软件都能始终如一地运行。"
																}
															]
														},
														{
															"ID": "20221127162321-nclqp1d",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127162321-nclqp1d",
																"updated": "20221127162701"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统的虚拟机则是在硬件层面上实现虚拟化。与传统的虚拟机相比，docker优势体现在启动速度快，占用体积小。"
																}
															]
														}
													]
												},
												{
													"ID": "20221127162815-n5qe70e",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127162815-n5qe70e"
													},
													"Children": [
														{
															"ID": "20221127162815-k5x1nov",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127162815-k5x1nov",
																"updated": "20221127162819"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "对比"
																}
															]
														},
														{
															"ID": "20221127162820-0eyey0v",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127162820-0eyey0v",
																"updated": "20221127162827"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": " Docker 和传统虚拟化方式的不同之处："
																}
															]
														},
														{
															"ID": "20221127162827-4o1p7p5",
															"Type": "NodeList",
															"ListData": {
																"Typ": 1
															},
															"Properties": {
																"id": "20221127162827-4o1p7p5",
																"updated": "20221127162827"
															},
															"Children": [
																{
																	"ID": "20221127162827-0f0czjp",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MS4=",
																		"Num": 1
																	},
																	"Properties": {
																		"id": "20221127162827-0f0czjp",
																		"updated": "20221127162827"
																	},
																	"Children": [
																		{
																			"ID": "20221127162827-q9prh0l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127162827-q9prh0l",
																				"updated": "20221127162854"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "传统虚拟机技术是"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "虚拟出一套硬件"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "后，在其上"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "运行一个完整操作系统"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，在该系统上"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "再运行所需应用进程"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "；"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127162831-8t9pf0u",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Mi4=",
																		"Num": 2
																	},
																	"Properties": {
																		"id": "20221127162831-8t9pf0u"
																	},
																	"Children": [
																		{
																			"ID": "20221127162831-bzrk4bq",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127162831-bzrk4bq",
																				"updated": "20221127162902"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "容器内的应用进程"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "直接运行于宿主的内核"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，容器内没有自己的内核且也没有进行硬件虚拟。因此容器要比传统虚拟机"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "更为轻便"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127162839-lpbqfkl",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "My4=",
																		"Num": 3
																	},
																	"Properties": {
																		"id": "20221127162839-lpbqfkl"
																	},
																	"Children": [
																		{
																			"ID": "20221127162839-eb96qjt",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127162839-eb96qjt",
																				"updated": "20221127162908"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "每个"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "容器之间互相隔离"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127164258-uv7h6yc",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127164258-uv7h6yc"
													},
													"Children": [
														{
															"ID": "20221127164258-quyia54",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127164258-quyia54",
																"updated": "20221127164614"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker优点"
																}
															]
														},
														{
															"ID": "20221127164322-szcwd3m",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221127164322-szcwd3m",
																"updated": "20221127164335"
															},
															"Children": [
																{
																	"ID": "20221127164335-zeyt6i7",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127164335-zeyt6i7",
																		"updated": "20221127164335"
																	},
																	"Children": [
																		{
																			"ID": "20221127164335-y4xdjwq",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164335-y4xdjwq",
																				"updated": "20221127164358"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "更快的应用交付和部署"
																				}
																			]
																		},
																		{
																			"ID": "20221127164446-263o63d",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164446-263o63d",
																				"updated": "20221127164454"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "传统的应用开发完成后，需要提供一堆安装程序和配置说明"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "文档"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，安装部署后需根据配置"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "文档"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "进行繁杂的配置才能正常运行。Docker化之后只需要交付少量容器镜像文件，在正式生产环境加载镜像并运行即可，应用安装配置在镜像里已经内置好，大大节省部署配置和测试验证时间。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127164359-e2am2x5",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127164359-e2am2x5"
																	},
																	"Children": [
																		{
																			"ID": "20221127164359-yvpzvdw",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164359-yvpzvdw",
																				"updated": "20221127164414"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "更便捷的升级和扩缩容"
																				}
																			]
																		},
																		{
																			"ID": "20221127164457-tkufsap",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164457-tkufsap",
																				"updated": "20221127164508"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "随着微"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "服务"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "架构和Docker的发展，大量的应用会通过微"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "服务"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "方式架构，应用的开发构建将变成搭乐高积木一样，每个Docker容器将变成一块“积木”，应用的升级将变得非常容易。当现有的容器不足以支撑业务处理时，可通过镜像运行新的容器进行快速扩容，使应用系统的扩容从原先的天级变成分钟级甚至秒级。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127164414-dn3x9jr",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127164414-dn3x9jr"
																	},
																	"Children": [
																		{
																			"ID": "20221127164414-j7p4zrh",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164414-j7p4zrh",
																				"updated": "20221127164422"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "更简单的系统运维"
																				}
																			]
																		},
																		{
																			"ID": "20221127164510-1wj9kyf",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164510-1wj9kyf",
																				"updated": "20221127164520"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "应用容器化运行后，生产环境运行的应用可与开发、测试环境的应用高度一致，容器会将应用程序相关的环境和状态完全封装起来，不会因为底层基础架构和操作系统的不一致性给应用带来影响，产生新的BUG。当出现程序异常时，也可以通过测试环境的相同容器进行快速定位和修复。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127164423-yqi9qdn",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127164423-yqi9qdn"
																	},
																	"Children": [
																		{
																			"ID": "20221127164423-cfxz60f",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164423-cfxz60f",
																				"updated": "20221127164436"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "更高效的计算资源利用"
																				}
																			]
																		},
																		{
																			"ID": "20221127164523-s2ulp0u",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127164523-s2ulp0u",
																				"updated": "20221127164536"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Docker是内核级虚拟化，其不像传统的虚拟化技术一样需要额外的Hypervisor支持，所以在一台物理机上可以运行很多个容器实例，可大大提升物理"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "服务"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "器的CPU和内存的利用率。"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127212138-xdts8hd",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127212138-xdts8hd"
													},
													"Children": [
														{
															"ID": "20221127212138-pmaxrw0",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127212138-pmaxrw0",
																"updated": "20221127212614"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker为什么快"
																}
															]
														},
														{
															"ID": "20221127212149-ydkw7o0",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127212149-ydkw7o0",
																"updated": "20221127212533"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "(1)docker有着比虚拟机更少的抽象层"
																},
																{
																	"Type": "NodeText",
																	"Data": "\n   由于docker不需要Hypervisor(虚拟机)实现硬件资源虚拟化,运行在docker容器上的程序直接使用的都是实际物理机的硬件资源。因此在CPU、内存利用率上docker将会在效率上有明显优势。\n"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "(2)docker利用的是宿主机的内核,而不需要加载操作系统OS内核"
																},
																{
																	"Type": "NodeText",
																	"Data": "\n   当新建一个容器时,docker不需要和虚拟机一样重新加载一个操作系统内核。进而避免引寻、加载操作系统内核返回等比较费时费资源的过程,当新建一个虚拟机时,虚拟机软件需要加载OS,返回新建过程是分钟级别的。而docker由于直接利用宿主机的操作系统,则省略了返回过程,因此新建一个docker容器只需要几秒钟。"
																}
															]
														},
														{
															"ID": "20221127212240-9pmfwwv",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127212240-9pmfwwv",
																"updated": "20221127212517"
															},
															"Children": [
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "a",
																	"TextMarkAHref": "siyuan://blocks/20221127212412-k3sv713",
																	"TextMarkTextContent": "docker与VM架构对比"
																}
															]
														},
														{
															"ID": "20221127212259-rn40wio",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127212259-rn40wio",
																"updated": "20221127212335"
															},
															"Children": [
																{
																	"Type": "NodeImage",
																	"Data": "span",
																	"Properties": {
																		"parent-style": "max-width: 556px; display: block;",
																		"style": "width: 546px;"
																	},
																	"Children": [
																		{
																			"Type": "NodeBang"
																		},
																		{
																			"Type": "NodeOpenBracket"
																		},
																		{
																			"Type": "NodeLinkText",
																			"Data": "image"
																		},
																		{
																			"Type": "NodeCloseBracket"
																		},
																		{
																			"Type": "NodeOpenParen"
																		},
																		{
																			"Type": "NodeLinkDest",
																			"Data": "assets/image-20221127212300-6qq55ev.png"
																		},
																		{
																			"Type": "NodeCloseParen"
																		}
																	]
																},
																{
																	"Type": "NodeKramdownSpanIAL",
																	"Data": "{: style=\"width: 546px;\" parent-style=\"max-width: 556px; display: block;\"}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221127164647-daxue7q",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221127164647-daxue7q"
									},
									"Children": [
										{
											"ID": "20221127164647-oiyt90z",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221127164647-oiyt90z",
												"updated": "20221127164654"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker安装"
												}
											]
										},
										{
											"ID": "20221127164654-6dpa00w",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221127164654-6dpa00w",
												"updated": "20221127170731"
											},
											"Children": [
												{
													"ID": "20221127170731-8ht5v03",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221127170731-8ht5v03",
														"updated": "20221127170731"
													},
													"Children": [
														{
															"ID": "20221127170731-12eg243",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127170731-12eg243",
																"updated": "20221127190404"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "安装前提"
																}
															]
														},
														{
															"ID": "20221127170740-xd7gvvl",
															"Type": "NodeList",
															"ListData": {
																"Typ": 1
															},
															"Properties": {
																"id": "20221127170740-xd7gvvl",
																"updated": "20221127192117"
															},
															"Children": [
																{
																	"ID": "20221127192117-6bar15e",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MS4=",
																		"Num": 1
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127192117-6bar15e",
																		"updated": "20221127192117"
																	},
																	"Children": [
																		{
																			"ID": "20221127192117-8rsthcv",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127192117-8rsthcv",
																				"updated": "20221127192117"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Linux系统内核版本为 3.8以上"
																				}
																			]
																		},
																		{
																			"ID": "20221127170817-yra34uf",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127170817-yra34uf",
																				"updated": "20221127170831"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "查看系统内核版本\nuname -r"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127192136-uhlrk8e",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Mi4=",
																		"Num": 2
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127192136-uhlrk8e"
																	},
																	"Children": [
																		{
																			"ID": "20221127192136-tymqlyl",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127192136-tymqlyl",
																				"updated": "20221127192147"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "有gcc环境"
																				}
																			]
																		},
																		{
																			"ID": "20221127192147-rry8d1t",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127192147-rry8d1t",
																				"updated": "20221127192205"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "yum -y install gcc gcc-c++\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127192238-zkhysld",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "My4=",
																		"Num": 3
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127192238-zkhysld"
																	},
																	"Children": [
																		{
																			"ID": "20221127192238-tp2pf1a",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127192238-tp2pf1a",
																				"updated": "20221127192435"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "安装yum增强"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "工具"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "包"
																				}
																			]
																		},
																		{
																			"ID": "20221127192250-0r63y6u",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127192250-0r63y6u",
																				"updated": "20221127192254"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "yum install -y yum-utils\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127190005-03xry25",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221127190005-03xry25"
													},
													"Children": [
														{
															"ID": "20221127190005-6yef76r",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127190005-6yef76r",
																"updated": "20221127190023"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker的基本构成"
																}
															]
														},
														{
															"ID": "20221127190023-lc1cnqt",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221127190023-lc1cnqt",
																"updated": "20221127190025"
															},
															"Children": [
																{
																	"ID": "20221127190025-1oaknk0",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127190025-1oaknk0",
																		"updated": "20221127190025"
																	},
																	"Children": [
																		{
																			"ID": "20221127190025-49sl9u5",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190025-49sl9u5",
																				"updated": "20221127190354"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "镜像（image）"
																				}
																			]
																		},
																		{
																			"ID": "20221127190105-vagoz34",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190105-vagoz34",
																				"updated": "20221127190140"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Docker 镜像（Image）就是一个"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "只读的模板"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "。镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。\n它也相当于是一个root文件系统。比如官方镜像 centos:7 就包含了完整的一套 centos:7 最小系统的 root 文件系统。\n相当于容器的“源代码”，docker镜像文件类似于Java的类模板，而docker容器实例类似于java中new出来的实例对象。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127190038-bx5k0c8",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127190038-bx5k0c8"
																	},
																	"Children": [
																		{
																			"ID": "20221127190038-o7evo9q",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190038-o7evo9q",
																				"updated": "20221127190047"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "容器（container）"
																				}
																			]
																		},
																		{
																			"ID": "20221127190159-g1w6okc",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190159-g1w6okc",
																				"updated": "20221127190311"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "1 从面向对象角度\nDocker 利用容器（Container）独立运行的一个或一组应用，应用程序或"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "服务"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "运行在容器里面，容器就类似于一个虚拟化的运行环境，容器是用镜像创建的运行实例。就像是Java中的类和实例对象一样，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "镜像是静态的定义，容器是镜像运行时的实体"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "。容器为镜像提供了一个标准的和隔离的运行环境，它可以被启动、开始、停止、删除。每个容器都是"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "相互隔离"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "的、保证安全的平台"
																				}
																			]
																		},
																		{
																			"ID": "20221127190159-3mvbx42",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190159-3mvbx42",
																				"updated": "20221127190159"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "2 从镜像容器角度\n可以把容器看做是一个简易版的 Linux 环境（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127190048-kke6djl",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127190048-kke6djl"
																	},
																	"Children": [
																		{
																			"ID": "20221127190048-bp88qb4",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190048-bp88qb4",
																				"updated": "20221127190100"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "仓库（repository）"
																				}
																			]
																		},
																		{
																			"ID": "20221127190316-0ozgwkx",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190316-0ozgwkx",
																				"updated": "20221127190328"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "仓库（Repository）是集中存放镜像文件的场所。"
																				}
																			]
																		},
																		{
																			"ID": "20221127190341-242vho0",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190341-242vho0",
																				"updated": "20221127190341"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "类似于\nMaven仓库，存放各种jar包的地方；\ngithub仓库，存放各种git项目的地方；\nDocker公司提供的官方registry被称为Docker Hub，存放各种镜像模板的地方。"
																				}
																			]
																		},
																		{
																			"ID": "20221127190341-q6wb2sc",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127190341-q6wb2sc",
																				"updated": "20221127190341"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "仓库分为公开仓库（Public）和私有仓库（Private）两种形式。\n最大的公开仓库是 Docker Hub(https://hub.docker.com/)，\n存放了数量庞大的镜像供用户下载。国内的公开仓库包括"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "阿里云"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " 、网易云等"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127190427-kjqolh9",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127190427-kjqolh9"
													},
													"Children": [
														{
															"ID": "20221127190427-p8l2mdt",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127190427-p8l2mdt",
																"updated": "20221127192034"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "安装"
																}
															]
														},
														{
															"ID": "20221127192037-j12qubg",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221127192037-j12qubg",
																"updated": "20221127192039"
															},
															"Children": [
																{
																	"ID": "20221127192039-wde6i4l",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127192039-wde6i4l",
																		"updated": "20221127192039"
																	},
																	"Children": [
																		{
																			"ID": "20221127192039-s082l45",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127192039-s082l45",
																				"updated": "20221127192058"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "卸载旧版本"
																				}
																			]
																		},
																		{
																			"ID": "20221127192044-s1mslsx",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127192044-s1mslsx",
																				"updated": "20221127192048"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": " sudo yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127205025-275e35i",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "0",
																		"id": "20221127205025-275e35i"
																	},
																	"Children": [
																		{
																			"ID": "20221127205025-5678gbx",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127205025-5678gbx",
																				"updated": "20221127205052"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "添加repo源"
																				}
																			]
																		},
																		{
																			"ID": "20221127205052-x7a6zhy",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127205052-x7a6zhy",
																				"updated": "20221127205100"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "使用阿里的源"
																				}
																			]
																		},
																		{
																			"ID": "20221127205028-bc6n7z7",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127205028-bc6n7z7",
																				"updated": "20221127205203"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\nyum makecache fast\t\t\t# 重新建立缓存\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127205207-iplniji",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "0",
																		"id": "20221127205207-iplniji"
																	},
																	"Children": [
																		{
																			"ID": "20221127205207-ghfa3f1",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127205207-ghfa3f1",
																				"updated": "20221127205253"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "安装docker"
																				}
																			]
																		},
																		{
																			"ID": "20221127205217-kl12cmu",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127205217-kl12cmu",
																				"updated": "20221127205235"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "yum -y install docker-ce docker-ce-cli containerd.io\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127205258-pmbayej",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "0",
																		"id": "20221127205258-pmbayej"
																	},
																	"Children": [
																		{
																			"ID": "20221127205258-4fl39ot",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127205258-4fl39ot",
																				"updated": "20221127205308"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "启动docker"
																				}
																			]
																		},
																		{
																			"ID": "20221127205308-ekx7qic",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127205308-ekx7qic",
																				"updated": "20221127205356"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "systemctl start docker\ndocker version\t\t# 查看docker版本\ndocker run hello-world\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127205832-w99nt2a",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127205832-w99nt2a"
																	},
																	"Children": [
																		{
																			"ID": "20221127205832-k2p7a6j",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127205832-k2p7a6j",
																				"updated": "20221127205838"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "卸载docker"
																				}
																			]
																		},
																		{
																			"ID": "20221127205839-mrpnjgv",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221127205839-mrpnjgv",
																				"updated": "20221127205911"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "systemctl stop docker\nyum remove docker-ce docker-ce-cli containerd.io\nrm -rf /var/lib/docker\nrm -rf /var/lib/containerd\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127210402-t8mk164",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127210402-t8mk164"
													},
													"Children": [
														{
															"ID": "20221127210402-4g31uvf",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127210402-4g31uvf",
																"updated": "20221127210422"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "阿里云"
																},
																{
																	"Type": "NodeText",
																	"Data": "镜像加速器"
																}
															]
														},
														{
															"ID": "20221127210423-udxljqk",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127210423-udxljqk",
																"updated": "20221127210459"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "打开"
																},
																{
																	"Type": "NodeText",
																	"Data": "阿里云"
																},
																{
																	"Type": "NodeText",
																	"Data": "-容器镜像"
																},
																{
																	"Type": "NodeText",
																	"Data": "服务"
																},
																{
																	"Type": "NodeText",
																	"Data": "-镜像"
																},
																{
																	"Type": "NodeText",
																	"Data": "工具"
																},
																{
																	"Type": "NodeText",
																	"Data": "-镜像加速器"
																}
															]
														},
														{
															"ID": "20221127210500-6wmrz63",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127210500-6wmrz63",
																"updated": "20221127210507"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "复制加速器地址"
																}
															]
														},
														{
															"ID": "20221127210848-uo5wv61",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127210848-uo5wv61",
																"updated": "20221127210901"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "运行以下代码"
																}
															]
														},
														{
															"ID": "20221127210614-pv65uzi",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"id": "20221127210614-pv65uzi",
																"updated": "20221127210841"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "c2g="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "sudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json \u003c\u003c-'EOF'\n{\n  \"registry-mirrors\": [\"https://bet0g157.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221127212625-ght31j4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "0",
										"id": "20221127212625-ght31j4",
										"updated": "20221214055700"
									},
									"Children": [
										{
											"ID": "20221127212625-ic4zeei",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221127212625-ic4zeei",
												"updated": "20221127212642"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker常用命令"
												}
											]
										},
										{
											"ID": "20221127213957-vf3cz79",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221127213957-vf3cz79",
												"updated": "20221214055700"
											},
											"Children": [
												{
													"ID": "20221127213954-3esr57f",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127213954-3esr57f",
														"updated": "20221128233832"
													},
													"Children": [
														{
															"ID": "20221127213954-twu07q5",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127213954-twu07q5",
																"updated": "20221127214011"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "镜像命令"
																}
															]
														},
														{
															"ID": "20221127214005-xhqwmok",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221127214005-xhqwmok",
																"updated": "20221128233832"
															},
															"Children": [
																{
																	"ID": "20221127214014-7ov9x09",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127214014-7ov9x09",
																		"updated": "20221127214014"
																	},
																	"Children": [
																		{
																			"ID": "20221127214014-qpxxefl",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214014-qpxxefl",
																				"updated": "20221127214027"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker images"
																				}
																			]
																		},
																		{
																			"ID": "20221127214027-rprnp7i",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214027-rprnp7i",
																				"updated": "20221127214046"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "列出当前主机的所有镜像"
																				}
																			]
																		},
																		{
																			"ID": "20221127214237-e1ouob9",
																			"Type": "NodeSuperBlock",
																			"Properties": {
																				"id": "20221127214237-e1ouob9"
																			},
																			"Children": [
																				{
																					"Type": "NodeSuperBlockOpenMarker"
																				},
																				{
																					"Type": "NodeSuperBlockLayoutMarker",
																					"Data": "row"
																				},
																				{
																					"ID": "20221127214121-mhb0ibq",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221127214121-mhb0ibq",
																						"updated": "20221127214346"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "\t镜像的仓库源\t镜像的标签的版本\t镜像id\t\t\t状态\t\t\t\t镜像大小"
																						}
																					]
																				},
																				{
																					"ID": "20221127214046-0bbtkzf",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221127214046-0bbtkzf",
																						"updated": "20221127214116"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "​"
																						},
																						{
																							"Type": "NodeImage",
																							"Data": "span",
																							"Children": [
																								{
																									"Type": "NodeBang"
																								},
																								{
																									"Type": "NodeOpenBracket"
																								},
																								{
																									"Type": "NodeLinkText",
																									"Data": "image"
																								},
																								{
																									"Type": "NodeCloseBracket"
																								},
																								{
																									"Type": "NodeOpenParen"
																								},
																								{
																									"Type": "NodeLinkDest",
																									"Data": "assets/image-20221127214116-md6vzqu.png"
																								},
																								{
																									"Type": "NodeCloseParen"
																								}
																							]
																						},
																						{
																							"Type": "NodeText",
																							"Data": "​"
																						}
																					]
																				},
																				{
																					"Type": "NodeSuperBlockCloseMarker"
																				}
																			]
																		},
																		{
																			"ID": "20221127214423-xhpaszo",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214423-xhpaszo",
																				"updated": "20221127214432"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项"
																				}
																			]
																		},
																		{
																			"ID": "20221127214432-15x0h9l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214432-15x0h9l",
																				"updated": "20221127214501"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-a\t列出本地所有的镜像（含历史映像层）"
																				}
																			]
																		},
																		{
																			"ID": "20221127214502-m14nswu",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214502-m14nswu",
																				"updated": "20221127214517"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-q\t只显示镜像id"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127214537-7j9b54c",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127214537-7j9b54c"
																	},
																	"Children": [
																		{
																			"ID": "20221127214537-ec08q0l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214537-ec08q0l",
																				"updated": "20221127214627"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker search  \u003c镜像名\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127214628-rc2sd8w",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214628-rc2sd8w",
																				"updated": "20221127214646"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在远程仓库中搜索镜像"
																				}
																			]
																		},
																		{
																			"ID": "20221127215024-y90kuby",
																			"Type": "NodeSuperBlock",
																			"Properties": {
																				"id": "20221127215024-y90kuby"
																			},
																			"Children": [
																				{
																					"Type": "NodeSuperBlockOpenMarker"
																				},
																				{
																					"Type": "NodeSuperBlockLayoutMarker",
																					"Data": "row"
																				},
																				{
																					"ID": "20221127214915-lz0lkx9",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221127214915-lz0lkx9",
																						"updated": "20221127215016"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "镜像名称\t\t\t\t\t\t\t\t镜像说明\t\t\t\t\t\t点赞数\t\t\t是否官方\t\t是否是自动构建的"
																						}
																					]
																				},
																				{
																					"ID": "20221127214834-7m1g961",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221127214834-7m1g961",
																						"updated": "20221127214913"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "​"
																						},
																						{
																							"Type": "NodeImage",
																							"Data": "span",
																							"Children": [
																								{
																									"Type": "NodeBang"
																								},
																								{
																									"Type": "NodeOpenBracket"
																								},
																								{
																									"Type": "NodeLinkText",
																									"Data": "image"
																								},
																								{
																									"Type": "NodeCloseBracket"
																								},
																								{
																									"Type": "NodeOpenParen"
																								},
																								{
																									"Type": "NodeLinkDest",
																									"Data": "assets/image-20221127214913-ckql8pr.png"
																								},
																								{
																									"Type": "NodeCloseParen"
																								}
																							]
																						},
																						{
																							"Type": "NodeText",
																							"Data": "​"
																						}
																					]
																				},
																				{
																					"Type": "NodeSuperBlockCloseMarker"
																				}
																			]
																		},
																		{
																			"ID": "20221127215150-tu9m2nt",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127215150-tu9m2nt",
																				"updated": "20221127215157"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "参数"
																				}
																			]
																		},
																		{
																			"ID": "20221127215157-zibvow4",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127215157-zibvow4",
																				"updated": "20221127215236"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t--limit N\t\t只列出N个镜像，默认25个"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127214647-66ebxb2",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127214647-66ebxb2"
																	},
																	"Children": [
																		{
																			"ID": "20221127214647-zgnj9wh",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127214647-zgnj9wh",
																				"updated": "20221127215358"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker pull \u003c镜像名\u003e[:tag]"
																				}
																			]
																		},
																		{
																			"ID": "20221127215402-lkhotgr",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127215402-lkhotgr",
																				"updated": "20221127215446"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "下载镜像 ，没有加tag就下载最新版"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127215503-0uicpqt",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127215503-0uicpqt"
																	},
																	"Children": [
																		{
																			"ID": "20221127215503-m5vfuhp",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127215503-m5vfuhp",
																				"updated": "20221127220603"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker system df"
																				}
																			]
																		},
																		{
																			"ID": "20221127220605-dn8tq3a",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220605-dn8tq3a",
																				"updated": "20221127220619"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "查看镜像/容器/数据卷所占的空间"
																				}
																			]
																		},
																		{
																			"ID": "20221127220622-64ihp2l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220622-64ihp2l",
																				"updated": "20221127220652"
																			},
																			"Children": [
																				{
																					"Type": "NodeImage",
																					"Data": "span",
																					"Properties": {
																						"parent-style": "max-width: 633px; display: block;",
																						"style": "width: 623px;"
																					},
																					"Children": [
																						{
																							"Type": "NodeBang"
																						},
																						{
																							"Type": "NodeOpenBracket"
																						},
																						{
																							"Type": "NodeLinkText",
																							"Data": "image"
																						},
																						{
																							"Type": "NodeCloseBracket"
																						},
																						{
																							"Type": "NodeOpenParen"
																						},
																						{
																							"Type": "NodeLinkDest",
																							"Data": "assets/image-20221127220646-79bk3z6.png"
																						},
																						{
																							"Type": "NodeCloseParen"
																						}
																					]
																				},
																				{
																					"Type": "NodeKramdownSpanIAL",
																					"Data": "{: style=\"width: 623px;\" parent-style=\"max-width: 633px; display: block;\"}"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127220737-u1wqaxy",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127220737-u1wqaxy"
																	},
																	"Children": [
																		{
																			"ID": "20221127220737-wzey9xa",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220737-wzey9xa",
																				"updated": "20221127220944"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker  rmi  \u003c镜像名或id\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127220802-wmps4e3",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220802-wmps4e3",
																				"updated": "20221127220819"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "删除当前主机上的镜像"
																				}
																			]
																		},
																		{
																			"ID": "20221127220822-cjii0uj",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220822-cjii0uj",
																				"updated": "20221127220824"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项"
																				}
																			]
																		},
																		{
																			"ID": "20221127220825-x5bzi06",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127220825-x5bzi06",
																				"updated": "20221127220834"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-f \t\t强制删除"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128233510-7fqk73d",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128233510-7fqk73d",
																		"updated": "20221128233832"
																	},
																	"Children": [
																		{
																			"ID": "20221128233510-7ez1s9x",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233510-7ez1s9x",
																				"updated": "20221128233517"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker commit "
																				}
																			]
																		},
																		{
																			"ID": "20221128233524-9we0dlz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233524-9we0dlz",
																				"updated": "20221128233553"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "提交容器，使其成为一个新的镜像"
																				}
																			]
																		},
																		{
																			"ID": "20221128233732-mhzmy77",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221128233732-mhzmy77",
																				"updated": "20221214000527"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker commit  [选项] 容器id  创建的镜像名:[标签名]\ndocker commit -m=\"vim add ok\" -a=\"awang\" 5e32ce1f8199  atguigu/ubuntu_vim:1.0\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		},
																		{
																			"ID": "20221128233554-2ju5k2v",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233554-2ju5k2v",
																				"updated": "20221128233622"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项："
																				}
																			]
																		},
																		{
																			"ID": "20221128233622-p1bv5uv",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233622-p1bv5uv",
																				"updated": "20221128233648"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-m=\"要提交的信息\""
																				}
																			]
																		},
																		{
																			"ID": "20221128233650-t19h8w1",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233650-t19h8w1",
																				"updated": "20221128233709"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-a=\"作者名\""
																				}
																			]
																		},
																		{
																			"ID": "20221128233711-ggr9qcq",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128233711-ggr9qcq"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221127221750-r0d8ic2",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221127221750-r0d8ic2",
														"updated": "20221214055700"
													},
													"Children": [
														{
															"ID": "20221127221750-v7gddxw",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221127221750-v7gddxw",
																"updated": "20221127221759"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "容器命令"
																}
															]
														},
														{
															"ID": "20221127221800-2owqzge",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221127221800-2owqzge",
																"updated": "20221214055700"
															},
															"Children": [
																{
																	"ID": "20221127221802-im89etw",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127221802-im89etw",
																		"updated": "20221214055651"
																	},
																	"Children": [
																		{
																			"ID": "20221127221802-gj8914h",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127221802-gj8914h",
																				"updated": "20221214055651"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "docker run"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " \u003c镜像名或镜像id\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127222750-m12sbn5",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127222750-m12sbn5",
																				"updated": "20221127223449"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项： "
																				}
																			]
																		},
																		{
																			"ID": "20221127222812-ydt8o72",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127222812-ydt8o72",
																				"updated": "20221127222843"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t--name=\"容器的新名字\"\t\t为容器指定一个名称"
																				}
																			]
																		},
																		{
																			"ID": "20221127222851-z8p6vau",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127222851-z8p6vau",
																				"updated": "20221127222949"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-d\t\t\t\t后台运行容器并返回容器id，即启动守护式容器（后台运行）"
																				}
																			]
																		},
																		{
																			"ID": "20221127223012-s653ktn",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127223012-s653ktn",
																				"updated": "20221127223046"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-i\t\t\t\t以交互模式运行容器，通常与 -t 同时使用"
																				}
																			]
																		},
																		{
																			"ID": "20221127223047-9vuqd7o",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127223047-9vuqd7o",
																				"updated": "20221127223120"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-t\t\t\t\t为容器重新分配一个伪终端，通常与 -i 同时使用"
																				}
																			]
																		},
																		{
																			"ID": "20221127223126-5rzqbj9",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127223126-5rzqbj9",
																				"updated": "20221127223158"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-P\t\t\t\t随机端口映射，大写P"
																				}
																			]
																		},
																		{
																			"ID": "20221127223159-i1h23ej",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127223159-i1h23ej",
																				"updated": "20221127223318"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-p 主机端口:容器内端口\t\t指定端口映射，小写p 格式    "
																				}
																			]
																		},
																		{
																			"ID": "20221214041331-ez9rg7v",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214041331-ez9rg7v",
																				"updated": "20221214041351"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-e username=\"ritchie\"\t\t 设置环境变量"
																				}
																			]
																		},
																		{
																			"ID": "20221127223320-8jrd3sg",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127223320-8jrd3sg"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t"
																				}
																			]
																		},
																		{
																			"ID": "20221127222721-8o5kexg",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127222721-8o5kexg"
																			}
																		}
																	]
																},
																{
																	"ID": "20221127230023-hd87d4y",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127230023-hd87d4y",
																		"updated": "20221214055655"
																	},
																	"Children": [
																		{
																			"ID": "20221127230023-1hvp588",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230023-1hvp588",
																				"updated": "20221214055655"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "docker ps"
																				}
																			]
																		},
																		{
																			"ID": "20221127230031-udwokqb",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230031-udwokqb",
																				"updated": "20221127230046"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "列出当前正在运行的容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127230048-4way48d",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230048-4way48d",
																				"updated": "20221127230053"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项"
																				}
																			]
																		},
																		{
																			"ID": "20221127230054-9b73csc",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230054-9b73csc",
																				"updated": "20221127230848"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-a\t\t列出所有正在运行的容器和"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "未运行的"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127230719-tema3gw",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230719-tema3gw",
																				"updated": "20221127230801"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-l\t\t显示最近创建的容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127230901-qgl6aj9",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230901-qgl6aj9",
																				"updated": "20221127230932"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-q\t\t只显示容器编号"
																				}
																			]
																		},
																		{
																			"ID": "20221127230935-ccavw0s",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230935-ccavw0s",
																				"updated": "20221127231031"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-n \u003cN\u003e\t只显示最近创建的N个容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127230802-u6tx52l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127230802-u6tx52l",
																				"updated": "20221127230816"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127231644-o3a3r6t",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127231644-o3a3r6t"
																	},
																	"Children": [
																		{
																			"ID": "20221127231644-bptfqza",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127231644-bptfqza",
																				"updated": "20221127231716"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker start \u003c容器id或容器名\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127231717-bb6qq62",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127231717-bb6qq62",
																				"updated": "20221127231731"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "启动已经停止的容器"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127232028-tvnym0a",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127232028-tvnym0a"
																	},
																	"Children": [
																		{
																			"ID": "20221127232028-mlf4cp2",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232028-mlf4cp2",
																				"updated": "20221127232046"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker restart \u003c容器id或容器名\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127232047-p1bzt2x",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232047-p1bzt2x",
																				"updated": "20221127232053"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "重启容器"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127232053-x10m5b6",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127232053-x10m5b6"
																	},
																	"Children": [
																		{
																			"ID": "20221127232053-4jbz9ce",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232053-4jbz9ce",
																				"updated": "20221127232105"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker kill \u003c容器id或容器名\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127232106-6wnng44",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232106-6wnng44",
																				"updated": "20221127232121"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "强制停止容器，杀死容器"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127232122-ualmenb",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127232122-ualmenb"
																	},
																	"Children": [
																		{
																			"ID": "20221127232122-mgo2gc2",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232122-mgo2gc2",
																				"updated": "20221127232240"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker "
																				},
																				{
																					"Type": "NodeText",
																					"Data": "rm"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " \u003c容器id或容器名\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127232241-5mtxubr",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232241-5mtxubr",
																				"updated": "20221127232253"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "删除"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "已停止"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "的容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127232431-1bi0kqs",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232431-1bi0kqs",
																				"updated": "20221127232434"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项"
																				}
																			]
																		},
																		{
																			"ID": "20221127232437-78lslq5",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127232437-78lslq5",
																				"updated": "20221127232458"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-f \t\t强制删除容器，可以删除正在运行的容器"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128001159-i10so1t",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128001159-i10so1t",
																		"updated": "20221214055700"
																	},
																	"Children": [
																		{
																			"ID": "20221128001159-dq4vhll",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001159-dq4vhll",
																				"updated": "20221214055700"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "docker exec"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "  \u003c容器id\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221128001242-yuw4vu3",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001242-yuw4vu3",
																				"updated": "20221128001806"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "可以在"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "正在运行的容器"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "内直接执行任意命令"
																				}
																			]
																		},
																		{
																			"ID": "20221128001651-t8j2fta",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001651-t8j2fta",
																				"updated": "20221128001707"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker exec  -it \u003c容器id\u003e /bin/bash"
																				}
																			]
																		},
																		{
																			"ID": "20221128001810-8suk2gu",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001810-8suk2gu",
																				"updated": "20221128002111"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "启用一个新的bash终端，使用exit退出不会停止容器"
																				}
																			]
																		},
																		{
																			"ID": "20221128001354-edclv2k",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001354-edclv2k",
																				"updated": "20221128001413"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "选项"
																				}
																			]
																		},
																		{
																			"ID": "20221128001415-xx9de4f",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001415-xx9de4f",
																				"updated": "20221128001415"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-d\t\t\t\t后台运行容器并返回容器id，即启动守护式容器（后台运行）"
																				}
																			]
																		},
																		{
																			"ID": "20221128001415-cg5gzm8",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001415-cg5gzm8",
																				"updated": "20221128001415"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-i\t\t\t\t以交互模式运行容器，通常与 -t 同时使用"
																				}
																			]
																		},
																		{
																			"ID": "20221128001415-ynkvwto",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001415-ynkvwto",
																				"updated": "20221128001415"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t-t\t\t\t\t为容器重新分配一个伪终端，通常与 -i 同时使用"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128001431-sooo649",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128001431-sooo649"
																	},
																	"Children": [
																		{
																			"ID": "20221128001431-j1dta58",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001431-j1dta58",
																				"updated": "20221128001450"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker  "
																				},
																				{
																					"Type": "NodeText",
																					"Data": "at"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "tach \u003c容器id\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221128002553-ofts6l5",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128002553-ofts6l5",
																				"updated": "20221128002554"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker "
																				},
																				{
																					"Type": "NodeText",
																					"Data": "at"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "tach 本质是直接连接到了上次旧的bash"
																				}
																			]
																		},
																		{
																			"ID": "20221128001451-q83rmle",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128001451-q83rmle",
																				"updated": "20221128002120"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "直接进入正在运行的容器，不启用新的bash，使用exit退出，将导致容器停止"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128003926-2t67397",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128003926-2t67397"
																	},
																	"Children": [
																		{
																			"ID": "20221128003926-iw2ak2l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128003926-iw2ak2l",
																				"updated": "20221128004124"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker "
																				},
																				{
																					"Type": "NodeText",
																					"Data": "cp"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " 容器id:容器内路径   主机路径"
																				}
																			]
																		},
																		{
																			"ID": "20221128004036-37tdk63",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128004036-37tdk63",
																				"updated": "20221128004057"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "将容器内的文件复制到主机"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128004335-s15hrii",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128004335-s15hrii"
																	},
																	"Children": [
																		{
																			"ID": "20221128004335-mcghyuz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128004335-mcghyuz",
																				"updated": "20221128004444"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker export   容器id   \u003e  xxx."
																				},
																				{
																					"Type": "NodeText",
																					"Data": "tar"
																				}
																			]
																		},
																		{
																			"ID": "20221128004445-5b3oe6y",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128004445-5b3oe6y",
																				"updated": "20221128004954"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "将容器作为一个 镜像 进行导出"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128004510-r6biyvy",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128004510-r6biyvy"
																	},
																	"Children": [
																		{
																			"ID": "20221128004510-crsdap2",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128004510-crsdap2",
																				"updated": "20221128004639"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker  import"
																				}
																			]
																		},
																		{
																			"ID": "20221128004640-8vd2lyt",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128004640-8vd2lyt",
																				"updated": "20221128004716"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "将导出的容器，作为新的镜像导入。"
																				}
																			]
																		},
																		{
																			"ID": "20221128004717-hk7eahf",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221128004717-hk7eahf",
																				"updated": "20221128004853"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "c2g="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "cat  xxx.tar | docker import - 镜像所属/镜像名:镜像版本号\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221127231121-jtgzqdi",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127231121-jtgzqdi"
																	},
																	"Children": [
																		{
																			"ID": "20221127231121-h9h12hf",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221127231121-h9h12hf",
																				"updated": "20221128000504"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "退出容器"
																				}
																			]
																		},
																		{
																			"ID": "20221127231249-lt6i4hi",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20221127231249-lt6i4hi",
																				"updated": "20221127231251"
																			},
																			"Children": [
																				{
																					"ID": "20221127231251-gijkrz2",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20221127231251-gijkrz2",
																						"updated": "20221127231251"
																					},
																					"Children": [
																						{
																							"ID": "20221127231251-h9a0bkk",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221127231251-h9a0bkk",
																								"updated": "20221127231302"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "容器内 exit"
																								}
																							]
																						},
																						{
																							"ID": "20221127231304-v6psrbk",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221127231304-v6psrbk",
																								"updated": "20221127231322"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "run 进去容器，exit 退出，容器停止"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221127231323-udwrdv5",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20221127231323-udwrdv5"
																					},
																					"Children": [
																						{
																							"ID": "20221127231323-526e6gn",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221127231323-526e6gn",
																								"updated": "20221127231340"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "容器内 ctrl+p+q"
																								}
																							]
																						},
																						{
																							"ID": "20221127231341-omlya61",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221127231341-omlya61",
																								"updated": "20221127231403"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "run 进去容器，ctrl+p+q退出容器，容器不停止"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221128000101-6blwoe2",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221128000101-6blwoe2"
													},
													"Children": [
														{
															"ID": "20221128000101-imghjl0",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221128000101-imghjl0",
																"updated": "20221128000136"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "日志命令"
																}
															]
														},
														{
															"ID": "20221128000058-4p227cb",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221128000058-4p227cb",
																"updated": "20221128000058"
															},
															"Children": [
																{
																	"ID": "20221127233455-wp7otmt",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221127233455-wp7otmt"
																	},
																	"Children": [
																		{
																			"ID": "20221127233455-4yn4fv4",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127233455-4yn4fv4",
																				"updated": "20221127235652"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker logs \u003c容器id\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221127235653-fpvscnv",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221127235653-fpvscnv",
																				"updated": "20221127235704"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "查看容器日志"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128000253-im1c9ws",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128000253-im1c9ws"
																	},
																	"Children": [
																		{
																			"ID": "20221128000253-nywu1fc",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128000253-nywu1fc",
																				"updated": "20221128000616"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker "
																				},
																				{
																					"Type": "NodeText",
																					"Data": "top"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "  \u003c容器ID\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221128000555-irs04ho",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128000555-irs04ho",
																				"updated": "20221128000609"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "查看容器内运行的进程"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128000643-s3u4uea",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128000643-s3u4uea"
																	},
																	"Children": [
																		{
																			"ID": "20221128000643-0jn8pdk",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128000643-0jn8pdk",
																				"updated": "20221128000707"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker inspect \u003c容器ID\u003e"
																				}
																			]
																		},
																		{
																			"ID": "20221128000708-zp1bhay",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128000708-zp1bhay",
																				"updated": "20221128000822"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "获取容器/镜像的元数据。"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221128005212-1x58elz",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221128005212-1x58elz",
														"updated": "20221128005722"
													},
													"Children": [
														{
															"ID": "20221128005212-ii5963e",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221128005212-ii5963e",
																"updated": "20221128005226"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "其它"
																}
															]
														},
														{
															"ID": "20221128005226-3d4av07",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221128005226-3d4av07",
																"updated": "20221128005722"
															},
															"Children": [
																{
																	"Type": "NodeImage",
																	"Data": "span",
																	"Properties": {
																		"parent-style": "max-width: 577px; display: block;",
																		"style": "width: 567px;"
																	},
																	"Children": [
																		{
																			"Type": "NodeBang"
																		},
																		{
																			"Type": "NodeOpenBracket"
																		},
																		{
																			"Type": "NodeLinkText",
																			"Data": "图像"
																		},
																		{
																			"Type": "NodeCloseBracket"
																		},
																		{
																			"Type": "NodeOpenParen"
																		},
																		{
																			"Type": "NodeLinkDest",
																			"Data": "assets/图像-20221128005714-ufw6yi3.png"
																		},
																		{
																			"Type": "NodeCloseParen"
																		}
																	]
																},
																{
																	"Type": "NodeKramdownSpanIAL",
																	"Data": "{: style=\"width: 567px;\" parent-style=\"max-width: 577px; display: block;\"}"
																}
															]
														},
														{
															"ID": "20221128005745-0r7y1tn",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"custom-render": "scroll",
																"id": "20221128005745-0r7y1tn",
																"updated": "20221128010412"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "c2g="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "attach\t\t\t\t\t# 当前 shell 下 attach 连接指定运行镜像\nbuild   \t\t\t   \t# 通过 Dockerfile 定制镜像\ncommit \t\t\t\t\t# 提交当前容器为新的镜像\ncp      \t\t\t \t#从容器中拷贝指定文件或者目录到宿主机中\ncreate  \t\t\t\t# 创建一个新的容器，同 run，但不启动容器\ndiff    \t\t\t   \t# 查看 docker 容器变化\nevents  \t\t\t  \t# 从 docker 服务获取容器实时事件\nexec    \t\t\t   \t# 在已存在的容器上运行命令\nexport  \t\t\t   \t# 导出容器的内容流作为一个 tar 归档文件[对应 import ]\nhistory \t\t\t   \t# 展示一个镜像形成历史\nimages  \t\t\t   \t# 列出系统当前镜像\nimport  \t\t\t   \t# 从tar包中的内容创建一个新的文件系统映像[对应export]\ninfo    \t\t\t   \t# 显示系统相关信息\ninspect \t\t\t   \t# 查看容器详细信息\nkill    \t\t\t   \t# kill 指定 docker 容器\nload    \t\t\t   \t# 从一个 tar 包中加载一个镜像[对应 save]\nlogin   \t\t\t   \t# 注册或者登陆一个 docker 源服务器\nlogout  \t\t\t   \t# 从当前 Docker registry 退出\nlogs    \t\t\t   \t# 输出当前容器日志信息\nport    \t\t\t   \t# 查看映射端口对应的容器内部源端口\npause   \t\t\t   \t# 暂停容器\nps      \t\t\t   \t# 列出容器列表\npull    \t\t\t   \t# 从docker镜像源服务器拉取指定镜像或者库镜像\npush    \t\t\t   \t# 推送指定镜像或者库镜像至docker源服务器\nrestart \t\t\t   \t# 重启运行的容器\nrm      \t\t\t   \t# 移除一个或者多个容器\nrmi     \t\t\t   \t# 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]\nrun     \t\t\t   \t# 创建一个新的容器并运行一个命令\nsave    \t\t\t   \t# 保存一个镜像为一个 tar 包[对应 load]\nsearch  \t\t\t   \t# 在 docker hub 中搜索镜像\nstart   \t\t\t   \t# 启动容器\nstop    \t\t\t   \t# 停止容器\ntag     \t\t\t   \t# 给源中镜像打标签\ntop     \t\t\t   \t# 查看容器中运行的进程信息\nunpause \t\t\t   \t# 取消暂停容器\nversion \t\t\t   \t# 查看 docker 版本号\nwait    \t\t\t   \t# 截取容器停止时的退出状态值\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221128141512-h45vpcl",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221128141512-h45vpcl",
										"updated": "20221128141653"
									},
									"Children": [
										{
											"ID": "20221128141512-4yshx05",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221128141512-4yshx05",
												"updated": "20221128141537"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker镜像"
												}
											]
										},
										{
											"ID": "20221128141543-vaakdpx",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221128141543-vaakdpx",
												"updated": "20221128141653"
											},
											"Children": [
												{
													"ID": "20221128141653-mitkl86",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221128141653-mitkl86",
														"updated": "20221128141653"
													},
													"Children": [
														{
															"ID": "20221128141653-fcwuam4",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221128141653-fcwuam4",
																"updated": "20221128141708"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "什么是镜像"
																}
															]
														},
														{
															"ID": "20221128141710-2itlmat",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221128141710-2itlmat",
																"updated": "20221128141744"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "镜像\n是一种轻量级、可执行的独立软件包，它"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "包含运行某个软件所需的所有内容"
																},
																{
																	"Type": "NodeText",
																	"Data": "，我们把应用程序和配置依赖打包好形成一个可交付的运行环境(包括代码、运行时需要的库、环境变量和配置文件等)，这个"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "打包好的运行环境就是image镜像文件"
																},
																{
																	"Type": "NodeText",
																	"Data": "。"
																}
															]
														},
														{
															"ID": "20221128141710-mgbc14d",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221128141710-mgbc14d",
																"updated": "20221128141710"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "只有通过这个镜像文件才能生成Docker容器实例(类似Java中new出来一个对象)。"
																}
															]
														}
													]
												},
												{
													"ID": "20221128141716-wruqnm5",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221128141716-wruqnm5"
													},
													"Children": [
														{
															"ID": "20221128141716-dduvezg",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221128141716-dduvezg",
																"updated": "20221128152343"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "镜像与分层"
																}
															]
														},
														{
															"ID": "20221128154131-fpkthid",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221128154131-fpkthid",
																"updated": "20221128154135"
															},
															"Children": [
																{
																	"ID": "20221128154135-j0b383h",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221128154135-j0b383h",
																		"updated": "20221128154135"
																	},
																	"Children": [
																		{
																			"ID": "20221128154135-g94g878",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221128154135-g94g878",
																				"updated": "20221128154237"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "分层的概念"
																				}
																			]
																		},
																		{
																			"ID": "20221128141911-e8gvw81",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128141911-e8gvw81",
																				"updated": "20221128152845"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Docker 镜像由一些松耦合的只读镜像层组成。镜像可以通过分层来进行继承"
																				}
																			]
																		},
																		{
																			"ID": "20221128152640-cjicp3t",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128152640-cjicp3t",
																				"updated": "20221128152903"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "unionFS（联合文件系统）：是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下(unite several directories into a single virtual filesystem)。"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "Union"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " 文件系统是 Docker 镜像的基础。"
																				}
																			]
																		},
																		{
																			"ID": "20221128152809-gyj9pyy",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128152809-gyj9pyy",
																				"updated": "20221128152831"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "\t特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录"
																				}
																			]
																		},
																		{
																			"ID": "20221128152358-wdkde0g",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128152358-wdkde0g",
																				"updated": "20221128152401"
																			},
																			"Children": [
																				{
																					"Type": "NodeImage",
																					"Data": "span",
																					"Properties": {
																						"parent-style": "display: block; max-width: 404px;",
																						"style": "width: 394px;"
																					},
																					"Children": [
																						{
																							"Type": "NodeBang"
																						},
																						{
																							"Type": "NodeOpenBracket"
																						},
																						{
																							"Type": "NodeLinkText",
																							"Data": "image"
																						},
																						{
																							"Type": "NodeCloseBracket"
																						},
																						{
																							"Type": "NodeOpenParen"
																						},
																						{
																							"Type": "NodeLinkDest",
																							"Data": "assets/image-20221128152359-u8fr2wg.png"
																						},
																						{
																							"Type": "NodeCloseParen"
																						}
																					]
																				},
																				{
																					"Type": "NodeKramdownSpanIAL",
																					"Data": "{: style=\"width: 394px;\" parent-style=\"display: block; max-width: 404px;\"}"
																				}
																			]
																		},
																		{
																			"ID": "20221128152501-ka1c4ed",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128152501-ka1c4ed",
																				"updated": "20221128152501"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "所有的 Docker 镜像都起始于一个基础镜像层，当进行修改或增加新的内容时，就会在当前镜像层之上，创建新的镜像层。"
																				}
																			]
																		},
																		{
																			"ID": "20221128152501-3ckvawx",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128152501-3ckvawx",
																				"updated": "20221128152501"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "举一个简单的例子，假如基于 Ubuntu Linux 16.04 创建一个新的镜像，这就是新镜像的第一层；如果在该镜像中添加 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "a",
																					"TextMarkAHref": "http://c.biancheng.net/python/",
																					"TextMarkTextContent": "Python"
																				},
																				{
																					"Type": "NodeText",
																					"Data": " 包，就会在基础镜像层之上创建第二个镜像层；如果继续添加一个安全补丁，就会创建第三个镜像层。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128153114-k1bkkoe",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20221128153114-k1bkkoe"
																	},
																	"Children": [
																		{
																			"ID": "20221128153114-nvxi8p1",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221128153114-nvxi8p1",
																				"updated": "20221128154231"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "镜像加载原理"
																				}
																			]
																		},
																		{
																			"ID": "20221128153140-4xaycec",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128153140-4xaycec",
																				"updated": "20221128153519"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS。\nbootfs(boot file system)主要包含bootloader和kernel, bootloader主要是引导加载kernel, Linux刚启动时会加载bootfs文件系统，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "在Docker镜像的最底层是引导文件系统bootfs"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "。这一层与我们典型的Linux/Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权   已由bootfs转交给内核，此时系统也会卸载bootfs。"
																				}
																			]
																		},
																		{
																			"ID": "20221128153140-xw5byvr",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128153140-xw5byvr",
																				"updated": "20221128153140"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "rootfs (root file system) ，在bootfs之上。包含的就是典型 Linux 系统中的 /dev, /proc, /bin, /etc 等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128153648-0b8d02l",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20221128153648-0b8d02l"
																	},
																	"Children": [
																		{
																			"ID": "20221128153648-t7rfpe6",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221128153648-t7rfpe6",
																				"updated": "20221128154228"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "为什么需要分层"
																				}
																			]
																		},
																		{
																			"ID": "20221128153703-wu5dobu",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128153703-wu5dobu",
																				"updated": "20221128153703"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "镜像分层最大的一个好处就是共享资源，方便复制迁移，就是为了复用。"
																				}
																			]
																		},
																		{
																			"ID": "20221128153703-8tssg5t",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128153703-8tssg5t",
																				"updated": "20221128153703"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "比如说有多个镜像都从相同的 base 镜像构建而来，那么 Docker Host 只需在磁盘上保存一份 base 镜像；\n同时内存中也只需加载一份 base 镜像，就可以为所有容器"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "服务"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "了。而且镜像的每一层都可以被共享。"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221128154005-2xwyugs",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20221128154005-2xwyugs"
																	},
																	"Children": [
																		{
																			"ID": "20221128154005-jnwr0r5",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221128154005-jnwr0r5",
																				"updated": "20221128154234"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "容器层与镜像层"
																				}
																			]
																		},
																		{
																			"ID": "20221128154016-dygjq63",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128154016-dygjq63",
																				"updated": "20221128154107"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Docker"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "镜像层都是只读的"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "容器层是可写的"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "\n当容器启动时，一个新的可写层被加载到镜像的顶部。\n这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。"
																				}
																			]
																		},
																		{
																			"ID": "20221128154029-46c19ll",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128154029-46c19ll",
																				"updated": "20221128154031"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。\n所有对容器的改动 - 无论添加、删除、还是修改文件都只会发生在容器层中。只有容器层是可写的，容器层下面的所有镜像层都是只读的。"
																				}
																			]
																		},
																		{
																			"ID": "20221128154049-ftt7alx",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221128154049-ftt7alx",
																				"updated": "20221128154053"
																			},
																			"Children": [
																				{
																					"Type": "NodeImage",
																					"Data": "span",
																					"Properties": {
																						"parent-style": "display: block; max-width: 325px;",
																						"style": "width: 315px;"
																					},
																					"Children": [
																						{
																							"Type": "NodeBang"
																						},
																						{
																							"Type": "NodeOpenBracket"
																						},
																						{
																							"Type": "NodeLinkText",
																							"Data": "image"
																						},
																						{
																							"Type": "NodeCloseBracket"
																						},
																						{
																							"Type": "NodeOpenParen"
																						},
																						{
																							"Type": "NodeLinkDest",
																							"Data": "assets/image-20221128154050-qiapolp.png"
																						},
																						{
																							"Type": "NodeCloseParen"
																						}
																					]
																				},
																				{
																					"Type": "NodeKramdownSpanIAL",
																					"Data": "{: style=\"width: 315px;\" parent-style=\"display: block; max-width: 325px;\"}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221214013744-a7os2kk",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221214013744-a7os2kk",
										"updated": "20221214043936"
									},
									"Children": [
										{
											"ID": "20221214013744-qyta4fm",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221214013744-qyta4fm",
												"updated": "20221214013803"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "数据卷"
												}
											]
										},
										{
											"ID": "20221214015116-fqox2h3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221214015116-fqox2h3",
												"updated": "20221214043936"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "用于对容器的数据持久化"
												}
											]
										},
										{
											"ID": "20221214013812-wbtnspy",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221214013812-wbtnspy",
												"updated": "20221214013813"
											},
											"Children": [
												{
													"ID": "20221214013813-3lgu8xy",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214013813-3lgu8xy",
														"updated": "20221214013813"
													},
													"Children": [
														{
															"ID": "20221214013813-ms8i1sc",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214013813-ms8i1sc",
																"updated": "20221214030204"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "坑"
																}
															]
														},
														{
															"ID": "20221214013824-aiy2373",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214013824-aiy2373",
																"updated": "20221214013940"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "挂载主机目录出现错误  "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "cannot open directory : permission denied"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														},
														{
															"ID": "20221214013931-5dw7crj",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214013931-5dw7crj",
																"updated": "20221214014036"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "解决方法： 在挂载目录后添加  --privileged=true  即可"
																}
															]
														},
														{
															"ID": "20221214014039-zphq0ax",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214014039-zphq0ax",
																"updated": "20221214014242"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "开启此选项容器内的root用户才能获取宿主机的root权限，否则root用户只有宿主机的普通用户权限"
																}
															]
														}
													]
												},
												{
													"ID": "20221214015411-mybl12w",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214015411-mybl12w"
													},
													"Children": [
														{
															"ID": "20221214015411-vv1cfra",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214015411-vv1cfra",
																"updated": "20221214030206"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "格式"
																}
															]
														},
														{
															"ID": "20221214015415-ymv1u42",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"id": "20221214015415-ymv1u42",
																"updated": "20221214022039"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "c2hlbGw="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录  镜像名\n# 没有这个目录，docker会自动创建\n# 限制容器内只能读不能写\ndocker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:ro 镜像名\t\t# 默认为rw，可读可写\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														}
													]
												},
												{
													"ID": "20221214025010-dutvyvp",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214025010-dutvyvp"
													},
													"Children": [
														{
															"ID": "20221214025010-vwbtdi5",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214025010-vwbtdi5",
																"updated": "20221214030208"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "数据卷的继承"
																}
															]
														},
														{
															"ID": "20221214025024-iqcvfkh",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214025024-iqcvfkh",
																"updated": "20221214025300"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "已有容器1完成和宿主机的映射，现在新建容器2继承容器1的卷规则"
																}
															]
														},
														{
															"ID": "20221214025301-y6ucb81",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"id": "20221214025301-y6ucb81",
																"updated": "20221214025446"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "c2hlbGw="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "# 容器2\ndocker run -it --privileged=true --volumes-from 容器1    镜像名\t\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														},
														{
															"ID": "20221127161243-emn6hui",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221127161243-emn6hui",
																"updated": "20221214025727"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "继承父容器的卷规则后，父容器运行或停止"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "strong",
																	"TextMarkTextContent": "不影响"
																},
																{
																	"Type": "NodeText",
																	"Data": "继承关系"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221214030129-sqqg1h1",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "0",
										"id": "20221214030129-sqqg1h1",
										"updated": "20221214055517"
									},
									"Children": [
										{
											"ID": "20221214030129-vg6oy4d",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221214030129-vg6oy4d",
												"updated": "20221214030156"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "常用软件的安装"
												}
											]
										},
										{
											"ID": "20221214030214-dmq6b3j",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221214030214-dmq6b3j",
												"updated": "20221214055517"
											},
											"Children": [
												{
													"ID": "20221214030229-wbthk0g",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214030229-wbthk0g",
														"updated": "20221214055434"
													},
													"Children": [
														{
															"ID": "20221214030229-fl6s27k",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214030229-fl6s27k",
																"updated": "20221214030230"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "一般步骤"
																}
															]
														},
														{
															"ID": "20221214030233-q0elo46",
															"Type": "NodeList",
															"ListData": {
																"Typ": 1
															},
															"Properties": {
																"id": "20221214030233-q0elo46",
																"updated": "20221214055434"
															},
															"Children": [
																{
																	"ID": "20221214030250-wbjc4mi",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MS4=",
																		"Num": 1
																	},
																	"Properties": {
																		"id": "20221214030250-wbjc4mi",
																		"updated": "20221214030250"
																	},
																	"Children": [
																		{
																			"ID": "20221214030250-wzhes0x",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030250-wzhes0x",
																				"updated": "20221214030256"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "搜索镜像"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214030258-skjrxw7",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Mi4=",
																		"Num": 2
																	},
																	"Properties": {
																		"id": "20221214030258-skjrxw7"
																	},
																	"Children": [
																		{
																			"ID": "20221214030258-wgrakys",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030258-wgrakys",
																				"updated": "20221214030302"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "拉去镜像"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214030302-o778ej2",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "My4=",
																		"Num": 3
																	},
																	"Properties": {
																		"id": "20221214030302-o778ej2"
																	},
																	"Children": [
																		{
																			"ID": "20221214030302-08i9bds",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030302-08i9bds",
																				"updated": "20221214030305"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "查看镜像"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214030305-ydrwujn",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "NC4=",
																		"Num": 4
																	},
																	"Properties": {
																		"id": "20221214030305-ydrwujn",
																		"updated": "20221214055434"
																	},
																	"Children": [
																		{
																			"ID": "20221214030305-2zy7s1m",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030305-2zy7s1m",
																				"updated": "20221214055434"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "启动镜像，进行端口映射，数据卷配置等"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214030336-o4g1dv2",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "NS4=",
																		"Num": 5
																	},
																	"Properties": {
																		"id": "20221214030336-o4g1dv2"
																	},
																	"Children": [
																		{
																			"ID": "20221214030336-bxcgmui",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030336-bxcgmui",
																				"updated": "20221214030343"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "停止容器"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214030343-nqdp276",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Ni4=",
																		"Num": 6
																	},
																	"Properties": {
																		"id": "20221214030343-nqdp276"
																	},
																	"Children": [
																		{
																			"ID": "20221214030343-4os95z8",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214030343-4os95z8",
																				"updated": "20221214030349"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "删除容器"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221214030355-4gey5ll",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214030355-4gey5ll"
													},
													"Children": [
														{
															"ID": "20221214030355-z87h5s6",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214030355-z87h5s6",
																"updated": "20221214030408"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "tomcat安装"
																}
															]
														},
														{
															"ID": "20221214030410-rnx74k6",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"id": "20221214030410-rnx74k6",
																"updated": "20221214040529"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "YmFzaA=="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "docker search tomcat\ndocker pull tomcat\n# 或者指定版本  docker pull tomcat:8\ndocker images tomcat\ndocker run -it -p 8080:8080 --name t1 tomcat\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														},
														{
															"ID": "20221214030852-a29lwso",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214030852-a29lwso",
																"updated": "20221214035233"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "测试"
																}
															]
														},
														{
															"ID": "20221214035234-6lcaw4c",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214035234-6lcaw4c",
																"updated": "20221214035254"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "访问 8080端口，如果为404"
																}
															]
														},
														{
															"ID": "20221214035304-0h4rkpk",
															"Type": "NodeCodeBlock",
															"IsFencedCodeBlock": true,
															"Properties": {
																"id": "20221214035304-0h4rkpk",
																"updated": "20221214035918"
															},
															"Children": [
																{
																	"Type": "NodeCodeBlockFenceOpenMarker",
																	"Data": "```"
																},
																{
																	"Type": "NodeCodeBlockFenceInfoMarker",
																	"CodeBlockInfo": "YmFzaA=="
																},
																{
																	"Type": "NodeCodeBlockCode",
																	"Data": "# 确保关闭防火墙\n# 进入tomcat容器\nctrl+q+p\ndocker exec -it 661ebd9151f0 /bin/bash\n# 将 webapps 目录删除，将 webapps.dist 目录重命名为webapps \nrm -rf webapps \u0026\u0026 mv  webapps.dist webapps\nexit\n"
																},
																{
																	"Type": "NodeCodeBlockFenceCloseMarker",
																	"Data": "```"
																}
															]
														}
													]
												},
												{
													"ID": "20221214040503-3ts61ea",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221214040503-3ts61ea"
													},
													"Children": [
														{
															"ID": "20221214040503-prmc6z3",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214040503-prmc6z3",
																"updated": "20221214040517"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "mysql安装"
																}
															]
														},
														{
															"ID": "20221214043635-3izmqqj",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221214043635-3izmqqj",
																"updated": "20221214043637"
															},
															"Children": [
																{
																	"ID": "20221214043637-3f8wswv",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221214043637-3f8wswv",
																		"updated": "20221214043637"
																	},
																	"Children": [
																		{
																			"ID": "20221214043637-0db9la8",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221214043637-0db9la8",
																				"updated": "20221214050735"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "简单测试用"
																				}
																			]
																		},
																		{
																			"ID": "20221214043644-szgp8ot",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214043644-szgp8ot",
																				"updated": "20221214043734"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "没有指定字符集，没有做数据持久化"
																				}
																			]
																		},
																		{
																			"ID": "20221214040517-p5xpsir",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221214040517-p5xpsir",
																				"updated": "20221214042714"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker search mysql\ndocker pull mysql:5.7\ndocker images mysql:5.7\n# 先检查主机3306端口是否被占用 \nss -anpt | grep 3306\ndocker run  -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7\n# 进入mysql容器\ndocker exec -it 容器id /bin/bash\n# 进入mysql客户端,或使用终端连接\nmysql -uroot -p123456\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214043758-aav5fhw",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221214043758-aav5fhw"
																	},
																	"Children": [
																		{
																			"ID": "20221214043758-25nw88u",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221214043758-25nw88u",
																				"updated": "20221214050737"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "实际生产用"
																				}
																			]
																		},
																		{
																			"ID": "20221214050406-iq5hihq",
																			"Type": "NodeList",
																			"ListData": {
																				"Typ": 1
																			},
																			"Properties": {
																				"id": "20221214050406-iq5hihq",
																				"updated": "20221214050408"
																			},
																			"Children": [
																				{
																					"ID": "20221214050408-47v4hpt",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "MS4=",
																						"Num": 1
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214050408-47v4hpt",
																						"updated": "20221214050408"
																					},
																					"Children": [
																						{
																							"ID": "20221214050408-3xlzp8w",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214050408-3xlzp8w",
																								"updated": "20221214050411"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "拉取镜像"
																								}
																							]
																						},
																						{
																							"ID": "20221214043812-3e0wp9j",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214043812-3e0wp9j",
																								"updated": "20221214050403"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 拉取镜像\ndocker search mysql\ndocker pull mysql:5.7\ndocker images mysql:5.7\n# 先检查主机3306端口是否被占用 \nss -anpt | grep 3306\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221214050416-svrah10",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "Mi4=",
																						"Num": 2
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214050416-svrah10"
																					},
																					"Children": [
																						{
																							"ID": "20221214050416-068qoo2",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214050416-068qoo2",
																								"updated": "20221214050421"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "启动镜像"
																								}
																							]
																						},
																						{
																							"ID": "20221214043825-w406zmd",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214043825-w406zmd",
																								"updated": "20221214050611"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 启动镜像\n# 先检查主机3306端口是否被占用 \nss -anpt | grep 3306\n# 运行镜像\ndocker run -d -p 3306:3306 --privileged=true  \\\n-v /mysql/log:/var/log/mysql  \\\n-v /mysql/data:/var/lib/mysql   \\\n-v /mysql/conf:/etc/mysql/conf.d \\\n-e MYSQL_ROOT_PASSWORD=123456  \\\n--name docker_mysql \\\nmysql:5.7\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221214050426-e0f2nv3",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "My4=",
																						"Num": 3
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214050426-e0f2nv3"
																					},
																					"Children": [
																						{
																							"ID": "20221214050426-0xur3km",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214050426-0xur3km",
																								"updated": "20221214050432"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "配置字符集"
																								}
																							]
																						},
																						{
																							"ID": "20221214044945-4kk5x6l",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214044945-4kk5x6l",
																								"updated": "20221214050232"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 配置字符集为utf8\ncd /mysql/conf\ncat \u003e\u003e my.cnf \u003c\u003c END\n[client]\ndefault_character_set=utf8\n[mysqld]\ncollation_server = utf8_general_ci\ncharacter_set_server = utf8\nEND\n\n# 重启容器\ndocker restart docker_mysql\n# 进入容器，检查字符集\ndocker exec -it docker_mysql /bin/bash\nmysql -uroot -p123456\nSHOW VARIABLES LIKE 'character_%';\n# 如下\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | utf8                       |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221214050757-2ytpcc7",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "0",
														"id": "20221214050757-2ytpcc7",
														"updated": "20221214055517"
													},
													"Children": [
														{
															"ID": "20221214050757-emkdelu",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214050757-emkdelu",
																"updated": "20221214050807"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "安装redis"
																}
															]
														},
														{
															"ID": "20221214051318-xmrymho",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221214051318-xmrymho",
																"updated": "20221214055517"
															},
															"Children": [
																{
																	"ID": "20221214051321-47wkpp5",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221214051321-47wkpp5",
																		"updated": "20221214055515"
																	},
																	"Children": [
																		{
																			"ID": "20221214051321-8ykd247",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221214051321-8ykd247",
																				"updated": "20221214055515"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "最简安装"
																				}
																			]
																		},
																		{
																			"ID": "20221214050808-gq7ubwc",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221214050808-gq7ubwc",
																				"updated": "20221214051208"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker search redis\ndocker pull redis:6.0.8\ndocker images redis:6.0.8\n# 先检查主机6379端口是否被占用 \nss -anpt | grep 6379\n\n# 启动redis\ndocker run -d -p 6379:6379 --name docker_redis redis:6.0.8\ndocker exec -it docker_redis /bin/bash\nredis-cli\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221214051355-8brt9jq",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221214051355-8brt9jq",
																		"updated": "20221214055517"
																	},
																	"Children": [
																		{
																			"ID": "20221214051355-w8wg8rk",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221214051355-w8wg8rk",
																				"updated": "20221214055517"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "生产安装"
																				}
																			]
																		},
																		{
																			"ID": "20221214051406-hsg5jf6",
																			"Type": "NodeList",
																			"ListData": {
																				"Typ": 1
																			},
																			"Properties": {
																				"id": "20221214051406-hsg5jf6",
																				"updated": "20221214055351"
																			},
																			"Children": [
																				{
																					"ID": "20221214051446-o9brnbi",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "MS4=",
																						"Num": 1
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214051446-o9brnbi",
																						"updated": "20221214051446"
																					},
																					"Children": [
																						{
																							"ID": "20221214051446-ztcms1x",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214051446-ztcms1x",
																								"updated": "20221214051452"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "拉取镜像"
																								}
																							]
																						},
																						{
																							"ID": "20221214051452-htm5ncr",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214051452-htm5ncr",
																								"updated": "20221214051515"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "docker search redis\ndocker pull redis:6.0.8\ndocker images redis:6.0.8\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221214051458-uc3x93l",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "Mi4=",
																						"Num": 2
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214051458-uc3x93l"
																					},
																					"Children": [
																						{
																							"ID": "20221214051458-e2tffje",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214051458-e2tffje",
																								"updated": "20221214051532"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "启动前配置"
																								}
																							]
																						},
																						{
																							"ID": "20221214051532-b8kiz2c",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214051532-b8kiz2c",
																								"updated": "20221214053340"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 创建配置文件目录\nmkdir /redis\n# 将redis的配置文件redis.conf  复制到/redis目录\n# 修改配置文件\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						},
																						{
																							"ID": "20221214051934-c2g7uqt",
																							"Type": "NodeList",
																							"ListData": {},
																							"Properties": {
																								"id": "20221214051934-c2g7uqt",
																								"updated": "20221214051939"
																							},
																							"Children": [
																								{
																									"ID": "20221214051939-84up49h",
																									"Type": "NodeListItem",
																									"ListData": {
																										"BulletChar": 42,
																										"Marker": "Kg=="
																									},
																									"Properties": {
																										"fold": "1",
																										"id": "20221214051939-84up49h",
																										"updated": "20221214051939"
																									},
																									"Children": [
																										{
																											"ID": "20221214051939-kdrc9cj",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221214051939-kdrc9cj",
																												"updated": "20221214053123"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "配置文件"
																												}
																											]
																										},
																										{
																											"ID": "20221214052142-boe7xk0",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221214052142-boe7xk0",
																												"updated": "20221214053143"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "此文件已配置 ： daemonize （以后台方式运行）选项"
																												},
																												{
																													"Type": "NodeTextMark",
																													"TextMarkType": "strong",
																													"TextMarkTextContent": "必须为no或注释掉"
																												},
																												{
																													"Type": "NodeText",
																													"Data": "，否则与docker run -d 选项冲突"
																												}
																											]
																										},
																										{
																											"ID": "20221214052327-wnn2kra",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221214052327-wnn2kra",
																												"updated": "20221214052450"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "\t\trequirepass 登录redis密码为123456"
																												}
																											]
																										},
																										{
																											"ID": "20221214052456-3pfj29r",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221214052456-3pfj29r",
																												"updated": "20221214052607"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "\t\t注释掉bind 127.0.0.1 允许外地连接"
																												}
																											]
																										},
																										{
																											"ID": "20221214052608-tpp604d",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221214052608-tpp604d",
																												"updated": "20221214052929"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "\t\tappendonly yes\tredis持久化，开启日志记录，相当于MySQL的binlog"
																												}
																											]
																										},
																										{
																											"ID": "20221214053020-pcuvlo5",
																											"Type": "NodeList",
																											"ListData": {},
																											"Properties": {
																												"id": "20221214053020-pcuvlo5",
																												"updated": "20221214053022"
																											},
																											"Children": [
																												{
																													"ID": "20221214053022-ijptx2y",
																													"Type": "NodeListItem",
																													"ListData": {
																														"BulletChar": 42,
																														"Marker": "Kg=="
																													},
																													"Properties": {
																														"fold": "1",
																														"id": "20221214053022-ijptx2y",
																														"updated": "20221214053022"
																													},
																													"Children": [
																														{
																															"ID": "20221214053022-9fxdstm",
																															"Type": "NodeParagraph",
																															"Properties": {
																																"id": "20221214053022-9fxdstm",
																																"updated": "20221214053029"
																															},
																															"Children": [
																																{
																																	"Type": "NodeText",
																																	"Data": "文件"
																																}
																															]
																														},
																														{
																															"ID": "20221214051943-yputasz",
																															"Type": "NodeCodeBlock",
																															"IsFencedCodeBlock": true,
																															"Properties": {
																																"custom-render": "scroll",
																																"id": "20221214051943-yputasz",
																																"updated": "20221214052954"
																															},
																															"Children": [
																																{
																																	"Type": "NodeCodeBlockFenceOpenMarker",
																																	"Data": "```"
																																},
																																{
																																	"Type": "NodeCodeBlockFenceInfoMarker",
																																	"CodeBlockInfo": "YmFzaA=="
																																},
																																{
																																	"Type": "NodeCodeBlockCode",
																																	"Data": "# Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# ./redis-server /path/to/redis.conf\n \n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k =\u003e 1000 bytes\n# 1kb =\u003e 1024 bytes\n# 1m =\u003e 1000000 bytes\n# 1mb =\u003e 1024*1024 bytes\n# 1g =\u003e 1000000000 bytes\n# 1gb =\u003e 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n \n################################## INCLUDES ###################################\n \n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Notice option \"include\" won't be rewritten by command \"CONFIG REWRITE\"\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you'd better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n \n################################## MODULES #####################################\n \n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule /path/to/my_module.so\n# loadmodule /path/to/other_module.so\n \n################################## NETWORK #####################################\n \n# By default, if no \"bind\" configuration directive is specified, Redis listens\n# for connections from all the network interfaces available on the server.\n# It is possible to listen to just one or multiple selected interfaces using\n# the \"bind\" configuration directive, followed by one or more IP addresses.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1\n# bind 127.0.0.1 ::1\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only into\n# the IPv4 loopback interface address (this means Redis will be able to\n# accept connections only from clients running into the same computer it\n# is running).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# bind 127.0.0.1\n \n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    \"bind\" directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the \"bind\" directive.\nprotected-mode no\n \n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n \n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need an high backlog in order\n# to avoid slow clients connections issues. Note that the Linux kernel\n# will silently truncate it to the value of /proc/sys/net/core/somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n \n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 700\n \n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n \n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n \n################################# GENERAL #####################################\n \n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\n# daemonize no\n \n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal \"process is ready.\"\n#       They do not enable continuous liveness pings back to your supervisor.\nsupervised no\n \n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to \"/var/run/redis.pid\".\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\npidfile /var/run/redis_6379.pid\n \n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n \n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile \"\"\n \n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n \n# Specify the syslog identity.\n# syslog-ident redis\n \n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n \n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT \u003cdbid\u003e where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n \n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY. Basically this means\n# that normally a logo is displayed only in interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo yes\n \n################################ SNAPSHOTTING  ################################\n#\n# Save the DB on disk:\n#\n#   save \u003cseconds\u003e \u003cchanges\u003e\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving completely by commenting out all \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n \nsave 900 1\nsave 300 10\nsave 60 10000\n \n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n \n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n \n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n \n# The filename where to dump the DB\ndbfilename dump.rdb\n \n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir ./\n \n################################# REPLICATION #################################\n \n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---\u003e |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof \u003cmasterip\u003e \u003cmasterport\u003e\n \n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth \u003cmaster-password\u003e\n \n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if replica-serve-stale-data is set to 'no' the replica will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,\n#    SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,\n#    COMMAND, POST, HOST: and LATENCY.\n#\nreplica-serve-stale-data yes\n \n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nreplica-read-only yes\n \n# Replication SYNC strategy: disk or socket.\n#\n# -------------------------------------------------------\n# WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY\n# -------------------------------------------------------\n#\n# New replicas and reconnecting replicas that are not able to continue the replication\n# process just receiving differences, need to do what is called a \"full\n# synchronization\". An RDB file is transmitted from the master to the replicas.\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child producing\n# the RDB file finishes its work. With diskless replication instead once\n# the transfer starts, new replicas arriving will be queued and a new transfer\n# will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple replicas\n# will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n \n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the server\n# waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n \n# Replicas send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_replica_period option. The default value is 10\n# seconds.\n#\n# repl-ping-replica-period 10\n \n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I/O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica.\n#\n# repl-timeout 60\n \n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n \n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a replica\n# wants to reconnect again, often a full resync is not needed, but a partial\n# resync is enough, just passing the portion of data the replica missed while\n# disconnected.\n#\n# The bigger the replication backlog, the longer the time the replica can be\n# disconnected and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated once there is at least a replica connected.\n#\n# repl-backlog-size 1mb\n \n# After a master has no longer connected replicas for some time, the backlog\n# will be freed. The following option configures the amount of seconds that\n# need to elapse, starting from the time the last replica disconnected, for\n# the backlog buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly \"partially\n# resynchronize\" with the replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n \n# The replica priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a replica to promote into a\n# master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel will\n# pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n \n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in \"online\" state.\n#\n# The lag in seconds, that must be \u003c= the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag \u003c= 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n \n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the \"INFO replication\" section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# \"ROLE\" command of a master.\n#\n# The listed IP and address normally reported by a replica is obtained\n# in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may be actually reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n \n################################## SECURITY ###################################\n \n# Require clients to issue AUTH \u003cPASSWORD\u003e before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n#\n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\nrequirepass 123456\n \n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n \n################################### CLIENTS ####################################\n \n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n \n############################## MEMORY MANAGEMENT ################################\n \n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\n# maxmemory \u003cbytes\u003e\n \n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n#\n# volatile-lru -\u003e Evict using approximated LRU among the keys with an expire set.\n# allkeys-lru -\u003e Evict any key using approximated LRU.\n# volatile-lfu -\u003e Evict using approximated LFU among the keys with an expire set.\n# allkeys-lfu -\u003e Evict any key using approximated LFU.\n# volatile-random -\u003e Remove a random key among the ones with an expire set.\n# allkeys-random -\u003e Remove a random key, any key.\n# volatile-ttl -\u003e Remove the key with the nearest expire time (minor TTL)\n# noeviction -\u003e Don't evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are no suitable keys for eviction.\n#\n#       At the date of writing these commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n \n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. For default Redis will check five keys and pick the one that was\n# used less recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n \n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica to have\n# a different memory setting, and you are sure all the writes performed to the\n# replica are idempotent, then you may change this default (but be sure to understand\n# what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory and so\n# forth). So make sure you monitor your replicas and make sure they have enough\n# memory to never hit a real out-of-memory condition before the master hits\n# the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n \n############################# LAZY FREEING ####################################\n \n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It's up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives:\n \nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n \n############################## APPEND ONLY MODE ###############################\n \n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n \nappendonly yes\n \n# The name of the append only file (default: \"appendonly.aof\")\n \nappendfilename \"appendonly.aof\"\n \n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n \n# appendfsync always\nappendfsync everysec\n# appendfsync no\n \n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\n \nno-appendfsync-on-rewrite no\n \n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n \nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n \n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data=ordered option (however this can't happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the \"redis-check-aof\" utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n \n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading Redis recognizes that the AOF file starts with the \"REDIS\"\n# string and loads the prefixed RDB file, and continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n \n################################ LUA SCRIPTING  ###############################\n \n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n \n################################ REDIS CLUSTER  ###############################\n \n# Normal Redis instances can't be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n \n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n \n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n \n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its \"data age\", so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the \"connected\" state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point \"2\" can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they'll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n \n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can't be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the \"migration barrier\". A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n \n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least an hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n \n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the master can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n \n# In order to setup your cluster make sure to read the documentation\n# available at http://redis.io web site.\n \n########################## CLUSTER DOCKER/NAT support  ########################\n \n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following two options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-bus-port\n#\n# Each instruct the node about its address, client port, and cluster message\n# bus port. The information is then published in the header of the bus packets\n# so that other nodes will be able to correctly map the address of the node\n# publishing the information.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usually.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-port 6379\n# cluster-announce-bus-port 6380\n \n################################## SLOW LOG ###################################\n \n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n \n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n \n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n \n################################ LATENCY MONITOR ##############################\n \n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don't have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# \"CONFIG SET latency-monitor-threshold \u003cmilliseconds\u003e\" if needed.\nlatency-monitor-threshold 0\n \n############################# EVENT NOTIFICATION ##############################\n \n# Redis can notify Pub/Sub clients about events happening in the key space.\n# This feature is documented at http://redis.io/topics/notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key \"foo\" stored in the Database 0, two\n# messages will be published via Pub/Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@\u003cdb\u003e__ prefix.\n#  E     Keyevent events, published with __keyevent@\u003cdb\u003e__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  A     Alias for g$lshzxe, so that the \"AKE\" string means all the events.\n#\n#  The \"notify-keyspace-events\" takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don't need\n#  this feature and the feature has some overhead. Note that if you don't\n#  specify at least one of K or E, no events will be delivered.\n#notify-keyspace-events \"\"\n \n############################### ADVANCED CONFIG ###############################\n \n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n \n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  \u003c-- not recommended for normal workloads\n# -4: max size: 32 Kb  \u003c-- not recommended\n# -3: max size: 16 Kb  \u003c-- probably not recommended\n# -2: max size: 8 Kb   \u003c-- good\n# -1: max size: 4 Kb   \u003c-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n \n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push/pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means \"don't start compressing until after 1 node into the list,\n#    going from either the head or tail\"\n#    So: [head]-\u003enode-\u003enode-\u003e...-\u003enode-\u003e[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]-\u003e[next]-\u003enode-\u003enode-\u003e...-\u003enode-\u003e[prev]-\u003e[tail]\n#    2 here means: don't compress head or head-\u003enext or tail-\u003eprev or tail,\n#    but compress all nodes between them.\n# 3: [head]-\u003e[next]-\u003e[next]-\u003enode-\u003enode-\u003e...-\u003enode-\u003e[prev]-\u003e[prev]-\u003e[tail]\n# etc.\nlist-compress-depth 0\n \n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n \n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n \n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n \n# Streams macro node max size / items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entires limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n \n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n \n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -\u003e normal clients including MONITOR clients\n# replica  -\u003e replica clients\n# pubsub -\u003e clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit \u003cclass\u003e \u003chard limit\u003e \u003csoft limit\u003e \u003csoft seconds\u003e\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n \n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi/exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n \n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited ot 512 mb. However you can change this limit\n# here.\n#\n# proto-max-bulk-len 512mb\n \n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n \n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporary raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used as\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n \n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n \n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n \n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R \u003c P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less \u003c= 10).\n#\n# The default value for the lfu-decay-time is 1. A Special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n \n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested\n# even in production and manually tested by multiple engineers for some\n# time.\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in an \"hot\" way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don't have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command \"CONFIG SET activedefrag yes\".\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n \n# Enabled active defragmentation\n# activedefrag yes\n \n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n \n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n \n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n \n# Minimal effort for defrag in CPU percentage\n# active-defrag-cycle-min 5\n \n# Maximal effort for defrag in CPU percentage\n# active-defrag-cycle-max 75\n \n# Maximum number of set/hash/zset/list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n \n \n\n"
																																},
																																{
																																	"Type": "NodeCodeBlockFenceCloseMarker",
																																	"Data": "```"
																																}
																															]
																														}
																													]
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221214051716-2a7bru5",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "My4=",
																						"Num": 3
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214051716-2a7bru5"
																					},
																					"Children": [
																						{
																							"ID": "20221214051716-7vzwnv2",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214051716-7vzwnv2",
																								"updated": "20221214053524"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "启动容器"
																								}
																							]
																						},
																						{
																							"ID": "20221214051721-clfgyci",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214051721-clfgyci",
																								"updated": "20221214053513"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 指定使用的配置文件运行\ndocker run -d -p 6379:6379 --privileged=true  \\\n-v /redis/redis.conf:/etc/redis/redis.conf  \\\n-v /redis/data:/data  \\\n --name docker_redis \\\nredis:6.0.8 redis-server /etc/redis/redis.conf\n\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221214053837-4fof45o",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "NC4=",
																						"Num": 4
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221214053837-4fof45o",
																						"updated": "20221214055351"
																					},
																					"Children": [
																						{
																							"ID": "20221214053837-i04r8cz",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221214053837-i04r8cz",
																								"updated": "20221214053841"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "连接测试"
																								}
																							]
																						},
																						{
																							"ID": "20221214053841-dzqzt2k",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221214053841-dzqzt2k",
																								"updated": "20221214055351"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "docker exec -it docker_redis /bin/bash\nredis-cli -a 123456\n# Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n# 127.0.0.1:6379\u003e \nset k1 v1\nget k1\nexit\n\n# Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n# Warning: AUTH failed\t\t若登录redis时有这个警告，则证明没有使用宿主机的配置文件，需要检查\n# 127.0.0.1:6379\u003e \n\n# 检查数据持久化\ndocker restart docker_redis \t\t\t# 重启容器\ndocker exec -it docker_redis /bin/bash\nredis-cli -a 123456\nget k1\t\t\t\t\t\t# 检查是否有 k1 的值\nexit\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221214050936-vfe71fb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221214050936-vfe71fb"
			}
		},
		{
			"ID": "20221214055729-jvm00wf",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221214055729-jvm00wf",
				"updated": "20221215191038"
			},
			"Children": [
				{
					"ID": "20221214055731-fguteiv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221214055731-fguteiv",
						"updated": "20221215191038"
					},
					"Children": [
						{
							"ID": "20221214055731-g3ylty0",
							"Type": "NodeHeading",
							"HeadingLevel": 1,
							"Properties": {
								"id": "20221214055731-g3ylty0",
								"updated": "20221214055742"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "docker高级篇"
								}
							]
						},
						{
							"ID": "20221214055743-2cr8g2t",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221214055743-2cr8g2t",
								"updated": "20221215191038"
							},
							"Children": [
								{
									"ID": "20221214060037-qqm1yg5",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221214060037-qqm1yg5",
										"updated": "20221215191038"
									},
									"Children": [
										{
											"ID": "20221214060037-vkl1043",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221214060037-vkl1043",
												"updated": "20221214060053"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker复杂安装"
												}
											]
										},
										{
											"ID": "20221214060053-iu3t4jm",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221214060053-iu3t4jm",
												"updated": "20221215191038"
											},
											"Children": [
												{
													"ID": "20221214060058-iogix8i",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221214060058-iogix8i",
														"updated": "20221215190842"
													},
													"Children": [
														{
															"ID": "20221214060058-yra61cq",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221214060058-yra61cq",
																"updated": "20221214060116"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker安装mysql主从复制"
																}
															]
														},
														{
															"ID": "20221214061042-no4c92p",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221214061042-no4c92p",
																"updated": "20221214061106"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "实现一主一从，主"
																},
																{
																	"Type": "NodeText",
																	"Data": "服务"
																},
																{
																	"Type": "NodeText",
																	"Data": "器3307，从"
																},
																{
																	"Type": "NodeText",
																	"Data": "服务"
																},
																{
																	"Type": "NodeText",
																	"Data": "器3308"
																}
															]
														},
														{
															"ID": "20221214061008-gckjupn",
															"Type": "NodeList",
															"ListData": {
																"Typ": 1
															},
															"Properties": {
																"id": "20221214061008-gckjupn",
																"updated": "20221215190842"
															},
															"Children": [
																{
																	"ID": "20221214061025-gepwb4a",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MS4=",
																		"Num": 1
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221214061025-gepwb4a",
																		"updated": "20221214061204"
																	},
																	"Children": [
																		{
																			"ID": "20221214061025-lml6esd",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221214061025-lml6esd",
																				"updated": "20221215003334"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "新建主服务器容器实例3307"
																				}
																			]
																		},
																		{
																			"ID": "20221214061112-1a8u4x9",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221214061112-1a8u4x9",
																				"updated": "20221214061204"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 运行镜像\ndocker run -d -p 3307:3306 --privileged=true  \\\n-v /mysql-master/log:/var/log/mysql  \\\n-v /mysql-master/data:/var/lib/mysql   \\\n-v /mysql-master/conf:/etc/mysql/conf.d \\\n-e MYSQL_ROOT_PASSWORD=123456  \\\n--name mysql-master \\\nmysql:5.7\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215002344-msutzf5",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Mi4=",
																		"Num": 2
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215002344-msutzf5"
																	},
																	"Children": [
																		{
																			"ID": "20221215002344-nab0jh9",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215002344-nab0jh9",
																				"updated": "20221215002407"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "修改配置单"
																				}
																			]
																		},
																		{
																			"ID": "20221215002407-tgracsh",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215002407-tgracsh",
																				"updated": "20221215002717"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 进入/mysql-master/conf/目录下新建my.cnf文件\nvim /mysql-master/conf/my.cnf\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		},
																		{
																			"ID": "20221215002719-wyh596y",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215002719-wyh596y",
																				"updated": "20221215002742"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 写入以下内容\n[mysqld]\n## 设置server_id，同一局域网中需要唯一\nserver_id=101 \n## 指定不需要同步的数据库名称\nbinlog-ignore-db=mysql  \n## 开启二进制日志功能\nlog-bin=mall-mysql-bin  \n## 设置二进制日志使用内存大小（事务）\nbinlog_cache_size=1M  \n## 设置使用的二进制日志格式（mixed,statement,row）\nbinlog_format=mixed  \n## 二进制日志过期清理时间。默认值为0，表示不自动清理。\nexpire_logs_days=7  \n## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215002942-vq9cglu",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "My4=",
																		"Num": 3
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215002942-vq9cglu"
																	},
																	"Children": [
																		{
																			"ID": "20221215002942-y9ryid0",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215002942-y9ryid0",
																				"updated": "20221215002955"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "重启master实例"
																				}
																			]
																		},
																		{
																			"ID": "20221215002955-9adk9z9",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215002955-9adk9z9",
																				"updated": "20221215012351"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker restart mysql-master\ndocker ps \n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215003115-mmx05x4",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "NC4=",
																		"Num": 4
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215003115-mmx05x4"
																	},
																	"Children": [
																		{
																			"ID": "20221215003115-jwemabl",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215003115-jwemabl",
																				"updated": "20221215003124"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "进入master实例"
																				}
																			]
																		},
																		{
																			"ID": "20221215003125-9nmh1dz",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003125-9nmh1dz",
																				"updated": "20221215003159"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker exec -it mysql-master /bin/bash\nmysql -uroot -p123456\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215003202-oruur5s",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "NS4=",
																		"Num": 5
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215003202-oruur5s"
																	},
																	"Children": [
																		{
																			"ID": "20221215003202-nmlycis",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215003202-nmlycis",
																				"updated": "20221215003231"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "创建用户用于数据复制"
																				}
																			]
																		},
																		{
																			"ID": "20221215003232-f7vuyjz",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003232-f7vuyjz",
																				"updated": "20221215003316"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "CREATE USER 'slave'@'%' IDENTIFIED BY '123456';\nGRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'slave'@'%';\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215003329-3b5758j",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Ni4=",
																		"Num": 6
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215003329-3b5758j"
																	},
																	"Children": [
																		{
																			"ID": "20221215003329-i1kjpq0",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215003329-i1kjpq0",
																				"updated": "20221215003351"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "新建从服务器4408"
																				}
																			]
																		},
																		{
																			"ID": "20221215003352-lgnjpm2",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003352-lgnjpm2",
																				"updated": "20221215003503"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 运行镜像\ndocker run -d -p 3308:3306 --privileged=true  \\\n-v /mysql-slave/log:/var/log/mysql  \\\n-v /mysql-slave/data:/var/lib/mysql   \\\n-v /mysql-slave/conf:/etc/mysql/conf.d \\\n-e MYSQL_ROOT_PASSWORD=123456  \\\n--name mysql-slave \\\nmysql:5.7\n\ndocker ps\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215003511-y6lgjbe",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Ny4=",
																		"Num": 7
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215003511-y6lgjbe"
																	},
																	"Children": [
																		{
																			"ID": "20221215003511-7nuzwu8",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215003511-7nuzwu8",
																				"updated": "20221215003520"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "修改配置单"
																				}
																			]
																		},
																		{
																			"ID": "20221215003520-y8mdcc1",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003520-y8mdcc1",
																				"updated": "20221215015439"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 进入/mysql-salve/conf/目录下新建my.cnf文件\nvim /mysql-slave/conf/my.cnf\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		},
																		{
																			"ID": "20221215003351-f0nf1dz",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003351-f0nf1dz",
																				"updated": "20221215003619"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 写入以下内容\n[mysqld]\n## 设置server_id，同一局域网中需要唯一\nserver_id=102\n## 指定不需要同步的数据库名称\nbinlog-ignore-db=mysql  \n## 开启二进制日志功能，以备Slave作为其它数据库实例的Master时使用\nlog-bin=mall-mysql-slave1-bin  \n## 设置二进制日志使用内存大小（事务）\nbinlog_cache_size=1M  \n## 设置使用的二进制日志格式（mixed,statement,row）\nbinlog_format=mixed  \n## 二进制日志过期清理时间。默认值为0，表示不自动清理。\nexpire_logs_days=7  \n## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062  \n## relay_log配置中继日志\nrelay_log=mall-mysql-relay-bin  \n## log_slave_updates表示slave将复制事件写进自己的二进制日志\nlog_slave_updates=1  \n## slave设置为只读（具有super权限的用户除外）\nread_only=1\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215003623-gzfgqww",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "OC4=",
																		"Num": 8
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215003623-gzfgqww"
																	},
																	"Children": [
																		{
																			"ID": "20221215003623-bojg457",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215003623-bojg457",
																				"updated": "20221215003722"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "重启slave实例"
																				}
																			]
																		},
																		{
																			"ID": "20221215003722-dqoxkxf",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215003722-dqoxkxf",
																				"updated": "20221215005115"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker restart mysql-slave\ndocker ps\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215011906-78wzgjy",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "OS4=",
																		"Num": 9
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215011906-78wzgjy"
																	},
																	"Children": [
																		{
																			"ID": "20221215011906-efqhy3c",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215011906-efqhy3c",
																				"updated": "20221215011909"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在主"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "数据库"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "中查看主从同步状态"
																				}
																			]
																		},
																		{
																			"ID": "20221215011910-c3iotfr",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215011910-c3iotfr",
																				"updated": "20221215015523"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "show master status;\n+-----------------------+----------+--------------+------------------+-------------------+\n| File                  | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+-----------------------+----------+--------------+------------------+-------------------+\n| mall-mysql-bin.000001 |      617 |              | mysql            |                   |\n+-----------------------+----------+--------------+------------------+-------------------+\n\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215015540-udvy61y",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MTAu",
																		"Num": 10
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215015540-udvy61y"
																	},
																	"Children": [
																		{
																			"ID": "20221215015540-kprvzn5",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215015540-kprvzn5",
																				"updated": "20221215015605"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "进入slave实例"
																				}
																			]
																		},
																		{
																			"ID": "20221215015606-shfrnf2",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215015606-shfrnf2",
																				"updated": "20221215020252"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "docker exec -it mysql-slave /bin/bash\nmysql -uroot -p123456\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215020257-1hcjrpq",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MTEu",
																		"Num": 11
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215020257-1hcjrpq"
																	},
																	"Children": [
																		{
																			"ID": "20221215020257-4jc85ff",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215020257-4jc85ff",
																				"updated": "20221215020328"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在slave上配置主从复制"
																				}
																			]
																		},
																		{
																			"ID": "20221215020328-d5gibgz",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215020328-d5gibgz",
																				"updated": "20221215020349"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "change master to master_host='宿主机ip', master_user='slave', master_password='123456', master_port=3307, master_log_file='mall-mysql-bin.000001', master_log_pos=617, master_connect_retry=30;\n\nmaster_host：主数据库的IP地址；\nmaster_port：主数据库的运行端口；\nmaster_user：在主数据库创建的用于同步数据的用户账号；\nmaster_password：在主数据库创建的用于同步数据的用户密码；\nmaster_log_file：指定从数据库要复制数据的日志文件，通过查看主数据的状态，获取File参数；\nmaster_log_pos：指定从数据库从哪个位置开始复制数据，通过查看主数据的状态，获取Position参数；\nmaster_connect_retry：连接失败重试的时间间隔，单位为秒。\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215020532-5r484uk",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MTIu",
																		"Num": 12
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215020532-5r484uk",
																		"updated": "20221215020608"
																	},
																	"Children": [
																		{
																			"ID": "20221215020532-36u6y4c",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215020532-36u6y4c",
																				"updated": "20221215020545"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在slave上开启主从复制"
																				}
																			]
																		},
																		{
																			"ID": "20221215020546-miovxhs",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215020546-miovxhs",
																				"updated": "20221215185928"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "start slave;\nshow slave status \\G;\n# 为yes代表开启成功\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215185939-my59qe5",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MTMu",
																		"Num": 13
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221215185939-my59qe5",
																		"updated": "20221215190842"
																	},
																	"Children": [
																		{
																			"ID": "20221215185939-rg5o1uz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221215185939-rg5o1uz",
																				"updated": "20221215185941"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "测试"
																				}
																			]
																		},
																		{
																			"ID": "20221215185941-y9kvcmx",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20221215185941-y9kvcmx",
																				"updated": "20221215190842"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YmFzaA=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "# 在master上创建数据库，表，并添加一条数据\ncreate database test;\nuse test;\ncreate table temp (\nid int(8),\nname varchar(10)\n);\ninsert into temp\nvalues(1,\"tom\");\nselect * from temp;\n# 在从机查看数据\nshow databases;\nuse test;\nselect * from temp;\n# 有数据，代表主从同步完成\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221215191025-qwp086d",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221215191025-qwp086d",
														"updated": "20221215191038"
													},
													"Children": [
														{
															"ID": "20221215191025-jzduoo7",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221215191025-jzduoo7",
																"updated": "20221215191038"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "docker安装"
																},
																{
																	"Type": "NodeText",
																	"Data": "redis"
																},
																{
																	"Type": "NodeText",
																	"Data": "集群"
																}
															]
														},
														{
															"ID": "20221215191034-kxnf97h",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20221215191034-kxnf97h"
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221216000741-64bzboj",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"fold": "1",
										"id": "20221216000741-64bzboj"
									},
									"Children": [
										{
											"ID": "20221216000741-6cmdmix",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221216000741-6cmdmix",
												"updated": "20221216000759"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "DockerFile"
												}
											]
										},
										{
											"ID": "20221216000804-w0zq7zk",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20221216000804-w0zq7zk",
												"updated": "20221216000806"
											},
											"Children": [
												{
													"ID": "20221216000806-nbirx7h",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221216000806-nbirx7h",
														"updated": "20221216000806"
													},
													"Children": [
														{
															"ID": "20221216000806-1g0iepg",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221216000806-1g0iepg",
																"updated": "20221216000900"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "简介"
																}
															]
														},
														{
															"ID": "20221216000857-s9oe2bd",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221216000857-s9oe2bd",
																"updated": "20221216000902"
															},
															"Children": [
																{
																	"ID": "20221216000902-112girg",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221216000902-112girg",
																		"updated": "20221216000902"
																	},
																	"Children": [
																		{
																			"ID": "20221216000902-dhij23b",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216000902-dhij23b",
																				"updated": "20221216000912"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "dockerFile是什么"
																				}
																			]
																		},
																		{
																			"ID": "20221216000912-q5rxrfg",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216000912-q5rxrfg",
																				"updated": "20221216001032"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "dockersFile是用来"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "构建docker镜像"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "的文本文件，是由一条条构建镜像所需的指令和参数构成的"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "脚本"
																				}
																			]
																		},
																		{
																			"ID": "20221216001017-kxe75bz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216001017-kxe75bz"
																			}
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20221216002541-8w2xwem",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"fold": "1",
														"id": "20221216002541-8w2xwem"
													},
													"Children": [
														{
															"ID": "20221216002541-xckeh1p",
															"Type": "NodeHeading",
															"HeadingLevel": 3,
															"Properties": {
																"id": "20221216002541-xckeh1p",
																"updated": "20221216002552"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "dockerFile基础知识"
																}
															]
														},
														{
															"ID": "20221216002552-v53zibm",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20221216002552-v53zibm",
																"updated": "20221216002555"
															},
															"Children": [
																{
																	"ID": "20221216002555-oypusz1",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221216002555-oypusz1",
																		"updated": "20221216002555"
																	},
																	"Children": [
																		{
																			"ID": "20221216002555-50k5eer",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221216002555-50k5eer",
																				"updated": "20221216034909"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "dockerfile编写要求"
																				}
																			]
																		},
																		{
																			"ID": "20221216002612-1d349h2",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216002612-1d349h2",
																				"updated": "20221216002657"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "1：每条保留字指令都必须为大写字母且后面要跟随至少一个参数"
																				}
																			]
																		},
																		{
																			"ID": "20221216002659-u61hwzz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216002659-u61hwzz",
																				"updated": "20221216002704"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "2：指令按照从上到下，顺序执行"
																				}
																			]
																		},
																		{
																			"ID": "20221216002706-d3930or",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216002706-d3930or",
																				"updated": "20221216002727"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "3：# 表示注释"
																				}
																			]
																		},
																		{
																			"ID": "20221216002729-0ptnj9l",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216002729-0ptnj9l",
																				"updated": "20221216002743"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "3：每条指令都会创建一个新的镜像层并对镜像进行提交"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221216011350-tnkw8mf",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221216011350-tnkw8mf"
																	},
																	"Children": [
																		{
																			"ID": "20221216011350-3drja2f",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221216011350-3drja2f",
																				"updated": "20221216034910"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "常见保留字"
																				}
																			]
																		},
																		{
																			"ID": "20221216011403-hcukxh9",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20221216011403-hcukxh9",
																				"updated": "20221216011405"
																			},
																			"Children": [
																				{
																					"ID": "20221216011405-y8u28l2",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216011405-y8u28l2",
																						"updated": "20221216011405"
																					},
																					"Children": [
																						{
																							"ID": "20221216011405-47nluh2",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216011405-47nluh2",
																								"updated": "20221216022047"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "FROM"
																								}
																							]
																						},
																						{
																							"ID": "20221216011645-9rdnqcl",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216011645-9rdnqcl",
																								"updated": "20221216011754"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "基础镜像，当前新镜像是基于哪个镜像的，指定一个已经存在的镜像作为模板，第一条是 FROM "
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216011834-zs9nrxe",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216011834-zs9nrxe"
																					},
																					"Children": [
																						{
																							"ID": "20221216011834-00jl33g",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216011834-00jl33g",
																								"updated": "20221216011835"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "MAINTAINER"
																								}
																							]
																						},
																						{
																							"ID": "20221216011837-3eor22v",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216011837-3eor22v",
																								"updated": "20221216015442"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "镜像维护者的姓名和 邮箱地址"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216015919-w1t0maa",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216015919-w1t0maa"
																					},
																					"Children": [
																						{
																							"ID": "20221216015919-qpr7kdn",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216015919-qpr7kdn",
																								"updated": "20221216022045"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "RUN"
																								}
																							]
																						},
																						{
																							"ID": "20221216015930-yn3hg7g",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216015930-yn3hg7g",
																								"updated": "20221216020015"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "镜像构建时需要运行的命令，即在docker build 时运行的"
																								}
																							]
																						},
																						{
																							"ID": "20221216015950-yqp1c4l",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216015950-yqp1c4l",
																								"updated": "20221216020414"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 两种格式\n# 第一种\nRUN yum -y install vim\n# 第二种\nRUN [\"可执行文件\",\"参数1\",\"参数2\"]\n# 例如  RUN [\"./test.php\",\"dev\",\"offline\"] 等价于 RUN ./test.php dev offline\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020437-k7ovgdh",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020437-k7ovgdh"
																					},
																					"Children": [
																						{
																							"ID": "20221216020437-8cokklc",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020437-8cokklc",
																								"updated": "20221216020439"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "EXPOSE"
																								}
																							]
																						},
																						{
																							"ID": "20221216020440-2qw8y51",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020440-2qw8y51",
																								"updated": "20221216020504"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "当前容器对外暴露出的端口"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020504-khz69f7",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020504-khz69f7"
																					},
																					"Children": [
																						{
																							"ID": "20221216020504-66f6niv",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020504-66f6niv",
																								"updated": "20221216020525"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "WORKDIR"
																								}
																							]
																						},
																						{
																							"ID": "20221216020525-6mdspyi",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020525-6mdspyi",
																								"updated": "20221216020533"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "指定在创建容器后，终端默认登陆的进来工作目录，一个落脚点"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020537-pv07gp5",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020537-pv07gp5"
																					},
																					"Children": [
																						{
																							"ID": "20221216020537-04tujnu",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020537-04tujnu",
																								"updated": "20221216020543"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "USER"
																								}
																							]
																						},
																						{
																							"ID": "20221216020544-5llygdd",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020544-5llygdd",
																								"updated": "20221216020550"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "指定该镜像以什么样的用户去执行，如果都不指定，默认是root"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020553-rds13x3",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020553-rds13x3"
																					},
																					"Children": [
																						{
																							"ID": "20221216020553-i000hg1",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020553-i000hg1",
																								"updated": "20221216020601"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "ENV"
																								}
																							]
																						},
																						{
																							"ID": "20221216020602-d0b1ckt",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020602-d0b1ckt",
																								"updated": "20221216020610"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "用于定义变量"
																								}
																							]
																						},
																						{
																							"ID": "20221216022729-xokqkiu",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216022729-xokqkiu",
																								"updated": "20221216022837"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "ENV 变量名 值\nENV mypath /usr/local\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020620-6x2l21m",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020620-6x2l21m"
																					},
																					"Children": [
																						{
																							"ID": "20221216020620-89vrxzw",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020620-89vrxzw",
																								"updated": "20221216022042"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "ADD"
																								}
																							]
																						},
																						{
																							"ID": "20221216020625-04hb8wd",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020625-04hb8wd",
																								"updated": "20221216020630"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "将宿主机目录下的文件拷贝进镜像且会自动处理URL和解压tar压缩包"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020634-a7nnibe",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020634-a7nnibe"
																					},
																					"Children": [
																						{
																							"ID": "20221216020634-hzt23ey",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020634-hzt23ey",
																								"updated": "20221216022041"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "COPY"
																								}
																							]
																						},
																						{
																							"ID": "20221216020641-1c34u8m",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020641-1c34u8m",
																								"updated": "20221216020651"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "类似ADD，拷贝文件和目录到镜像中。\n将从构建上下文目录中 \u003c源路径\u003e 的文件/目录复制到新的一层的镜像内的 \u003c目标路径\u003e 位置"
																								}
																							]
																						},
																						{
																							"ID": "20221216020715-xwqmj5d",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216020715-xwqmj5d",
																								"updated": "20221216020817"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "COPY src dest  或  COPY [\"src\", \"dest\"]\n# \u003csrc源路径\u003e：源文件或者源目录\n# \u003cdest目标路径\u003e：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020831-tym5p0p",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020831-tym5p0p"
																					},
																					"Children": [
																						{
																							"ID": "20221216020831-iee4yo3",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020831-iee4yo3",
																								"updated": "20221216022036"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "VOLUME"
																								}
																							]
																						},
																						{
																							"ID": "20221216020834-zuhai43",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020834-zuhai43",
																								"updated": "20221216020855"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "容器数据卷，用于数据保存和持久化"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020857-dqwceqv",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020857-dqwceqv"
																					},
																					"Children": [
																						{
																							"ID": "20221216020857-93xnj33",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020857-93xnj33",
																								"updated": "20221216022030"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "CMD"
																								}
																							]
																						},
																						{
																							"ID": "20221216020912-959z0q4",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020912-959z0q4",
																								"updated": "20221216020921"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "指定容器启动后的要干的事情"
																								}
																							]
																						},
																						{
																							"ID": "20221216020955-f9qasjt",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020955-f9qasjt",
																								"updated": "20221216021009"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "Dockerfile 中可以有多个 CMD 指令，但"
																								},
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "只有最后一个生效"
																								},
																								{
																									"Type": "NodeText",
																									"Data": "，"
																								},
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "CMD 会被 docker run 之后的参数替换"
																								}
																							]
																						},
																						{
																							"ID": "20221216020940-5m6bfjn",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216020940-5m6bfjn",
																								"updated": "20221216021013"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216020904-pdwbyea",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216020904-pdwbyea"
																					},
																					"Children": [
																						{
																							"ID": "20221216020904-bs79kd1",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216020904-bs79kd1",
																								"updated": "20221216022033"
																							},
																							"Children": [
																								{
																									"Type": "NodeTextMark",
																									"TextMarkType": "strong",
																									"TextMarkTextContent": "ENTRYPOINT"
																								}
																							]
																						},
																						{
																							"ID": "20221216021042-zcu8wcy",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216021042-zcu8wcy",
																								"updated": "20221216021043"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "也是用来指定一个容器启动时要运行的命令"
																								}
																							]
																						},
																						{
																							"ID": "20221216021045-q7kp9m8",
																							"Type": "NodeList",
																							"ListData": {
																								"Typ": 1
																							},
																							"Properties": {
																								"id": "20221216021045-q7kp9m8",
																								"updated": "20221216021237"
																							},
																							"Children": [
																								{
																									"ID": "20221216021237-wh9cd0v",
																									"Type": "NodeListItem",
																									"ListData": {
																										"Typ": 1,
																										"Delimiter": 46,
																										"Marker": "MS4=",
																										"Num": 1
																									},
																									"Properties": {
																										"id": "20221216021237-wh9cd0v",
																										"updated": "20221216021237"
																									},
																									"Children": [
																										{
																											"ID": "20221216021237-mq7gbym",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221216021237-mq7gbym",
																												"updated": "20221216021237"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "类似于 CMD 指令，"
																												},
																												{
																													"Type": "NodeTextMark",
																													"TextMarkType": "strong",
																													"TextMarkTextContent": "但是ENTRYPOINT不会被docker run后面的命令覆盖"
																												},
																												{
																													"Type": "NodeText",
																													"Data": "，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序"
																												}
																											]
																										}
																									]
																								}
																							]
																						},
																						{
																							"ID": "20221216021231-r17gdcm",
																							"Type": "NodeList",
																							"ListData": {
																								"Typ": 1
																							},
																							"Properties": {
																								"id": "20221216021231-r17gdcm",
																								"updated": "20221216021240"
																							},
																							"Children": [
																								{
																									"ID": "20221216021240-9qwayz9",
																									"Type": "NodeListItem",
																									"ListData": {
																										"Typ": 1,
																										"Delimiter": 46,
																										"Marker": "Mi4=",
																										"Num": 2
																									},
																									"Properties": {
																										"id": "20221216021240-9qwayz9",
																										"updated": "20221216021240"
																									},
																									"Children": [
																										{
																											"ID": "20221216021240-8oprg2a",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20221216021240-8oprg2a",
																												"updated": "20221216021240"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "如果 Dockerfile 中"
																												},
																												{
																													"Type": "NodeTextMark",
																													"TextMarkType": "strong",
																													"TextMarkTextContent": "如果存在多个 "
																												},
																												{
																													"Type": "NodeText",
																													"Data": "ENTRYPOINT 指令，"
																												},
																												{
																													"Type": "NodeTextMark",
																													"TextMarkType": "strong",
																													"TextMarkTextContent": "仅最后一个生效"
																												},
																												{
																													"Type": "NodeText",
																													"Data": "。"
																												}
																											]
																										}
																									]
																								}
																							]
																						},
																						{
																							"ID": "20221216021553-miy2z48",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216021553-miy2z48",
																								"updated": "20221216021851"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "ENTRYPOINT [\"nginx\",\"-c\"]\t# 定参\nCMD [\"/etc/nginx/nginx.conf\"]\t# 变参\t且可以被 docker run 后跟的参数替代\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221216022126-se4neny",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221216022126-se4neny"
																	},
																	"Children": [
																		{
																			"ID": "20221216022126-c6njh6v",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221216022126-c6njh6v",
																				"updated": "20221216034915"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "练习"
																				}
																			]
																		},
																		{
																			"ID": "20221216022131-kdtj8jg",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216022131-kdtj8jg",
																				"updated": "20221216034546"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "要求"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "：使用centos7的原版镜像("
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "注意指定版本7"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "，否则默认下载最新版8)，使其具有vim+ifconfig+jdk8"
																				}
																			]
																		},
																		{
																			"ID": "20221216034424-nfrkiow",
																			"Type": "NodeList",
																			"ListData": {
																				"Typ": 1
																			},
																			"Properties": {
																				"id": "20221216034424-nfrkiow",
																				"updated": "20221216034426"
																			},
																			"Children": [
																				{
																					"ID": "20221216034426-xmz48j3",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "MS4=",
																						"Num": 1
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216034426-xmz48j3",
																						"updated": "20221216034426"
																					},
																					"Children": [
																						{
																							"ID": "20221216034426-p410zpu",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216034426-p410zpu",
																								"updated": "20221216034432"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "准备文件"
																								}
																							]
																						},
																						{
																							"ID": "20221216022158-gpbrs1q",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216022158-gpbrs1q",
																								"updated": "20221216032033"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 准备centos原版镜像，jdk的压缩包 \n# jdk下载地址    https://mirrors.yangxingzhen.com/jdk/\n# 编写Dockerfile文件\nvim Dockerfile\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216034442-q4o9f7z",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "Mi4=",
																						"Num": 2
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216034442-q4o9f7z",
																						"updated": "20221216034442"
																					},
																					"Children": [
																						{
																							"ID": "20221216034442-q221ttl",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216034442-q221ttl",
																								"updated": "20221216034500"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "编写dockerfile文件"
																								}
																							]
																						},
																						{
																							"ID": "20221216021127-yjtcdr1",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216021127-yjtcdr1",
																								"updated": "20221216032131"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# Dockerfile文件内容\nFROM centos\nMAINTAINER zzyy\u003czzyybs@126.com\u003e\n \nENV MYPATH /usr/local\nWORKDIR $MYPATH\n \n#安装vim编辑器\nRUN yum -y install vim\n#安装ifconfig命令查看网络IP\nRUN yum -y install net-tools\n#安装java8及lib库\nRUN yum -y install glibc.i686\nRUN mkdir /usr/local/java\n#ADD 是相对路径jar,把jdk-8u171-linux-x64.tar.gz添加到容器中,安装包必须要和Dockerfile文件在同一位置\nADD jdk-8u121-linux-x64.tar.gz /usr/local/java/  \n#配置java环境变量\nENV JAVA_HOME /usr/local/java/jdk-8u121\nENV JRE_HOME $JAVA_HOME/jre\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH\nENV PATH $JAVA_HOME/bin:$PATH\n \nEXPOSE 80\n \nCMD echo $MYPATH\nCMD echo \"success--------------ok\"\nCMD /bin/bash\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216034510-kxq4im1",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "My4=",
																						"Num": 3
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216034510-kxq4im1"
																					},
																					"Children": [
																						{
																							"ID": "20221216034510-hxm10q4",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216034510-hxm10q4",
																								"updated": "20221216034514"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "构建镜像"
																								}
																							]
																						},
																						{
																							"ID": "20221216032218-lrampsh",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216032218-lrampsh",
																								"updated": "20221216032344"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 构建镜像\n# 格式  docker build -t 新镜像名字:TAG .    最后的点不能省略\ndocker build -t centos-puls:1.0 . \n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221216034518-di8shmm",
																					"Type": "NodeListItem",
																					"ListData": {
																						"Typ": 1,
																						"Delimiter": 46,
																						"Marker": "NC4=",
																						"Num": 4
																					},
																					"Properties": {
																						"fold": "1",
																						"id": "20221216034518-di8shmm"
																					},
																					"Children": [
																						{
																							"ID": "20221216034518-4hi1tvn",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20221216034518-4hi1tvn",
																								"updated": "20221216034521"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "启动"
																								}
																							]
																						},
																						{
																							"ID": "20221216033217-t1nf3d9",
																							"Type": "NodeCodeBlock",
																							"IsFencedCodeBlock": true,
																							"Properties": {
																								"id": "20221216033217-t1nf3d9",
																								"updated": "20221216033249"
																							},
																							"Children": [
																								{
																									"Type": "NodeCodeBlockFenceOpenMarker",
																									"Data": "```"
																								},
																								{
																									"Type": "NodeCodeBlockFenceInfoMarker",
																									"CodeBlockInfo": "YmFzaA=="
																								},
																								{
																									"Type": "NodeCodeBlockCode",
																									"Data": "# 启动验证\ndocker run -it centos-puls:1.0 /bin/bash\n"
																								},
																								{
																									"Type": "NodeCodeBlockFenceCloseMarker",
																									"Data": "```"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221216034557-vn1hl4f",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"fold": "1",
																		"id": "20221216034557-vn1hl4f"
																	},
																	"Children": [
																		{
																			"ID": "20221216034557-1toa9qs",
																			"Type": "NodeHeading",
																			"HeadingLevel": 4,
																			"Properties": {
																				"id": "20221216034557-1toa9qs",
																				"updated": "20221216034917"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "虚悬镜像"
																				}
																			]
																		},
																		{
																			"ID": "20221216034715-ccglbiw",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216034715-ccglbiw",
																				"updated": "20221216034844"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "是什么"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "：仓库名、标签都是\u003cnone\u003e的镜像，俗称dangling image，构建镜像错误时会产生"
																				}
																			]
																		},
																		{
																			"ID": "20221216034734-voq5sbl",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216034734-voq5sbl",
																				"updated": "20221216034759"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "查看当前的虚悬镜像"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "：  docker image ls -f dangling=true   "
																				}
																			]
																		},
																		{
																			"ID": "20221216034756-antecx7",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20221216034756-antecx7",
																				"updated": "20221216034825"
																			},
																			"Children": [
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "strong",
																					"TextMarkTextContent": "删除虚悬镜像"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "：  docker image prune  "
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221216034945-ukgim2k",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221216034945-ukgim2k"
									},
									"Children": [
										{
											"ID": "20221216034945-ww3x41v",
											"Type": "NodeHeading",
											"HeadingLevel": 2,
											"Properties": {
												"id": "20221216034945-ww3x41v",
												"updated": "20221216034955"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "docker微服务"
												}
											]
										},
										{
											"ID": "20221216034956-idenhcj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221216034956-idenhcj"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221216034938-08p9s22",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221216034938-08p9s22",
				"updated": "20221216034939"
			}
		}
	]
}