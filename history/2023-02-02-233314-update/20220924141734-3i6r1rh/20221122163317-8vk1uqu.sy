{
	"ID": "20221122163317-8vk1uqu",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221122163317-8vk1uqu",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221122163348-b4nyp6j\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221219212557-t46ixg5\u0026quot;,\u0026quot;scrollTop\u0026quot;:328,\u0026quot;focusId\u0026quot;:\u0026quot;20221219212520-hzfrk00\u0026quot;,\u0026quot;focusStart\u0026quot;:111,\u0026quot;focusEnd\u0026quot;:111}",
		"title": "面试题",
		"updated": "20230202233214"
	},
	"Children": [
		{
			"ID": "20221122163348-b4nyp6j",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20221122163348-b4nyp6j",
				"updated": "20221126145431"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20221122163325-szbs97c",
					"Type": "NodeHeading",
					"HeadingLevel": 1,
					"Properties": {
						"id": "20221122163325-szbs97c",
						"updated": "20221122163348"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "nginx"
						}
					]
				},
				{
					"ID": "20221122163414-v9v81zp",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221122163414-v9v81zp",
						"updated": "20221126145431"
					},
					"Children": [
						{
							"ID": "20221122163414-z93udm1",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-z93udm1",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-lw8lfrn",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-lw8lfrn",
										"updated": "20221122163559"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么是"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "？"
										}
									]
								},
								{
									"ID": "20221122163741-2j3c29m",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122163741-2j3c29m",
										"updated": "20221122163758"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "是一个 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "轻量级/高性能"
										},
										{
											"Type": "NodeText",
											"Data": "的"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "反向代理"
										},
										{
											"Type": "NodeText",
											"Data": "Web"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，用于 HTTP、HTTPS、SMTP、POP3 和 IMAP 协议。他实现非常高效的反向代理、负载平衡，他可以处理2-3万并发连接数，官方监测能支持5万并发，现在中国使用"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "网站用户有很多，例如：新浪、网易、 腾讯等。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-cyo8jx7",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "0",
								"id": "20221122163414-cyo8jx7",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-60kwvxd",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-60kwvxd",
										"updated": "20221122163634"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 有哪些优点？"
										}
									]
								},
								{
									"ID": "20221122163809-s7f4m7j",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122163809-s7f4m7j",
										"updated": "20221122163809"
									},
									"Children": [
										{
											"ID": "20221122163809-2iybqy3",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-2iybqy3",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-5vs4b1s",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-5vs4b1s",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "跨平台、配置简单。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163809-514dkf6",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-514dkf6",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-9mvls3y",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-9mvls3y",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "非阻塞、高并发连接：处理 2-3 万并发连接数，官方监测能支持 5 万并发。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163809-72hrktw",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-72hrktw",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-db0u7dk",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-db0u7dk",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "内存消耗小：开启 10 个 "
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 才占 150M 内存。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163809-7ssx743",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-7ssx743",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-hzzsivg",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-hzzsivg",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "成本低廉，且开源。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163809-w1kdtgv",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-w1kdtgv",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-8vrm8o6",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-8vrm8o6",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "稳定性高，宕机的概率非常小。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163809-upzymsr",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163809-upzymsr",
												"updated": "20221122163809"
											},
											"Children": [
												{
													"ID": "20221122163809-sb3wy28",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163809-sb3wy28",
														"updated": "20221122163809"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "内置的健康检查功能：如果有一个"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器宕机，会做一个健康检查，再发送的请求就不会发送到宕机的"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器了。重新将请求提交到其他的节点上"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-13qchca",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "0",
								"id": "20221122163414-13qchca",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-zmrf8p9",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-zmrf8p9",
										"updated": "20221122163637"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "应用场景？"
										}
									]
								},
								{
									"ID": "20221122163850-3lcyahw",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122163850-3lcyahw",
										"updated": "20221122163850"
									},
									"Children": [
										{
											"ID": "20221122163850-cjcwyg9",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163850-cjcwyg9",
												"updated": "20221122163850"
											},
											"Children": [
												{
													"ID": "20221122163850-dddndq8",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163850-dddndq8",
														"updated": "20221122163850"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "http"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器。"
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": "是一个http"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "可以独立提供http"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "。可以做网页静态"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163850-c3fvhoq",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163850-c3fvhoq",
												"updated": "20221122163850"
											},
											"Children": [
												{
													"ID": "20221122163850-5vd09wi",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163850-5vd09wi",
														"updated": "20221122163850"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "虚拟主机。可以实现在一台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器虚拟出多个网站，例如个人网站使用的虚拟机。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163850-wmsuv23",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163850-wmsuv23",
												"updated": "20221122163850"
											},
											"Children": [
												{
													"ID": "20221122163850-t5ak7l3",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163850-t5ak7l3",
														"updated": "20221122163850"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "反向代理，负载均衡。当网站的访问量达到一定程度后，单台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器不能满足用户的请求时，需要用多台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器集群可以使用"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "做反向代理。并且多台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器可以平均分担负载，不会应为某台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器负载高宕机而某台"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器闲置的情况。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122163850-cjhqqpl",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122163850-cjhqqpl",
												"updated": "20221122163850"
											},
											"Children": [
												{
													"ID": "20221122163850-mq0d2vb",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122163850-mq0d2vb",
														"updated": "20221122163850"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "nginz 中也可以配置安全管理、比如可以使用"
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": "搭建API接口网关,对每个接口"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "进行拦截。"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-qcx02hn",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "0",
								"id": "20221122163414-qcx02hn",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-iq2xe2d",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-iq2xe2d",
										"updated": "20221122163646"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "怎么处理请求的？"
										}
									]
								},
								{
									"ID": "20221122163852-3bgeitx",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122163852-3bgeitx",
										"updated": "20221122163935"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "server {         \t\t\t# 第一个Server区块开始，表示一个独立的虚拟主机站点\n   listen       80；\t\t\t # 提供服务的端口，默认80\n   server_name  localhost;\t\t # 提供服务的域名主机名\n   location / { \t\t\t# 第一个location区块开始\n     root   html; \t\t\t# 站点的根目录，相当于Nginx的安装目录\n     index  index.html index.html;  \t# 默认的首页文件，多个用空格分开\n} \t\t\t\t\t# 第一个location区块结果\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122164037-fa8bfot",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122164037-fa8bfot",
										"updated": "20221122164037"
									},
									"Children": [
										{
											"ID": "20221122164037-94v3ouo",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122164037-94v3ouo",
												"updated": "20221122164037"
											},
											"Children": [
												{
													"ID": "20221122164037-il5fu55",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122164037-il5fu55",
														"updated": "20221122164037"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "首先，"
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 在启动时，会解析配置文件，得到需要监听的端口与 IP 地址，然后在 "
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 的 Master 进程里面先初始化好这个监控的Socket(创建 S ocket，设置 addr、reuse 等选项，绑定到指定的 ip 地址端口，再 listen 监听)。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122164037-pn43b4i",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122164037-pn43b4i",
												"updated": "20221122164037"
											},
											"Children": [
												{
													"ID": "20221122164037-0sp4jv5",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122164037-0sp4jv5",
														"updated": "20221122164037"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "然后，再 fork(一个现有进程可以调用 fork 函数创建一个新进程。由 fork 创建的新进程被称为子进程 )出多个子进程出来。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122164037-ldw7e79",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122164037-ldw7e79",
												"updated": "20221122164037"
											},
											"Children": [
												{
													"ID": "20221122164037-89o1l8s",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122164037-89o1l8s",
														"updated": "20221122164037"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "之后，子进程会竞争 accept 新的连接。此时，客户端就可以向 "
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 发起连接了。当客户端与"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "进行三次握手，与 "
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 建立好一个连接后。此时，某一个子进程会 accept 成功，得到这个建立好的连接的 Socket ，然后创建 "
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 对连接的封装，即 ngx"
														},
														{
															"Type": "NodeBackslash",
															"Data": "span",
															"Children": [
																{
																	"Type": "NodeBackslashContent",
																	"Data": "_"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "connection"
														},
														{
															"Type": "NodeBackslash",
															"Data": "span",
															"Children": [
																{
																	"Type": "NodeBackslashContent",
																	"Data": "_"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "t 结构体。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122164037-2dac8n1",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122164037-2dac8n1",
												"updated": "20221122164037"
											},
											"Children": [
												{
													"ID": "20221122164037-wab8z0k",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122164037-wab8z0k",
														"updated": "20221122164037"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "接着，设置读写事件处理函数，并添加读写事件来与客户端进行数据的交换。"
														}
													]
												}
											]
										},
										{
											"ID": "20221122164037-ofqzv2h",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122164037-ofqzv2h",
												"updated": "20221122164037"
											},
											"Children": [
												{
													"ID": "20221122164037-xj48lbn",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122164037-xj48lbn",
														"updated": "20221122164037"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "最后，"
														},
														{
															"Type": "NodeText",
															"Data": "Nginx"
														},
														{
															"Type": "NodeText",
															"Data": " 或客户端来主动关掉连接，到此，一个连接就寿终正寝了。"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-uuit4yw",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-uuit4yw",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-jwsx4xf",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-jwsx4xf",
										"updated": "20221122163647"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 是如何实现高并发的？"
										}
									]
								},
								{
									"ID": "20221122164243-rc57xio",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-rc57xio",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "如果一个 server 采用一个进程(或者线程)负责一个request的方式，那么进程数就是并发数。那么显而易见的，就是会有很多进程在等待中。等什么？最多的应该是等待网络传输。"
										}
									]
								},
								{
									"ID": "20221122164243-jcmhg16",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-jcmhg16",
										"updated": "20221122164302"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "而 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 的"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "异步非阻塞工作方式"
										},
										{
											"Type": "NodeText",
											"Data": "正是利用了这点等待的时间。在需要等待的时候，这些进程就空闲出来待命了。因此表现为少数几个进程就解决了大量的并发问题。"
										}
									]
								},
								{
									"ID": "20221122164243-hltj839",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-hltj839",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "是如何利用的呢，简单来说：同样的 4 个进程，如果采用一个进程负责一个 request 的方式，那么，同时进来 4 个 request 之后，每个进程就负责其中一个，直至会话关闭。期间，如果有第 5 个request进来了。就无法及时反应了，因为 4 个进程都没干完活呢，因此，一般有个调度进程，每当新进来了一个 request ，就新开个进程来处理。"
										}
									]
								},
								{
									"ID": "20221122164243-noxwer7",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-noxwer7",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "回想下，BIO 是不是存在酱紫的问题？"
										}
									]
								},
								{
									"ID": "20221122164243-j5yalr9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-j5yalr9",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 不这样，每进来一个 request ，会有一个 worker 进程去处理。但不是全程的处理，处理到什么程度呢？处理到可能发生阻塞的地方，比如向上游（后端）"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器转发 request ，并等待请求返回。那么，这个处理的 worker 不会这么傻等着，他会在发送完请求后，注册一个事件：“如果 upstream 返回了，告诉我一声，我再接着干”。于是他就休息去了。此时，如果再有 request 进来，他就可以很快再按这种方式处理。而一旦上游"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器返回了，就会触发这个事件，worker 才会来接手，这个 request 才会接着往下走。"
										}
									]
								},
								{
									"ID": "20221122164243-ql9rr53",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-ql9rr53",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "这就是为什么说，"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 基于事件模型。"
										}
									]
								},
								{
									"ID": "20221122164243-ma9cdul",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-ma9cdul",
										"updated": "20221122164243"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "由于 web server 的工作性质决定了每个 request 的大部份生命都是在网络传输中，实际上花费在 server 机器上的时间片不多。这是几个进程就解决高并发的秘密所在。即："
										}
									]
								},
								{
									"ID": "20221122164243-ee9lnw0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-ee9lnw0",
										"updated": "20221122164427"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "webserver 刚好属于网络 IO 密集型应用，不算是计算密集型"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								},
								{
									"ID": "20221122164243-4goybjh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164243-4goybjh",
										"updated": "20221122164431"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "异步，非阻塞，使用 epoll ，和大量细节处的优化。也正是 Nginx 之所以然的技术基石"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-dhtdx66",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-dhtdx66",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-6vzc9tp",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-6vzc9tp",
										"updated": "20221122163649"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么是正向代理？"
										}
									]
								},
								{
									"ID": "20221122164439-r63lecw",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164439-r63lecw",
										"updated": "20221122164538"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "一个位于客户端和原始"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器(origin server)之间的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，为了从原始"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器取得内容，客户端"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "向代理"
										},
										{
											"Type": "NodeText",
											"Data": "发送一个请求并指定目标(原始"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器)，然后"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "代理向原始服务器转交请求"
										},
										{
											"Type": "NodeText",
											"Data": "并将获得的内容"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "返回给客户端"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								},
								{
									"ID": "20221122164439-w8djgh1",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164439-w8djgh1",
										"updated": "20221122164545"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "客户端才能使用正向代理。正向代理总结就一句话："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "代理端代理的是客户端"
										},
										{
											"Type": "NodeText",
											"Data": "。例如说：我们使用的OpenVPN 等等。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-ndjx8hq",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-ndjx8hq",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-c5071rs",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-c5071rs",
										"updated": "20221122163650"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么是反向代理？"
										}
									]
								},
								{
									"ID": "20221122164554-yg4ywh6",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164554-yg4ywh6",
										"updated": "20221122164554"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "反向代理（Reverse Proxy）方式，是指以代理"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器来接受 Internet上的连接请求，然后将请求，发给内部网络上的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器并将从"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器上得到的结果返回给 Internet 上请求连接的客户端，此时代理"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器对外就表现为一个反向代理"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器。"
										}
									]
								},
								{
									"ID": "20221122164554-z13fez5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164554-z13fez5",
										"updated": "20221122164601"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "反向代理总结就一句话："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "代理端代理的是服务端。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-pgprc5j",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-pgprc5j",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-45cawtg",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-45cawtg",
										"updated": "20221122163651"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "反向代理"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器的优点是什么?"
										}
									]
								},
								{
									"ID": "20221122164625-i3t4dc3",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122164625-i3t4dc3",
										"updated": "20221122165057"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "反向代理"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器可以"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "隐藏源服务器"
										},
										{
											"Type": "NodeText",
											"Data": "的存在和特征。它充当互联网云和web"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器之间的中间层。这对于安全方面来说是很好的，特别是当您使用web托管"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "时。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-uum4450",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-uum4450",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-kj57qxs",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-kj57qxs",
										"updated": "20221122163656"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "目录结构有哪些？"
										}
									]
								},
								{
									"ID": "20221122165108-29of2y1",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122165108-29of2y1",
										"updated": "20221122165127"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "tree /usr/local/nginx\n/usr/local/nginx\n├── client_body_temp\n├── conf                             # Nginx所有配置文件的目录\n│   ├── fastcgi.conf                 # fastcgi相关参数的配置文件\n│   ├── fastcgi.conf.default         # fastcgi.conf的原始备份文件\n│   ├── fastcgi_params               # fastcgi的参数文件\n│   ├── fastcgi_params.default   \n│   ├── koi-utf\n│   ├── koi-win\n│   ├── mime.types                   # 媒体类型\n│   ├── mime.types.default\n│   ├── nginx.conf                   # Nginx主配置文件\n│   ├── nginx.conf.default\n│   ├── scgi_params                  # scgi相关参数文件\n│   ├── scgi_params.default  \n│   ├── uwsgi_params                 # uwsgi相关参数文件\n│   ├── uwsgi_params.default\n│   └── win-utf\n├── fastcgi_temp                     # fastcgi临时数据目录\n├── html                             # Nginx默认站点目录\n│   ├── 50x.html                     # 错误页面优雅替代显示文件，例如当出现502错误时会调用此页面\n│   └── index.html                   # 默认的首页文件\n├── logs                             # Nginx日志目录\n│   ├── access.log                   # 访问日志文件\n│   ├── error.log                    # 错误日志文件\n│   └── nginx.pid                    # pid文件，Nginx进程启动后，会把所有进程的ID号写到此文件\n├── proxy_temp                       # 临时目录\n├── sbin                             # Nginx命令目录\n│   └── nginx                        # Nginx的启动命令\n├── scgi_temp                        # 临时目录\n└── uwsgi_temp                       # 临时目录\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-k4y2uo0",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-k4y2uo0",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-is3pzwg",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-is3pzwg",
										"updated": "20221122163657"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "配置文件"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": ".conf有哪些属性模块?"
										}
									]
								},
								{
									"ID": "20221122165242-kyu7oty",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122165242-kyu7oty",
										"updated": "20221122165256"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "worker_processes  1；                                    # worker进程的数量\nevents {                                                  # 事件区块开始\n    worker_connections  1024；                            # 每个worker进程支持的最大连接数\n}                                                        # 事件区块结束\nhttp {                                                   # HTTP区块开始\n    include       mime.types；                            # Nginx支持的媒体类型库文件\n    default_type  application/octet-stream；             # 默认的媒体类型\n    sendfile        on；                                   # 开启高效传输模式\n    keepalive_timeout  65；                               # 连接超时\n    server {                                            # 第一个Server区块开始，表示一个独立的虚拟主机站点\n        listen       80；                                  # 提供服务的端口，默认80\n        server_name  localhost；                           # 提供服务的域名主机名\n        location / {                                    # 第一个location区块开始\n            root   html；                               # 站点的根目录，相当于Nginx的安装目录\n            index  index.html index.htm；                  # 默认的首页文件，多个用空格分开\n        }                                                  # 第一个location区块结果\n        error_page   500502503504  /50x.html；             # 出现对应的http状态码时，使用50x.html回应客户\n        location = /50x.html {                          # location区块开始，访问50x.html\n            root   html；                                  # 指定对应的站点目录为html\n        }\n    }  \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-7ylv1ph",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "0",
								"id": "20221122163414-7ylv1ph",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-p93i148",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-p93i148",
										"updated": "20221122163702"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "cookie和session区别？"
										}
									]
								},
								{
									"ID": "20221122165644-3r2114q",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122165644-3r2114q",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "共同："
										}
									]
								},
								{
									"ID": "20221122165644-973cntf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165644-973cntf",
										"updated": "20221122165701"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "存放用户信息。存放的形式：key-value格式 变量和变量内容"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "键值对"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								},
								{
									"ID": "20221122165644-qu4mdhf",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122165644-qu4mdhf",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "区别："
										}
									]
								},
								{
									"ID": "20221122165644-ygt9gbr",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165644-ygt9gbr",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "cookie"
										}
									]
								},
								{
									"ID": "20221122165644-41aut84",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122165644-41aut84",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"ID": "20221122165644-uufdam8",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-uufdam8",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-yw4i3s7",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-yw4i3s7",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "存放在客户端浏览器"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-vchnsse",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-vchnsse",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-tobpchg",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-tobpchg",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "每个域名对应一个cookie，不能跨跃域名访问其他cookie"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-b600vkk",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-b600vkk",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-ktaj46p",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-ktaj46p",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "用户可以查看或修改cookie"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-cnaqceg",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-cnaqceg",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-4tsp2s0",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-4tsp2s0",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "http响应报文里面给你浏览器设置"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-5tu4i8p",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-5tu4i8p",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-tvpg2w0",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-tvpg2w0",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "钥匙（用于打开浏览器上锁头）"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221122165644-xwey91s",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165644-xwey91s",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "session:"
										}
									]
								},
								{
									"ID": "20221122165644-f6ts6nb",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122165644-f6ts6nb",
										"updated": "20221122165644"
									},
									"Children": [
										{
											"ID": "20221122165644-3hjoaow",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-3hjoaow",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-ymmwqfr",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-ymmwqfr",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "存放在"
														},
														{
															"Type": "NodeText",
															"Data": "服务"
														},
														{
															"Type": "NodeText",
															"Data": "器（文件，"
														},
														{
															"Type": "NodeText",
															"Data": "数据库"
														},
														{
															"Type": "NodeText",
															"Data": "，"
														},
														{
															"Type": "NodeText",
															"Data": "redis"
														},
														{
															"Type": "NodeText",
															"Data": "）"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-fnhi9ef",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-fnhi9ef",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-i97lrwu",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-i97lrwu",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "存放敏感信息"
														}
													]
												}
											]
										},
										{
											"ID": "20221122165644-rq3qvli",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122165644-rq3qvli",
												"updated": "20221122165644"
											},
											"Children": [
												{
													"ID": "20221122165644-p9v5c6a",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122165644-p9v5c6a",
														"updated": "20221122165644"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "锁头"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-yqh2rjt",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-yqh2rjt",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-4nqtz80",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-4nqtz80",
										"updated": "20221122163703"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "为什么 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 不使用多线程？"
										}
									]
								},
								{
									"ID": "20221122165747-pu6kaki",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165747-pu6kaki",
										"updated": "20221122165747"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "Apache:"
										},
										{
											"Type": "NodeText",
											"Data": " 创建多个进程或线程，而每个进程或线程都会为其分配 cpu 和内存（线程要比进程小的多，所以 worker 支持比 perfork 高的并发），并发过大会榨干"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器资源。"
										}
									]
								},
								{
									"ID": "20221122165747-niydvmi",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165747-niydvmi",
										"updated": "20221122165810"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "Nginx:"
										},
										{
											"Type": "NodeText",
											"Data": " 采用单线程"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "异步非阻塞"
										},
										{
											"Type": "NodeText",
											"Data": "处理请求（管理员可以配置 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 主进程的工作进程的数量）(epoll)，不会为每个请求分配 cpu 和内存资源，节省了大量资源，同时也减少了大量的 CPU 的上下文切换。所以才使得 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 支持更高的并发。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-om3o3ac",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-om3o3ac",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-wl4cc7p",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-wl4cc7p",
										"updated": "20221122163704"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "和apache的区别"
										}
									]
								},
								{
									"ID": "20221122165900-tass4px",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165900-tass4px",
										"updated": "20221122165900"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "轻量级，同样起web"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "，比apache占用更少的内存和资源。"
										}
									]
								},
								{
									"ID": "20221122165900-jg1pdjs",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165900-jg1pdjs",
										"updated": "20221122165900"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "抗并发，"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "处理请求是异步非阻塞的，而apache则是阻塞性的，在高并发下"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "能保持低资源，低消耗高性能。"
										}
									]
								},
								{
									"ID": "20221122165900-4fbe1ki",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165900-4fbe1ki",
										"updated": "20221122165900"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "高度模块化的设计，编写模块相对简单。"
										}
									]
								},
								{
									"ID": "20221122165900-m6ydzar",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165900-m6ydzar",
										"updated": "20221122165900"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "最核心的区别在于apache是同步多进程模型，一个连接对应一个进程，"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "是异步的，多个连接可以对应一个进程。"
										}
									]
								},
								{
									"ID": "20221122165902-0aeibcy",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165902-0aeibcy",
										"updated": "20221122165913"
									},
									"Children": [
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"parent-style": "display: block; max-width: 918px;",
												"style": "width: 908px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20221122165909-ng5t9yu.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 908px;\" parent-style=\"display: block; max-width: 918px;\"}"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-kmu09g3",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-kmu09g3",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-6x26ofw",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-6x26ofw",
										"updated": "20221122163705"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么是动态资源、静态资源分离？"
										}
									]
								},
								{
									"ID": "20221122165929-v6hfvss",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165929-v6hfvss",
										"updated": "20221122165929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "动态资源、静态资源分离，是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路。"
										}
									]
								},
								{
									"ID": "20221122165929-jl75udl",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165929-jl75udl",
										"updated": "20221122165929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "动态资源、静态资源分离简单的概括是：动态文件与静态文件的分离。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-vpu3a7z",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-vpu3a7z",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-4e4wc1a",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-4e4wc1a",
										"updated": "20221122163706"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "为什么要做动、静分离？"
										}
									]
								},
								{
									"ID": "20221122165954-z7wl7m8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165954-z7wl7m8",
										"updated": "20221122170017"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在我们的软件开发中，有些请求是需要后台处理的（如：.jsp,.do 等等），有些请求是不需要经过后台处理的（如：css、html、jpg、js 等等文件），这些"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "不需要经过后台处理的文件称为静态文件"
										},
										{
											"Type": "NodeText",
											"Data": "，"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "否则动态文件"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								},
								{
									"ID": "20221122165954-new8i28",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165954-new8i28",
										"updated": "20221122165954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "因此我们后台处理忽略静态文件。这会有人又说那我后台忽略静态文件不就完了吗？当然这是可以的，但是这样后台的请求次数就明显增多了。在我们对资源的响应速度有要求的时候，我们应该使用这种动静分离的策略去解决动、静分离将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署，提高用户访问静态代码的速度，降低对后台应用访问"
										}
									]
								},
								{
									"ID": "20221122165954-8siyyr4",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165954-8siyyr4",
										"updated": "20221122165954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "这里我们将静态资源放到 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 中，动态资源转发到 "
										},
										{
											"Type": "NodeText",
											"Data": "Tomcat"
										},
										{
											"Type": "NodeText",
											"Data": " "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器中去。"
										}
									]
								},
								{
									"ID": "20221122165954-jb47sy3",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165954-jb47sy3",
										"updated": "20221122165954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "当然，因为现在七牛、"
										},
										{
											"Type": "NodeText",
											"Data": "阿里云"
										},
										{
											"Type": "NodeText",
											"Data": "等 CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "已经很成熟，主流的做法，是把静态资源缓存到 CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "中，从而提升访问速度。"
										}
									]
								},
								{
									"ID": "20221122165954-9gv9rvh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122165954-9gv9rvh",
										"updated": "20221122165954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "相比本地的 "
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 来说，CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器由于在国内有更多的节点，可以实现用户的就近访问。并且，CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "可以提供更大的带宽，不像我们自己的应用"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "，提供的带宽是有限的。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-6e05cnc",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-6e05cnc",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-dw2lny3",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-dw2lny3",
										"updated": "20221122163706"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么叫 CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "？"
										}
									]
								},
								{
									"ID": "20221122170048-ducfran",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170048-ducfran",
										"updated": "20221122170048"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "CDN ，即内容分发网络。"
										}
									]
								},
								{
									"ID": "20221122170048-ya2e04f",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170048-ya2e04f",
										"updated": "20221122170113"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "其目的是，通过在现有的 Internet中 增加一层新的网络架构，"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "将网站的内容发布到最接近用户的网络边缘，使用户可"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong mark",
											"TextMarkTextContent": "就近"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "取得所需的内容"
										},
										{
											"Type": "NodeText",
											"Data": "，提"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "高用户访问网站的速度。"
										}
									]
								},
								{
									"ID": "20221122170048-uftoo4o",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170048-uftoo4o",
										"updated": "20221122170048"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "一般来说，因为现在 CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "比较大众，所以基本所有公司都会使用 CDN "
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-4bl5ncd",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-4bl5ncd",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-i1byz8j",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-i1byz8j",
										"updated": "20221122163707"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "怎么做的动静分离？"
										}
									]
								},
								{
									"ID": "20221122170119-xze5nj7",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170119-xze5nj7",
										"updated": "20221122170216"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "只需要指定路径对应的目录。location/可以使用"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "正则表达式匹配"
										},
										{
											"Type": "NodeText",
											"Data": "。并指定对应的硬盘中的目录。如下：（操作都是在Linux上）"
										}
									]
								},
								{
									"ID": "20221122170130-aleltrj",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170130-aleltrj",
										"updated": "20221122170149"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "location /image/ {\n    root   /usr/local/static/;\n    autoindex on;\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170153-02w7e7d",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170153-02w7e7d"
									}
								}
							]
						},
						{
							"ID": "20221122163414-w68vi0l",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-w68vi0l",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-hye81rk",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-hye81rk",
										"updated": "20221122163708"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "负载均衡的算法怎么实现的?策略有哪些?"
										}
									]
								},
								{
									"ID": "20221122170234-yi888yi",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-yi888yi",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "为了避免"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器崩溃，大家会通过负载均衡的方式来分担"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器压力。将对台"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器组成一个集群，当用户访问时，先访问到一个转发"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，再由转发"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器将访问分发到压力更小的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器。"
										}
									]
								},
								{
									"ID": "20221122170234-2ifv7zl",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-2ifv7zl",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "负载均衡实现的策略有以下五种："
										}
									]
								},
								{
									"ID": "20221122170234-almib2t",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170234-almib2t",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1 .轮询(默认)"
										}
									]
								},
								{
									"ID": "20221122170234-nrp1xhz",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-nrp1xhz",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "每个请求按时间顺序逐一分配到不同的后端"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，如果后端某个"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器宕机，能自动剔除故障系统。"
										}
									]
								},
								{
									"ID": "20221122170234-vc6ur5v",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170234-vc6ur5v",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "upstream backserver { \n server 192.168.0.12; \n server 192.168.0.13; \n} \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170234-0qh6fs2",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170234-0qh6fs2",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "2. 权重 weight"
										}
									]
								},
								{
									"ID": "20221122170234-k7eexq3",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-k7eexq3",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "weight的值越大，分配到的访问概率越高，主要用于后端每台"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器性能不均衡的情况下。其次是为在主从的情况下设置不同的权值，达到合理有效的地利用主机资源。"
										}
									]
								},
								{
									"ID": "20221122170234-5myag8q",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170234-5myag8q",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 权重越高，在被访问的概率越大，如上例，分别是20%，80%。\nupstream backserver { \n server 192.168.0.12 weight=2; \n server 192.168.0.13 weight=8; \n} \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170234-617qv0b",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170234-617qv0b",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "3. ip_hash( IP绑定)"
										}
									]
								},
								{
									"ID": "20221122170234-az7cxk8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-az7cxk8",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "每个请求按访问IP的哈希结果分配，使来自同一个IP的访客固定访问一台后端"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，并且可以有效解决动态网页存在的session共享问题"
										}
									]
								},
								{
									"ID": "20221122170234-9y515ju",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170234-9y515ju",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "upstream backserver { \n ip_hash; \n server 192.168.0.12:88; \n server 192.168.0.13:80; \n} \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170234-44pjnqx",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170234-44pjnqx",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "4. fair(第三方插件)"
										}
									]
								},
								{
									"ID": "20221122170234-gcnb80k",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-gcnb80k",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "必须安装upstream_fair模块。"
										}
									]
								},
								{
									"ID": "20221122170234-jbcc518",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-jbcc518",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "对比 weight、ip_hash更加智能的负载均衡算法，fair算法可以根据页面大小和加载时间长短智能地进行负载均衡，响应时间短的优先分配。"
										}
									]
								},
								{
									"ID": "20221122170234-negd3cv",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170234-negd3cv",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 哪个服务器的响应速度快，就将请求分配到那个服务器上。\nupstream backserver { \n server server1; \n server server2; \n fair; \n} \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170234-0fncrdt",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170234-0fncrdt",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "5.url_hash(第三方插件)"
										}
									]
								},
								{
									"ID": "20221122170234-nhqahhm",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-nhqahhm",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "必须安装"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "的hash软件包"
										}
									]
								},
								{
									"ID": "20221122170234-o0zubv2",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170234-o0zubv2",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "按访问url的hash结果来分配请求，使每个url定向到同一个后端"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，可以进一步提高后端缓存"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器的效率。"
										}
									]
								},
								{
									"ID": "20221122170234-j1wr97n",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170234-j1wr97n",
										"updated": "20221122170234"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "upstream backserver { \n server squid1:3128; \n server squid2:3128; \n hash $request_uri; \n hash_method crc32; \n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-rkqhsnr",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-rkqhsnr",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-ttx7pu7",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-ttx7pu7",
										"updated": "20221122163713"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "如何用"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "解决前端跨域问题？"
										}
									]
								},
								{
									"ID": "20221122170339-qekp8q8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170339-qekp8q8",
										"updated": "20221122170344"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "使用"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "转发请求。把跨域的接口写成调本域的接口，然后将这些接口转发到真正的请求地址"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-3ipsa1m",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-3ipsa1m",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-cqz1sv8",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-cqz1sv8",
										"updated": "20221122163715"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "虚拟主机怎么配置?"
										}
									]
								},
								{
									"ID": "20221122170350-2avov1r",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170350-2avov1r",
										"updated": "20221122170350"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1、基于域名的虚拟主机，通过域名来区分虚拟主机——应用：外部网站"
										}
									]
								},
								{
									"ID": "20221122170350-zr2cnss",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170350-zr2cnss",
										"updated": "20221122170350"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "2、基于端口的虚拟主机，通过端口来区分虚拟主机——应用：公司内部网站，外部网站的管理后台"
										}
									]
								},
								{
									"ID": "20221122170350-adu7v1d",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170350-adu7v1d",
										"updated": "20221122170350"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "3、基于ip的虚拟主机。"
										}
									]
								},
								{
									"ID": "20221122170413-ibcdj6p",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170413-ibcdj6p",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "基于虚拟主机配置域名"
										}
									]
								},
								{
									"ID": "20221122170413-6437de9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170413-6437de9",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "需要建立"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "/data/www /data/bbs"
										},
										{
											"Type": "NodeText",
											"Data": "​​目录，windows本地hosts添加虚拟机ip地址对应的域名解析；对应域名网站目录下新增index.html文件；"
										}
									]
								},
								{
									"ID": "20221122170413-dr84vck",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170413-dr84vck",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 当客户端访问www.lijie.com,监听端口号为80,直接跳转到data/www目录下文件\nserver {\n    listen       80;\n    server_name  www.lijie.com;\n    location / {\n        root   data/www;\n        index  index.html index.htm;\n    }\n}\n\n# 当客户端访问www.lijie.com,监听端口号为80,直接跳转到data/bbs目录下文件\n server {\n    listen       80;\n    server_name  bbs.lijie.com;\n    location / {\n        root   data/bbs;\n        index  index.html index.htm;\n    }\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170413-95rxdpf",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170413-95rxdpf",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "基于端口的虚拟主机"
										}
									]
								},
								{
									"ID": "20221122170413-thwei63",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170413-thwei63",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "使用端口来区分，浏览器使用域名或ip地址:端口号 访问"
										}
									]
								},
								{
									"ID": "20221122170413-aon54q5",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170413-aon54q5",
										"updated": "20221122170413"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 当客户端访问www.lijie.com,监听端口号为8080,直接跳转到data/www目录下文件\n server {\n    listen       8080;\n    server_name  8080.lijie.com;\n    location / {\n        root   data/www;\n        index  index.html index.htm;\n    }\n}\n\n# 当客户端访问www.lijie.com,监听端口号为80直接跳转到真实ip服务器地址 127.0.0.1:8080\nserver {\n    listen       80;\n    server_name  www.lijie.com;\n    location / {\n         proxy_pass http://127.0.0.1:8080;\n        index  index.html index.htm;\n    }\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-qlfqzwi",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-qlfqzwi",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-kr8b88r",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-kr8b88r",
										"updated": "20221122163715"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "location的作用是什么？"
										}
									]
								},
								{
									"ID": "20221122170443-lir0a8o",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170443-lir0a8o",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "location指令的作用是根据用户请求的URI来执行不同的应用，也就是根据用户请求的网站URL进行匹配，匹配成功即进行相关的操作。"
										}
									]
								},
								{
									"ID": "20221122170443-z7ob41i",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170443-z7ob41i",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "location的语法能说出来吗？"
										}
									]
								},
								{
									"ID": "20221122170443-5zxjhzx",
									"Type": "NodeBlockquote",
									"Properties": {
										"id": "20221122170443-5zxjhzx",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeBlockquoteMarker",
											"Data": "\u003e"
										},
										{
											"ID": "20221122170443-jelnjxs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122170443-jelnjxs",
												"updated": "20221122170443"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "注意：~ 代表自己输入的英文字母"
												}
											]
										}
									]
								},
								{
									"ID": "20221122170443-h5jnqh1",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170443-h5jnqh1",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsNkHmReOhOMLoKpzwbpDweTTIFqGtibCL0leyMic4sWQ2NlOkiavkugsRrQ/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"ID": "20221122170443-d5s561n",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170443-d5s561n",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Location正则案例"
										}
									]
								},
								{
									"ID": "20221122170443-p79rhdw",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170443-p79rhdw",
										"updated": "20221122170443"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 优先级1,精确匹配，根路径\nlocation =/ {\n    return 400;\n}\n\n# 优先级2,以某个字符串开头,以av开头的，优先匹配这里，区分大小写\nlocation ^~ /av {\n   root /data/av/;\n}\n\n# 优先级3，区分大小写的正则匹配，匹配/media*****路径\nlocation ~ /media {\n      alias /data/static/;\n}\n\n# 优先级4 ，不区分大小写的正则匹配，所有的****.jpg|gif|png 都走这里\nlocation ~* .*\\.(jpg|gif|png|js|css)$ {\n   root  /data/av/;\n}\n\n# 优先7，通用匹配\nlocation / {\n    return 403;\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-jvumj1p",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-jvumj1p",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-u1g5b80",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-u1g5b80",
										"updated": "20221122163716"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "限流怎么做的？"
										}
									]
								},
								{
									"ID": "20221122170531-bz42das",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-bz42das",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "限流就是限制用户请求速度，防止"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器受不了"
										}
									]
								},
								{
									"ID": "20221122170531-88voodw",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-88voodw",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "限流有3种"
										}
									]
								},
								{
									"ID": "20221122170531-ogh9ok1",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122170531-ogh9ok1",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"ID": "20221122170531-ghkak1t",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122170531-ghkak1t",
												"updated": "20221122170531"
											},
											"Children": [
												{
													"ID": "20221122170531-6980agu",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122170531-6980agu",
														"updated": "20221122170531"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "正常限制访问频率（正常流量）"
														}
													]
												}
											]
										},
										{
											"ID": "20221122170531-u8jc8cf",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122170531-u8jc8cf",
												"updated": "20221122170531"
											},
											"Children": [
												{
													"ID": "20221122170531-arml8mb",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122170531-arml8mb",
														"updated": "20221122170531"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "突发限制访问频率（突发流量）"
														}
													]
												}
											]
										},
										{
											"ID": "20221122170531-elrvreu",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122170531-elrvreu",
												"updated": "20221122170531"
											},
											"Children": [
												{
													"ID": "20221122170531-xe4alk7",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122170531-xe4alk7",
														"updated": "20221122170531"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "限制并发连接数"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221122170531-sk7kjw8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-sk7kjw8",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "的限流都是基于漏桶流算法"
										}
									]
								},
								{
									"ID": "20221122170531-i2fi6d3",
									"Type": "NodeBlockquote",
									"Properties": {
										"id": "20221122170531-i2fi6d3",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeBlockquoteMarker",
											"Data": "\u003e"
										},
										{
											"ID": "20221122170531-1jb1btm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221122170531-1jb1btm",
												"updated": "20221122170531"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "实现三种限流算法"
												}
											]
										}
									]
								},
								{
									"ID": "20221122170531-2418w5i",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170531-2418w5i",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1、正常限制访问频率（正常流量）："
										}
									]
								},
								{
									"ID": "20221122170531-5i5mik6",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-5i5mik6",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "限制一个用户发送的请求，我"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "多久接收一个请求。"
										}
									]
								},
								{
									"ID": "20221122170531-nl8nwn7",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-nl8nwn7",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "中使用"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "ngx_http_limit_req_module"
										},
										{
											"Type": "NodeText",
											"Data": "​​模块来限制的访问频率，限制的原理实质是基于漏桶算法原理来实现的。在"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": ".conf配置文件中可以使用"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "limit_req_zone"
										},
										{
											"Type": "NodeText",
											"Data": "​​命令及"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "limit_req"
										},
										{
											"Type": "NodeText",
											"Data": "​​命令限制单个IP的请求处理频率。"
										}
									]
								},
								{
									"ID": "20221122170531-khptwww",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170531-khptwww",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;\n\n# 绑定限流维度\nserver{\n    \n    location/seckill.html{\n        limit_req zone=zone;    \n        proxy_pass http://lj_seckill;\n    }\n\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170531-d0k6e8q",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-d0k6e8q",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1r/s代表1秒一个请求，1r/m一分钟接收一个请求， 如果"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "这时还有别人的请求没有处理完，"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "就会拒绝处理该用户请求。"
										}
									]
								},
								{
									"ID": "20221122170531-hcn226n",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170531-hcn226n",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "2、突发限制访问频率（突发流量）："
										}
									]
								},
								{
									"ID": "20221122170531-mzcqhx0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-mzcqhx0",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "限制一个用户发送的请求，我"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "多久接收一个。"
										}
									]
								},
								{
									"ID": "20221122170531-o3x000f",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-o3x000f",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "上面的配置一定程度可以限制访问频率，但是也存在着一个问题：如果突发流量超出请求被拒绝处理，无法处理活动时候的突发流量，这时候应该如何进一步处理呢？"
										}
									]
								},
								{
									"ID": "20221122170531-oty80ff",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-oty80ff",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "提供burst参数结合nodelay参数可以解决流量突发的问题，可以设置能处理的超过设置的请求数外能额外处理的请求数。我们可以将之前的例子添加burst参数以及nodelay参数："
										}
									]
								},
								{
									"ID": "20221122170531-rzsukhk",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170531-rzsukhk",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "# 定义限流维度，一个用户一分钟一个请求进来，多余的全部漏掉\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;\n\n# 绑定限流维度\nserver{\n    \n    location/seckill.html{\n        limit_req zone=zone burst=5 nodelay;\n        proxy_pass http://lj_seckill;\n    }\n\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170531-9w7daku",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-9w7daku",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "为什么就多了一个 burst=5 nodelay; 呢，多了这个可以代表"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "对于一个用户的请求会立即处理前五个，多余的就慢慢来落，没有其他用户的请求我就处理你的，有其他的请求的话我"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "就漏掉不接受你的请求"
										}
									]
								},
								{
									"ID": "20221122170531-e91crx4",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170531-e91crx4",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "3、 限制并发连接数"
										}
									]
								},
								{
									"ID": "20221122170531-f9upkfx",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-f9upkfx",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "中的"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "ngx_http_limit_conn_module"
										},
										{
											"Type": "NodeText",
											"Data": "​​模块提供了限制并发连接数的功能，可以使用"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "limit_conn_zone"
										},
										{
											"Type": "NodeText",
											"Data": "​​指令以及"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "limit_conn"
										},
										{
											"Type": "NodeText",
											"Data": "​​执行进行配置。接下来我们可以通过一个简单的例子来看下："
										}
									]
								},
								{
									"ID": "20221122170531-ckhn53n",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170531-ckhn53n",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "http {\n    limit_conn_zone $binary_remote_addr zone=myip:10m;\n    limit_conn_zone $server_name zone=myServerName:10m;\n}\n\nserver {\n    location / {\n        limit_conn myip 10;\n        limit_conn myServerName 100;\n        rewrite / http://www.lijie.net permanent;\n    }\n} \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122170531-paoizqe",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170531-paoizqe",
										"updated": "20221122170531"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "上面配置了单个IP同时并发连接数最多只能10个连接，并且设置了整个虚拟"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器同时最大并发数最多只能100个链接。当然，只有当请求的header被"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器处理后，虚拟"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器的连接数才会计数。刚才有提到过"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "是基于漏桶算法原理实现的，实际上限流一般都是基于漏桶算法和令牌桶算法实现的。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-t3o7alr",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-t3o7alr",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-v7hcx0j",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-v7hcx0j",
										"updated": "20221122163717"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "漏桶流算法和令牌桶算法知道？"
										}
									]
								},
								{
									"ID": "20221122170558-gayi8ry",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170558-gayi8ry",
										"updated": "20221122170558"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "漏桶算法"
										}
									]
								},
								{
									"ID": "20221122170558-22dfl0z",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170558-22dfl0z",
										"updated": "20221122170558"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "漏桶算法思路很简单，我们把水比作是请求，漏桶比作是系统处理能力极限，水先进入到漏桶里，漏桶里的水按一定速率流出，当流出的速率小于流入的速率时，由于漏桶容量有限，后续进入的水直接溢出（拒绝请求），以此实现限流。"
										}
									]
								},
								{
									"ID": "20221122170558-qh86zwe",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170558-qh86zwe",
										"updated": "20221122170607"
									},
									"Children": [
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"parent-style": "display: block;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsN9icLF2qLwHhy68fiaHfm5VflRngF5M283iblm5OFvvIZEjZRCoxXeCHzA/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: parent-style=\"display: block;\"}"
										}
									]
								},
								{
									"ID": "20221122170558-uejlp95",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122170558-uejlp95",
										"updated": "20221122170558"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "令牌桶算法"
										}
									]
								},
								{
									"ID": "20221122170558-vws6uiy",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170558-vws6uiy",
										"updated": "20221122170558"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "令牌桶算法的原理也比较简单，我们可以理解成医院的挂号看病，只有拿到号以后才可以进行诊病。"
										}
									]
								},
								{
									"ID": "20221122170558-wg3oz47",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170558-wg3oz47",
										"updated": "20221122170558"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "系统会维护一个令牌（token）桶，以一个恒定的速度往桶里放入令牌（token），这时如果有请求进来想要被处理，则需要先从桶里获取一个令牌（token），当桶里没有令牌（token）可取时，则该请求将被拒绝"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "。令牌桶算法通过控制桶的容量、发放令牌的速率，来达到对请求的限制。"
										}
									]
								},
								{
									"ID": "20221122170558-7l7e2jo",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170558-7l7e2jo",
										"updated": "20221122170628"
									},
									"Children": [
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"parent-style": "display: block; max-width: 824px;",
												"style": "width: 814px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsNzGLocl6NRcIWmC2IKxZUlUGVssdqFysG1JDGfbwkKCejswylicjavsw/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 814px;\" parent-style=\"display: block; max-width: 824px;\"}"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-de9576z",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-de9576z",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-d82ppvx",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-d82ppvx",
										"updated": "20221122163718"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "配置高可用性怎么配置？"
										}
									]
								},
								{
									"ID": "20221122170647-1nknv1d",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170647-1nknv1d",
										"updated": "20221122170647"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "当上游"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器(真实访问"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器)，一旦出现故障或者是没有及时相应的话，应该直接轮训到下一台"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器，保证"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器的高可用"
										}
									]
								},
								{
									"ID": "20221122170647-n68shjn",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170647-n68shjn",
										"updated": "20221122170647"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "配置代码："
										}
									]
								},
								{
									"ID": "20221122170647-6p2hdf3",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170647-6p2hdf3",
										"updated": "20221122170647"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "server {\n        listen       80;\n        server_name  www.lijie.com;\n        location / {\n            ### 指定上游服务器负载均衡服务器\n            proxy_pass http://backServer;\n            ###nginx与上游服务器(真实访问的服务器)超时时间 后端服务器连接的超时时间_发起握手等候响应超时时间\n            proxy_connect_timeout 1s;\n            ###nginx发送给上游服务器(真实访问的服务器)超时时间\n            proxy_send_timeout 1s;\n            ### nginx接受上游服务器(真实访问的服务器)超时时间\n            proxy_read_timeout 1s;\n            index  index.html index.htm;\n        }\n    }\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-cc2nkf7",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-cc2nkf7",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-hzs2v4o",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-hzs2v4o",
										"updated": "20221122163719"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "怎么判断别IP不可访问？"
										}
									]
								},
								{
									"ID": "20221122170735-bynjioe",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170735-bynjioe",
										"updated": "20221122170739"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "  # 如果访问的ip地址为192.168.9.115,则返回403\n if  ($remote_addr = 192.168.9.115) {  \n     return 403;  \n }  \n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-8ewn7q2",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-8ewn7q2",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-d2vwon1",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-d2vwon1",
										"updated": "20221122163723"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "中，如何使用未定义的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器名称来阻止处理请求？"
										}
									]
								},
								{
									"ID": "20221122170811-j7ncxxz",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170811-j7ncxxz",
										"updated": "20221122170811"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "只需将请求删除的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器就可以定义为："
										}
									]
								},
								{
									"ID": "20221122170811-cgcfj1s",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122170811-cgcfj1s",
										"updated": "20221122170811"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器名被保留一个空字符串，他在没有主机头字段的情况下匹配请求，而一个特殊的"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "的非标准代码被返回，从而终止连接。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-3lieumr",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-3lieumr",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-7tq19aa",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-7tq19aa",
										"updated": "20221122163723"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "怎么限制浏览器访问？"
										}
									]
								},
								{
									"ID": "20221122170813-norcqrv",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170813-norcqrv",
										"updated": "20221122170824"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "dG9tbA=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "## 不允许谷歌浏览器访问 如果是谷歌浏览器返回500\nif ($http_user_agent ~ Chrome) {   \n  return 500;  \n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-uzjvduw",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-uzjvduw",
								"updated": "20221126145431"
							},
							"Children": [
								{
									"ID": "20221122163414-wbzbs99",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-wbzbs99",
										"updated": "20221126145431"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "全局变量是什么？"
										}
									]
								},
								{
									"ID": "20221122170826-04msgnd",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122170826-04msgnd",
										"updated": "20221122170958"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "Yw=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "$remote_addr        \t//获取客户端ip\n$binary_remote_addr \t//客户端ip（二进制)\n$remote_port     \t//客户端port，如：50472\n$remote_user        \t//已经经过Auth Basic Module验证的用户名\n$host           \t//请求主机头字段，否则为服务器名称，如:blog.sakmon.com\n$request        \t//用户请求信息，如：GET ?a=1\u0026b=2 HTTP/1.1\n$request_filename   \t//当前请求的文件的路径名，由root或alias和URI request组合而成，如：/2013/81.html\n$status         \t//请求的响应状态码,如:200\n$body_bytes_sent       // 响应时送出的body字节数数量。即使连接中断，这个数据也是精确的,如：40\n$content_length        // 等于请求行的“Content_Length”的值\n$content_type          // 等于请求行的“Content_Type”的值\n$http_referer          // 引用地址\n$http_user_agent      \t// 客户端agent信息,如：Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.76 Safari/537.36\n$args            \t//与$query_string相同 等于当中URL的参数(GET)，如a=1\u0026b=2\n$document_uri        \t//与$uri相同  这个变量指当前的请求URI，不包括任何参数(见$args) 如:/2013/81.html\n$document_root       \t//针对当前请求的根路径设置值\n$hostname        \t//如：centos53.localdomain\n$http_cookie        \t//客户端cookie信息\n$cookie_COOKIE      \t//cookie COOKIE变量的值\n$is_args    \t\t//如果有$args参数，这个变量等于”?”，否则等于”\"，空值，如?\n$limit_rate \t\t//这个变量可以限制连接速率，0表示不限速\n$query_string       \t// 与$args相同 等于当中URL的参数(GET)，如a=1\u0026b=2\n$request_body      \t// 记录POST过来的数据信息\n$request_body_file  \t//客户端请求主体信息的临时文件名\n$request_method       \t//客户端请求的动作，通常为GET或POST,如：GET\n$request_uri          \t//包含请求参数的原始URI，不包含主机名，如：/2013/81.html?a=1\u0026b=2\n$scheme            \t//HTTP方法（如http，https）,如：http\n$uri          \t\t  //这个变量指当前的请求URI，不包括任何参数(见$args) 如:/2013/81.html\n$request_completion \t//如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)，如：OK\n$server_protocol    \t//请求使用的协议，通常是HTTP/1.0或HTTP/1.1，如：HTTP/1.1\n$server_addr        \t//服务器IP地址，在完成一次系统调用后可以确定这个值\n$server_name       \t //服务器名称，如：blog.sakmon.com\n$server_port       \t //请求到达服务器的端口号,如：80\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-7mn75pr",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-7mn75pr",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-g24tkjx",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-g24tkjx",
										"updated": "20221122163725"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 如何实现后端"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "的健康检查？"
										}
									]
								},
								{
									"ID": "20221122171046-k0qm67u",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171046-k0qm67u",
										"updated": "20221122171046"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方式一，利用 "
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 自带模块 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "ngx_http_proxy_module"
										},
										{
											"Type": "NodeText",
											"Data": "​​ 和 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "ngx_http_upstream_module"
										},
										{
											"Type": "NodeText",
											"Data": "​​ 对后端节点做健康检查。"
										}
									]
								},
								{
									"ID": "20221122171046-mqem1nf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171046-mqem1nf",
										"updated": "20221122171046"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方式二(推荐)，利用 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "nginx_upstream_check_module"
										},
										{
											"Type": "NodeText",
											"Data": "​​ 模块对后端节点做健康检查。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-se8hdnv",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-se8hdnv",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-fbe3w9n",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-fbe3w9n",
										"updated": "20221122163726"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " 如何开启压缩？"
										}
									]
								},
								{
									"ID": "20221122171107-sxa29fx",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-sxa29fx",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "开启"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": " gzip压缩后，网页、css、js等静态资源的大小会大大的减少，从而可以节约大量的带宽，提高传输效率，给用户快的体验。虽然会消耗cpu资源，但是为了给用户更好的体验是值得的。"
										}
									]
								},
								{
									"ID": "20221122171107-skwgvw0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-skwgvw0",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "开启的配置如下："
										}
									]
								},
								{
									"ID": "20221122171107-tkh0dq8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-tkh0dq8",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "将以上配置放到"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": ".conf的"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "http{ … }"
										},
										{
											"Type": "NodeText",
											"Data": "​​节点中。"
										}
									]
								},
								{
									"ID": "20221122171107-a1gtx93",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122171107-a1gtx93",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "http {\n  # 开启gzip\n  gzip on;\n \n  # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩\n  gzip_min_length 1k;\n \n  # gzip 压缩级别 1-10 \n  gzip_comp_level 2;\n \n  # 进行压缩的文件类型。\n \n  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n \n  # 是否在http header中添加Vary: Accept-Encoding，建议开启\n  gzip_vary on;\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20221122171107-s1jnur6",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-s1jnur6",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "保存并重启"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "，刷新页面（为了避免缓存，请强制刷新）就能看到效果了。以谷歌浏览器为例，通过F12看请求的响应头部："
										}
									]
								},
								{
									"ID": "20221122171107-aro7r14",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-aro7r14",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "我们可以先来对比下，如果我们没有开启zip压缩之前，我们的对应的文件大小，如下所示："
										}
									]
								},
								{
									"ID": "20221122171107-tcgyqma",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-tcgyqma",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsN5S9ILfsysyKEhibZ1va359rnCdvdp0zVgUUzD4HjXicAYrl6b40Cv26Q/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"ID": "20221122171107-jh7efjs",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-jh7efjs",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "现在我们开启了gzip进行压缩后的文件的大小，可以看到如下所示："
										}
									]
								},
								{
									"ID": "20221122171107-zyfrrlm",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-zyfrrlm",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsNxc5qCaV6gu6XHb6QSiadDT28WoNVGMbnu6jSfzSqQiavLSFgoJpmSkCw/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"ID": "20221122171107-nx5gkzh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-nx5gkzh",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "并且我们查看响应头会看到gzip这样的压缩，如下所示"
										}
									]
								},
								{
									"ID": "20221122171107-zazzjmd",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-zazzjmd",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "图片"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpmhyoLIHKKIPFUpRayJmOsNL4eVEiadMicsAmXrFs6TWXqzB4MibQozWXTk9WiacMhMzHDN7F1C8g0Y6A/640?wx_fmt=png\u0026wxfrom=5\u0026wx_lazy=1\u0026wx_co=1"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"ID": "20221122171107-xn50myf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-xn50myf",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "gzip压缩前后效果对比：jquery原大小90kb，压缩后只有30kb。"
										}
									]
								},
								{
									"ID": "20221122171107-a2ryfcb",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-a2ryfcb",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "gzip虽然好用，但是以下类型的资源不建议启用。"
										}
									]
								},
								{
									"ID": "20221122171107-ylct9vu",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122171107-ylct9vu",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1、图片类型"
										}
									]
								},
								{
									"ID": "20221122171107-0o1xss8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-0o1xss8",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "原因：图片如jpg、png本身就会有压缩，所以就算开启gzip后，压缩前和压缩后大小没有多大区别，所以开启了反而会白白的浪费资源。（Tips：可以试试将一张jpg图片压缩为zip，观察大小并没有多大的变化。虽然zip和gzip算法不一样，但是可以看出压缩图片的价值并不大）"
										}
									]
								},
								{
									"ID": "20221122171107-2i2v3nf",
									"Type": "NodeHeading",
									"HeadingLevel": 4,
									"Properties": {
										"id": "20221122171107-2i2v3nf",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "2、大文件"
										}
									]
								},
								{
									"ID": "20221122171107-x6qg5pj",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-x6qg5pj",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "原因：会消耗大量的cpu资源，且不一定有明显的效果。"
										}
									]
								},
								{
									"ID": "20221122171107-7rhrvmn",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122171107-7rhrvmn",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "ngx_http_upstream_module的作用是什么?"
										}
									]
								},
								{
									"ID": "20221122171107-wo0e3ze",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171107-wo0e3ze",
										"updated": "20221122171107"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "ngx"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBackslashContent",
													"Data": "_"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "http"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBackslashContent",
													"Data": "_"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "upstream"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBackslashContent",
													"Data": "_"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "module用于定义可通过fastcgi传递、proxy传递、uwsgi传递、memcached传递和scgi传递指令来引用的"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器组。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-o9tgqfi",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-o9tgqfi",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-cfds1es",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-cfds1es",
										"updated": "20221122163729"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "什么是C10K问题?"
										}
									]
								},
								{
									"ID": "20221122171243-widzlbp",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171243-widzlbp",
										"updated": "20221122171249"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "C10K问题是指无法同时处理大量客户端(10,000)的网络套接字"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-qka4tin",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-qka4tin",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-gmeed8e",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-gmeed8e",
										"updated": "20221122163730"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "是否支持将请求压缩到上游?"
										}
									]
								},
								{
									"ID": "20221122171251-vbhbwbp",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171251-vbhbwbp",
										"updated": "20221122171258"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "您可以使用"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "模块gunzip将请求压缩到上游。gunzip模块是一个过滤器，它可以对不支持“gzip”编码方法的客户机或"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器使用“内容编码:gzip”来解压缩响应"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-9jii4uk",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-9jii4uk",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-sz8r4yi",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-sz8r4yi",
										"updated": "20221122163734"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "如何在"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "中获得当前的时间?"
										}
									]
								},
								{
									"ID": "20221122171304-4iwrveo",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171304-4iwrveo",
										"updated": "20221122171304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "要获得"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "的当前时间，必须使用SSI模块、和date"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBackslashContent",
													"Data": "_"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "local的变量。"
										}
									]
								},
								{
									"ID": "20221122171304-ecsxmhv",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20221122171304-ecsxmhv",
										"updated": "20221122171304"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker"
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "Proxy_set_header THE-TIME $date_gmt;\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-zitbadt",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-zitbadt",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-y3xdxvm",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-y3xdxvm",
										"updated": "20221122163735"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "用"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器解释-s的目的是什么?"
										}
									]
								},
								{
									"ID": "20221122171306-b6lb9ko",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171306-b6lb9ko",
										"updated": "20221122171313"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "用于运行"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": " -s参数的可执行文件。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-6m33qqz",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-6m33qqz",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-2os8vff",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-2os8vff",
										"updated": "20221122163736"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "如何在"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "器上添加模块?"
										}
									]
								},
								{
									"ID": "20221122171315-b6wrapy",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171315-b6wrapy",
										"updated": "20221122171319"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在编译过程中，必须选择"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "模块，因为"
										},
										{
											"Type": "NodeText",
											"Data": "Nginx"
										},
										{
											"Type": "NodeText",
											"Data": "不支持模块的运行时间选择。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-yrlff08",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-yrlff08",
								"updated": "20221122163414"
							},
							"Children": [
								{
									"ID": "20221122163414-z8l8210",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-z8l8210",
										"updated": "20221122163736"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "生产中如何设置worker进程的数量呢？"
										}
									]
								},
								{
									"ID": "20221122171321-7yrcgam",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171321-7yrcgam",
										"updated": "20221122171325"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在有多个cpu的情况下，可以设置多个worker，worker进程的数量可以设置到和cpu的核心数一样多，如果在单个cpu上起多个worker进程，那么操作系统会在多个worker之间进行调度，这种情况会降低系统性能，如果只有一个cpu，那么只启动一个worker进程就可以了。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122163414-dpsj2on",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "1",
								"id": "20221122163414-dpsj2on",
								"updated": "20221122171349"
							},
							"Children": [
								{
									"ID": "20221122163414-hz8nd8u",
									"Type": "NodeHeading",
									"HeadingLevel": 2,
									"Properties": {
										"id": "20221122163414-hz8nd8u",
										"updated": "20221122163737"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "状态码"
										}
									]
								},
								{
									"ID": "20221122171349-5eyufkr",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-5eyufkr",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "499："
										}
									]
								},
								{
									"ID": "20221122171349-n5ayvd6",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-n5ayvd6",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "服务"
										},
										{
											"Type": "NodeText",
											"Data": "端处理时间过长，客户端主动关闭了连接。"
										}
									]
								},
								{
									"ID": "20221122171349-3hrjvpv",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-3hrjvpv",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "502："
										}
									]
								},
								{
									"ID": "20221122171349-pj9b6hf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-pj9b6hf",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(1).FastCGI进程是否已经启动"
										}
									]
								},
								{
									"ID": "20221122171349-u4fv1dr",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-u4fv1dr",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(2).FastCGI worker进程数是否不够"
										}
									]
								},
								{
									"ID": "20221122171349-rbn3fp0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-rbn3fp0",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(3).FastCGI执行时间过长"
										}
									]
								},
								{
									"ID": "20221122171349-q099s18",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122171349-q099s18",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"ID": "20221122171349-zlpo6pe",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-zlpo6pe",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-ot5kho7",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-ot5kho7",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "fastcgi_connect_timeout 300;"
														}
													]
												}
											]
										},
										{
											"ID": "20221122171349-l6jpzsn",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-l6jpzsn",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-mfr6xk0",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-mfr6xk0",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "fastcgi_send_timeout 300;"
														}
													]
												}
											]
										},
										{
											"ID": "20221122171349-kh5d4c9",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-kh5d4c9",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-w15sx1j",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-w15sx1j",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "fastcgi_read_timeout 300;"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221122171349-s8a0b6f",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-s8a0b6f",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(4).FastCGI Buffer不够，"
										},
										{
											"Type": "NodeText",
											"Data": "nginx"
										},
										{
											"Type": "NodeText",
											"Data": "和apache一样，有前端缓冲限制，可以调整缓冲参数"
										}
									]
								},
								{
									"ID": "20221122171349-s0okkzu",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122171349-s0okkzu",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"ID": "20221122171349-h16wqrc",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-h16wqrc",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-z7ox29w",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-z7ox29w",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "fastcgi_buffer_size 32k;"
														}
													]
												}
											]
										},
										{
											"ID": "20221122171349-y1uk2xn",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-y1uk2xn",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-x2a8gl1",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-x2a8gl1",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "fastcgi_buffers 8 32k;"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221122171349-kts37mt",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-kts37mt",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(5). Proxy Buffer不够，如果你用了Proxying，调整"
										}
									]
								},
								{
									"ID": "20221122171349-k5wvrn9",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122171349-k5wvrn9",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"ID": "20221122171349-gf7edny",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-gf7edny",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-q5utp87",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-q5utp87",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "proxy_buffer_size 16k;"
														}
													]
												}
											]
										},
										{
											"ID": "20221122171349-rc9wg3a",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-rc9wg3a",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-5jcq22v",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-5jcq22v",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "proxy_buffers 4 16k;"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20221122171349-66juo4p",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122171349-66juo4p",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "(6).php脚本执行时间过长"
										}
									]
								},
								{
									"ID": "20221122171349-agghobh",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221122171349-agghobh",
										"updated": "20221122171349"
									},
									"Children": [
										{
											"ID": "20221122171349-ey9rqg4",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221122171349-ey9rqg4",
												"updated": "20221122171349"
											},
											"Children": [
												{
													"ID": "20221122171349-oizffvj",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221122171349-oizffvj",
														"updated": "20221122171349"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "将php-fpm.conf的0s的0s改成一个时间"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20221122163317-emc698i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122163317-emc698i",
				"updated": "20221122163317"
			}
		},
		{
			"ID": "20221215191253-n145bkw",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20221215191253-n145bkw",
				"updated": "20221215235231"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20221122171409-72b99ed",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221122171409-72b99ed",
						"updated": "20221215235231"
					},
					"Children": [
						{
							"ID": "20221215191255-pd186w9",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"fold": "0",
								"id": "20221215191255-pd186w9",
								"updated": "20221215235231"
							},
							"Children": [
								{
									"ID": "20221215191255-may19yu",
									"Type": "NodeHeading",
									"HeadingLevel": 1,
									"Properties": {
										"id": "20221215191255-may19yu",
										"updated": "20221215191257"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "redis"
										}
									]
								},
								{
									"ID": "20221215191259-9w978wk",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221215191259-9w978wk",
										"updated": "20221215235231"
									},
									"Children": [
										{
											"ID": "20221215191301-v6s8iio",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221215191301-v6s8iio",
												"updated": "20221215235231"
											},
											"Children": [
												{
													"ID": "20221215191301-zfp4pha",
													"Type": "NodeHeading",
													"HeadingLevel": 2,
													"Properties": {
														"id": "20221215191301-zfp4pha",
														"updated": "20221215191338"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "1~2亿条数据需要缓存，请问如何设计这个存储案例"
														}
													]
												},
												{
													"ID": "20221215191338-gnj2n98",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221215191338-gnj2n98",
														"updated": "20221215191425"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "使用分布式存储，一般有三种解决方案"
														}
													]
												},
												{
													"ID": "20221215191426-hyfy16d",
													"Type": "NodeList",
													"ListData": {
														"Typ": 1
													},
													"Properties": {
														"id": "20221215191426-hyfy16d",
														"updated": "20221215235231"
													},
													"Children": [
														{
															"ID": "20221215191428-wr010hk",
															"Type": "NodeListItem",
															"ListData": {
																"Typ": 1,
																"Delimiter": 46,
																"Marker": "MS4=",
																"Num": 1
															},
															"Properties": {
																"fold": "1",
																"id": "20221215191428-wr010hk",
																"updated": "20221215191428"
															},
															"Children": [
																{
																	"ID": "20221215191428-pirnpft",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191428-pirnpft",
																		"updated": "20221215191756"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": " 哈希取余算法"
																		}
																	]
																},
																{
																	"ID": "20221215191918-17zgkx1",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191918-17zgkx1",
																		"updated": "20221215191936"
																	},
																	"Children": [
																		{
																			"Type": "NodeImage",
																			"Data": "span",
																			"Properties": {
																				"parent-style": "max-width: 383px; display: block;",
																				"style": "width: 373px;"
																			},
																			"Children": [
																				{
																					"Type": "NodeBang"
																				},
																				{
																					"Type": "NodeOpenBracket"
																				},
																				{
																					"Type": "NodeLinkText",
																					"Data": "image"
																				},
																				{
																					"Type": "NodeCloseBracket"
																				},
																				{
																					"Type": "NodeOpenParen"
																				},
																				{
																					"Type": "NodeLinkDest",
																					"Data": "assets/image-20221215191931-m2vrg95.png"
																				},
																				{
																					"Type": "NodeCloseParen"
																				}
																			]
																		},
																		{
																			"Type": "NodeKramdownSpanIAL",
																			"Data": "{: style=\"width: 373px;\" parent-style=\"max-width: 383px; display: block;\"}"
																		}
																	]
																},
																{
																	"ID": "20221215191756-5xbipf5",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191756-5xbipf5",
																		"updated": "20221215191832"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "2亿条记录就是2亿个k,v，我们单机不行必须要分布式多机，假设有3台机器构成一个集群，用户每次读写操作都是根据公式：\nhash(key) % N个机器台数，计算出哈希值，用来决定数据映射到哪一个节点上。"
																		}
																	]
																},
																{
																	"ID": "20221215191834-5v12pl8",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191834-5v12pl8",
																		"updated": "20221215192053"
																	},
																	"Children": [
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "优点"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "："
																		},
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "简单粗暴，直接有效"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "，只需要预估好数据规划好节点，例如3台、8台、10台，就能保证一段时间的数据支撑。使用Hash算法让固定的一部分请求落到同一台服务器上，这样每台服务器固定处理一部分请求（并维护这些请求的信息），起到负载均衡+分而治之的作用。"
																		}
																	]
																},
																{
																	"ID": "20221215191856-z07b3e1",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191856-z07b3e1",
																		"updated": "20221215192049"
																	},
																	"Children": [
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "缺点"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "：原来规划好的节点，进行"
																		},
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "扩容或者缩容就比较麻烦"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "了，不管扩缩，每次数据变动导致节点有变动，映射关系需要重新进行计算，在服务器个数固定不变时没有问题，如果"
																		},
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "需要弹性扩容或故障停机"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "的情况下，原来的取模公式就会发生变化：Hash(key)/3会变成Hash(key) /?。此时地址经过取余运算的结果将发生很大变化，根据公式获取的服务器也会变得不可控。\n"
																		},
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "某个redis机器宕机了，由于台数数量变化，会导致hash取余全部数据重新洗牌"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "。"
																		}
																	]
																}
															]
														},
														{
															"ID": "20221215191956-s6pesc3",
															"Type": "NodeListItem",
															"ListData": {
																"Typ": 1,
																"Delimiter": 46,
																"Marker": "Mi4=",
																"Num": 2
															},
															"Properties": {
																"fold": "1",
																"id": "20221215191956-s6pesc3"
															},
															"Children": [
																{
																	"ID": "20221215191956-d3tnr8m",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215191956-d3tnr8m",
																		"updated": "20221215192202"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "一致性哈希算法"
																		}
																	]
																},
																{
																	"ID": "20221215192202-p2mlvgx",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20221215192202-p2mlvgx",
																		"updated": "20221215200946"
																	},
																	"Children": [
																		{
																			"ID": "20221215200946-n5dnp9t",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215200946-n5dnp9t",
																				"updated": "20221215200946"
																			},
																			"Children": [
																				{
																					"ID": "20221215200946-c10rxfb",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215200946-c10rxfb",
																						"updated": "20221215200954"
																					},
																					"Children": [
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "是什么"
																						}
																					]
																				},
																				{
																					"ID": "20221215200954-jmadg7m",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215200954-jmadg7m"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "在1997年由麻省理工学院中提出的，"
																						},
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "目的是解决分布式缓存数据变动和映射问题"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "，某台机器宕机了，取余的结果自然就改变，数据存取会发生错误。"
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215192411-eaudg0z",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20221215192411-eaudg0z",
																		"updated": "20221215200950"
																	},
																	"Children": [
																		{
																			"ID": "20221215200950-q6kuoe2",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215200950-q6kuoe2",
																				"updated": "20221215200950"
																			},
																			"Children": [
																				{
																					"ID": "20221215200950-r5cozf3",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215200950-r5cozf3",
																						"updated": "20221215200959"
																					},
																					"Children": [
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "能做什么"
																						}
																					]
																				},
																				{
																					"ID": "20221215200959-zao166q",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215200959-zao166q"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "目的是当服务器个数发生变动时，"
																						},
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "尽量减少影响客户端到服务器的映射关系"
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20221215192550-ufyjw12",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20221215192550-ufyjw12",
																		"updated": "20221215201006"
																	},
																	"Children": [
																		{
																			"ID": "20221215201006-bvuncdn",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"fold": "1",
																				"id": "20221215201006-bvuncdn",
																				"updated": "20221215201006"
																			},
																			"Children": [
																				{
																					"ID": "20221215201006-esuuw77",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201006-esuuw77",
																						"updated": "20221215201006"
																					},
																					"Children": [
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "步骤"
																						}
																					]
																				},
																				{
																					"ID": "20221215192611-4t3pu2e",
																					"Type": "NodeList",
																					"ListData": {
																						"Typ": 1
																					},
																					"Properties": {
																						"id": "20221215192611-4t3pu2e",
																						"updated": "20221215201023"
																					},
																					"Children": [
																						{
																							"ID": "20221215201023-zqfd8bm",
																							"Type": "NodeListItem",
																							"ListData": {
																								"Typ": 1,
																								"Delimiter": 46,
																								"Marker": "MS4=",
																								"Num": 1
																							},
																							"Properties": {
																								"fold": "1",
																								"id": "20221215201023-zqfd8bm",
																								"updated": "20221215201023"
																							},
																							"Children": [
																								{
																									"ID": "20221215201023-hv9ijcq",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201023-hv9ijcq",
																										"updated": "20221215201023"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "算法构建一致性哈希环"
																										}
																									]
																								},
																								{
																									"ID": "20221215192821-gpyboxm",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215192821-gpyboxm",
																										"updated": "20221215192939"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "哈希值为一个线性的区域，通过逻辑控制，将线性区域的首尾相连，构成一个逻辑上的环形空间"
																										}
																									]
																								},
																								{
																									"ID": "20221215200755-62327mi",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215200755-62327mi",
																										"updated": "20221215200856"
																									},
																									"Children": [
																										{
																											"Type": "NodeImage",
																											"Data": "span",
																											"Properties": {
																												"parent-style": "max-width: 330px; display: block;",
																												"style": "width: 320px;"
																											},
																											"Children": [
																												{
																													"Type": "NodeBang"
																												},
																												{
																													"Type": "NodeOpenBracket"
																												},
																												{
																													"Type": "NodeLinkText",
																													"Data": "image"
																												},
																												{
																													"Type": "NodeCloseBracket"
																												},
																												{
																													"Type": "NodeOpenParen"
																												},
																												{
																													"Type": "NodeLinkDest",
																													"Data": "assets/image-20221215200756-dtdwzx2.png"
																												},
																												{
																													"Type": "NodeCloseParen"
																												}
																											]
																										},
																										{
																											"Type": "NodeKramdownSpanIAL",
																											"Data": "{: style=\"width: 320px;\" parent-style=\"max-width: 330px; display: block;\"}"
																										}
																									]
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221215192700-uske1gr",
																					"Type": "NodeList",
																					"ListData": {
																						"Typ": 1
																					},
																					"Properties": {
																						"id": "20221215192700-uske1gr",
																						"updated": "20221215201038"
																					},
																					"Children": [
																						{
																							"ID": "20221215201038-lchqvv0",
																							"Type": "NodeListItem",
																							"ListData": {
																								"Typ": 1,
																								"Delimiter": 46,
																								"Marker": "Mi4=",
																								"Num": 2
																							},
																							"Properties": {
																								"fold": "1",
																								"id": "20221215201038-lchqvv0",
																								"updated": "20221215201038"
																							},
																							"Children": [
																								{
																									"ID": "20221215201038-g2ga808",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201038-g2ga808",
																										"updated": "20221215201038"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "服务器ip节点映射"
																										}
																									]
																								},
																								{
																									"ID": "20221215200801-1tfeuib",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215200801-1tfeuib",
																										"updated": "20221215200837"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "将集群中各个IP节点映射到环上的某一个位置。\n   将各个"
																										},
																										{
																											"Type": "NodeTextMark",
																											"TextMarkType": "strong",
																											"TextMarkTextContent": "服务器"
																										},
																										{
																											"Type": "NodeText",
																											"Data": "使用Hash进行一个哈希，具体可以选择服务器的IP或主机名作为关键字进行哈希，这样每台机器就能确定其在哈希环上的位置。假如4个节点NodeA、B、C、D，经过IP地址的哈希函数计算(hash(ip))，使用IP地址哈希后在环空间的位置如下："
																										}
																									]
																								},
																								{
																									"ID": "20221215200823-g1ep7cw",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215200823-g1ep7cw",
																										"updated": "20221215200903"
																									},
																									"Children": [
																										{
																											"Type": "NodeImage",
																											"Data": "span",
																											"Properties": {
																												"parent-style": "max-width: 367px; display: block;",
																												"style": "width: 357px;"
																											},
																											"Children": [
																												{
																													"Type": "NodeBang"
																												},
																												{
																													"Type": "NodeOpenBracket"
																												},
																												{
																													"Type": "NodeLinkText",
																													"Data": "image"
																												},
																												{
																													"Type": "NodeCloseBracket"
																												},
																												{
																													"Type": "NodeOpenParen"
																												},
																												{
																													"Type": "NodeLinkDest",
																													"Data": "assets/image-20221215200824-r3m4xnx.png"
																												},
																												{
																													"Type": "NodeCloseParen"
																												}
																											]
																										},
																										{
																											"Type": "NodeKramdownSpanIAL",
																											"Data": "{: style=\"width: 357px;\" parent-style=\"max-width: 367px; display: block;\"}"
																										}
																									]
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20221215192716-uf3yyb7",
																					"Type": "NodeList",
																					"ListData": {
																						"Typ": 1
																					},
																					"Properties": {
																						"id": "20221215192716-uf3yyb7",
																						"updated": "20221215201050"
																					},
																					"Children": [
																						{
																							"ID": "20221215201050-eechm5h",
																							"Type": "NodeListItem",
																							"ListData": {
																								"Typ": 1,
																								"Delimiter": 46,
																								"Marker": "My4=",
																								"Num": 3
																							},
																							"Properties": {
																								"fold": "1",
																								"id": "20221215201050-eechm5h",
																								"updated": "20221215201050"
																							},
																							"Children": [
																								{
																									"ID": "20221215201050-rbgckxp",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201050-rbgckxp",
																										"updated": "20221215201050"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "key落到服务器的落键规则"
																										}
																									]
																								},
																								{
																									"ID": "20221215200821-i0asw2g",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215200821-i0asw2g",
																										"updated": "20221215200921"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "当我们需要存储一个kv键值对时，首先计算key的hash值，hash(key)，将这个key使用相同的函数Hash计算出哈希值并确定此数据在环上的位置，从此位置沿环顺时针“行走”，第一台遇到的服务器就是其应该定位到的服务器，并将该键值对存储在该节点上。\n如我们有Object A、Object B、Object C、Object D四个数据对象，经过哈希计算后，在环空间上的位置如下：根据一致性Hash算法，数据A会被定为到Node A上，B被定为到Node B上，C被定为到Node C上，D被定为到Node D上。"
																										}
																									]
																								},
																								{
																									"ID": "20221215200923-1gojwzc",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215200923-1gojwzc",
																										"updated": "20221215200932"
																									},
																									"Children": [
																										{
																											"Type": "NodeImage",
																											"Data": "span",
																											"Properties": {
																												"parent-style": "max-width: 410px; display: block;",
																												"style": "width: 400px;"
																											},
																											"Children": [
																												{
																													"Type": "NodeBang"
																												},
																												{
																													"Type": "NodeOpenBracket"
																												},
																												{
																													"Type": "NodeLinkText",
																													"Data": "image"
																												},
																												{
																													"Type": "NodeCloseBracket"
																												},
																												{
																													"Type": "NodeOpenParen"
																												},
																												{
																													"Type": "NodeLinkDest",
																													"Data": "assets/image-20221215200928-f76cp5m.png"
																												},
																												{
																													"Type": "NodeCloseParen"
																												}
																											]
																										},
																										{
																											"Type": "NodeKramdownSpanIAL",
																											"Data": "{: style=\"width: 400px;\" parent-style=\"max-width: 410px; display: block;\"}"
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20221215201105-0qolonu",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215201105-0qolonu"
																			},
																			"Children": [
																				{
																					"ID": "20221215201105-x9r0vsu",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201105-x9r0vsu",
																						"updated": "20221215201128"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "优点"
																						}
																					]
																				},
																				{
																					"ID": "20221215201131-8krcwbg",
																					"Type": "NodeList",
																					"ListData": {},
																					"Properties": {
																						"id": "20221215201131-8krcwbg",
																						"updated": "20221215201203"
																					},
																					"Children": [
																						{
																							"ID": "20221215201203-8xnqlkg",
																							"Type": "NodeListItem",
																							"ListData": {
																								"BulletChar": 42,
																								"Marker": "Kg=="
																							},
																							"Properties": {
																								"fold": "1",
																								"id": "20221215201203-8xnqlkg",
																								"updated": "20221215201203"
																							},
																							"Children": [
																								{
																									"ID": "20221215201203-k20rulc",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201203-k20rulc",
																										"updated": "20221215201218"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "容错性"
																										}
																									]
																								},
																								{
																									"ID": "20221215201219-1hqz9j0",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201219-1hqz9j0"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "假设Node C宕机，可以看到此时对象A、B、D不会受到影响，只有C对象被重定位到Node D。一般的，在一致性Hash算法中，如果一台服务器不可用，则受影响的数据仅仅是此服务器到其环空间中前一台服务器（即沿着逆时针方向行走遇到的第一台服务器）之间数据，其它不会受到影响。简单说，就是C挂了，受到影响的只是B、C之间的数据，并且这些数据会转移到D进行存储。"
																										}
																									]
																								},
																								{
																									"ID": "20221215201152-oa7pnvc",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201152-oa7pnvc",
																										"updated": "20221215201159"
																									},
																									"Children": [
																										{
																											"Type": "NodeImage",
																											"Data": "span",
																											"Properties": {
																												"parent-style": "max-width: 365px; display: block;",
																												"style": "width: 355px;"
																											},
																											"Children": [
																												{
																													"Type": "NodeBang"
																												},
																												{
																													"Type": "NodeOpenBracket"
																												},
																												{
																													"Type": "NodeLinkText",
																													"Data": "image"
																												},
																												{
																													"Type": "NodeCloseBracket"
																												},
																												{
																													"Type": "NodeOpenParen"
																												},
																												{
																													"Type": "NodeLinkDest",
																													"Data": "assets/image-20221215201154-4b60ds6.png"
																												},
																												{
																													"Type": "NodeCloseParen"
																												}
																											]
																										},
																										{
																											"Type": "NodeKramdownSpanIAL",
																											"Data": "{: style=\"width: 355px;\" parent-style=\"max-width: 365px; display: block;\"}"
																										}
																									]
																								}
																							]
																						},
																						{
																							"ID": "20221215201256-cbix5jz",
																							"Type": "NodeListItem",
																							"ListData": {
																								"BulletChar": 42,
																								"Marker": "Kg=="
																							},
																							"Properties": {
																								"fold": "1",
																								"id": "20221215201256-cbix5jz"
																							},
																							"Children": [
																								{
																									"ID": "20221215201256-lp0ys3g",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201256-lp0ys3g",
																										"updated": "20221215201308"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "扩展性"
																										}
																									]
																								},
																								{
																									"ID": "20221215201308-l2oncbg",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201308-l2oncbg",
																										"updated": "20221215201313"
																									},
																									"Children": [
																										{
																											"Type": "NodeText",
																											"Data": "数据量增加了，需要增加一台节点NodeX，X的位置在A和B之间，那收到影响的也就是A到X之间的数据，重新把A到X的数据录入到X上即可，\n不会导致hash取余全部数据重新洗牌。"
																										}
																									]
																								},
																								{
																									"ID": "20221215201314-n77e0x7",
																									"Type": "NodeParagraph",
																									"Properties": {
																										"id": "20221215201314-n77e0x7",
																										"updated": "20221215201325"
																									},
																									"Children": [
																										{
																											"Type": "NodeImage",
																											"Data": "span",
																											"Properties": {
																												"parent-style": "max-width: 323px; display: block;",
																												"style": "width: 313px;"
																											},
																											"Children": [
																												{
																													"Type": "NodeBang"
																												},
																												{
																													"Type": "NodeOpenBracket"
																												},
																												{
																													"Type": "NodeLinkText",
																													"Data": "image"
																												},
																												{
																													"Type": "NodeCloseBracket"
																												},
																												{
																													"Type": "NodeOpenParen"
																												},
																												{
																													"Type": "NodeLinkDest",
																													"Data": "assets/image-20221215201319-9nkqlji.png"
																												},
																												{
																													"Type": "NodeCloseParen"
																												}
																											]
																										},
																										{
																											"Type": "NodeKramdownSpanIAL",
																											"Data": "{: style=\"width: 313px;\" parent-style=\"max-width: 323px; display: block;\"}"
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20221215201344-gwaq7k8",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215201344-gwaq7k8"
																			},
																			"Children": [
																				{
																					"ID": "20221215201344-cmdiu2e",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201344-cmdiu2e",
																						"updated": "20221215201351"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "缺点"
																						}
																					]
																				},
																				{
																					"ID": "20221215201355-dqth8s8",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201355-dqth8s8",
																						"updated": "20221215201409"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "Hash环的数据倾斜问题"
																						}
																					]
																				},
																				{
																					"ID": "20221215201410-u6uioir",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201410-u6uioir",
																						"updated": "20221215201415"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "一致性Hash算法在服务节点太少时，容易因为节点分布不均匀而造成数据倾斜（被缓存的对象大部分集中缓存在某一台服务器上）问题，\n例如系统中只有两台服务器："
																						}
																					]
																				},
																				{
																					"ID": "20221215201417-77awy30",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215201417-77awy30",
																						"updated": "20221215201425"
																					},
																					"Children": [
																						{
																							"Type": "NodeImage",
																							"Data": "span",
																							"Properties": {
																								"parent-style": "display: block; max-width: 312px;",
																								"style": "width: 302px;"
																							},
																							"Children": [
																								{
																									"Type": "NodeBang"
																								},
																								{
																									"Type": "NodeOpenBracket"
																								},
																								{
																									"Type": "NodeLinkText",
																									"Data": "image"
																								},
																								{
																									"Type": "NodeCloseBracket"
																								},
																								{
																									"Type": "NodeOpenParen"
																								},
																								{
																									"Type": "NodeLinkDest",
																									"Data": "assets/image-20221215201422-di6y6wg.png"
																								},
																								{
																									"Type": "NodeCloseParen"
																								}
																							]
																						},
																						{
																							"Type": "NodeKramdownSpanIAL",
																							"Data": "{: style=\"width: 302px;\" parent-style=\"display: block; max-width: 312px;\"}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"ID": "20221215201631-yvqjouc",
															"Type": "NodeListItem",
															"ListData": {
																"Typ": 1,
																"Delimiter": 46,
																"Marker": "My4=",
																"Num": 3
															},
															"Properties": {
																"fold": "1",
																"id": "20221215201631-yvqjouc",
																"updated": "20221215235231"
															},
															"Children": [
																{
																	"ID": "20221215201631-tm72qxe",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20221215201631-tm72qxe",
																		"updated": "20221215234528"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "哈希槽（slot）分区"
																		}
																	]
																},
																{
																	"ID": "20221215201726-wu45q24",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20221215201726-wu45q24",
																		"updated": "20221215235231"
																	},
																	"Children": [
																		{
																			"ID": "20221215234605-xw8dzh3",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215234605-xw8dzh3",
																				"updated": "20221215234605"
																			},
																			"Children": [
																				{
																					"ID": "20221215234605-utgw0p8",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215234605-utgw0p8",
																						"updated": "20221215234616"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "解决什么问题"
																						}
																					]
																				},
																				{
																					"ID": "20221215234617-3n4vjtg",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215234617-3n4vjtg",
																						"updated": "20221215234650"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "解决一致性哈希算法的数据倾斜问题"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20221215234651-h8gqcaq",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215234651-h8gqcaq"
																			},
																			"Children": [
																				{
																					"ID": "20221215234651-khsuk9s",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215234651-khsuk9s",
																						"updated": "20221215234658"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "能干什么"
																						}
																					]
																				},
																				{
																					"ID": "20221215234659-tjsyyua",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215234659-tjsyyua",
																						"updated": "20221215234803"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "解决均匀分配的问题，在数据节点之间又加入了一层，把这层称为哈希槽。用于管理数据和节点之间的关系。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20221215235052-brojalv",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20221215235052-brojalv",
																				"updated": "20221215235231"
																			},
																			"Children": [
																				{
																					"ID": "20221215235052-7yrad24",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20221215235052-7yrad24",
																						"updated": "20221215235231"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "多少个槽 "
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122171409-5l65dpr",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122171409-5l65dpr",
						"updated": "20221215191253"
					}
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20221122171409-u1n1hov",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122171409-u1n1hov"
			}
		},
		{
			"ID": "20221219212510-frh7uq5",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20221219212510-frh7uq5",
				"updated": "20221219213243"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20221219212503-g8e64xp",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221219212503-g8e64xp",
						"updated": "20221219213243"
					},
					"Children": [
						{
							"ID": "20221219212511-clt5xbt",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221219212511-clt5xbt",
								"updated": "20221219213243"
							},
							"Children": [
								{
									"ID": "20221219212511-mjf8fdg",
									"Type": "NodeHeading",
									"HeadingLevel": 1,
									"Properties": {
										"id": "20221219212511-mjf8fdg",
										"updated": "20221219212516"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "lvs"
										}
									]
								},
								{
									"ID": "20221219212517-l4rvh5e",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20221219212517-l4rvh5e",
										"updated": "20221219213243"
									},
									"Children": [
										{
											"ID": "20221219212519-ume2m8p",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221219212519-ume2m8p",
												"updated": "20221219212519"
											},
											"Children": [
												{
													"ID": "20221219212520-a3o6bno",
													"Type": "NodeHeading",
													"HeadingLevel": 2,
													"Properties": {
														"id": "20221219212520-a3o6bno",
														"updated": "20221219212613"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "为什么DR模式下web服务器需要lo网卡绑定vip？"
														}
													]
												},
												{
													"ID": "20221219212520-hzfrk00",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221219212520-hzfrk00",
														"updated": "20221219212520"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "web服务器接收到的数据包的目标mac是自己，目标ip却是lvs的vip地址，不绑定的情况下，数据解包到ip发现目标ip不是自己，将丢弃这条数据。\n若直接绑定vip，则会造成局域网内ip冲突，所以需要用回环网卡绑定vip。"
														}
													]
												},
												{
													"ID": "20221219212546-dyf6gix",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221219212546-dyf6gix",
														"updated": "20221219212557"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "a",
															"TextMarkAHref": "siyuan://blocks/20221219200455-4npka1l",
															"TextMarkTextContent": "原链接"
														}
													]
												}
											]
										},
										{
											"ID": "20221219213237-gyv663l",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20221219213237-gyv663l",
												"updated": "20221219213243"
											},
											"Children": [
												{
													"ID": "20221219213239-ayreike",
													"Type": "NodeHeading",
													"HeadingLevel": 2,
													"Properties": {
														"id": "20221219213239-ayreike",
														"updated": "20221219213243"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "为什么要抑制web服务器的arp解析？"
														}
													]
												},
												{
													"ID": "20221219213239-pkmrl8y",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20221219213239-pkmrl8y",
														"updated": "20221219213239"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "如果不抑制web服务器的arp解析，当路由器进行VIP的arp广播时，会有多台机器（包括lvs，web服务器）响应，导致arp混淆。"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221219212504-qhqdlb6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221219212504-qhqdlb6",
						"updated": "20221219212511"
					}
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20230202201230-c39cdy7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230202201230-c39cdy7",
				"updated": "20230202201230"
			}
		},
		{
			"ID": "20230202201248-ryqv2kz",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20230202201248-ryqv2kz",
				"updated": "20230202233214"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20230202201233-hb7e61f",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20230202201233-hb7e61f",
						"updated": "20230202233214"
					},
					"Children": [
						{
							"ID": "20230202201250-w865v10",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230202201250-w865v10",
								"updated": "20230202233214"
							},
							"Children": [
								{
									"ID": "20230202201250-0hckjk8",
									"Type": "NodeHeading",
									"HeadingLevel": 1,
									"Properties": {
										"id": "20230202201250-0hckjk8",
										"updated": "20230202201310"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "综合"
										}
									]
								},
								{
									"ID": "20230202201311-kms6rq0",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20230202201311-kms6rq0",
										"updated": "20230202233214"
									},
									"Children": [
										{
											"ID": "20230202201327-hl82h4l",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201327-hl82h4l",
												"updated": "20230202201327"
											},
											"Children": [
												{
													"ID": "20230202201327-lpnxg9e",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201327-lpnxg9e",
														"updated": "20230202211255"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "三次握手和四次挥手的相关问题"
														}
													]
												},
												{
													"ID": "20230202203451-27jpomc",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20230202203451-27jpomc",
														"updated": "20230202203457"
													},
													"Children": [
														{
															"ID": "20230202203457-low9748",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202203457-low9748",
																"updated": "20230202203457"
															},
															"Children": [
																{
																	"ID": "20230202203457-o7dbhh1",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202203457-o7dbhh1",
																		"updated": "20230202210603"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "三次握手过程"
																		}
																	]
																},
																{
																	"ID": "20230202203616-s0umrjv",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20230202203616-s0umrjv",
																		"updated": "20230202203623"
																	},
																	"Children": [
																		{
																			"ID": "20230202203623-t3h5cr3",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"fold": "1",
																				"id": "20230202203623-t3h5cr3",
																				"updated": "20230202203623"
																			},
																			"Children": [
																				{
																					"ID": "20230202203623-690clsw",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202203623-690clsw",
																						"updated": "20230202203623"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "示意图"
																						}
																					]
																				},
																				{
																					"ID": "20230202203502-hpmcoeq",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202203502-hpmcoeq",
																						"updated": "20230202203613"
																					},
																					"Children": [
																						{
																							"Type": "NodeImage",
																							"Data": "span",
																							"Properties": {
																								"parent-style": "max-width: 556px; display: block;",
																								"style": "width: 546px;"
																							},
																							"Children": [
																								{
																									"Type": "NodeBang"
																								},
																								{
																									"Type": "NodeOpenBracket"
																								},
																								{
																									"Type": "NodeLinkText",
																									"Data": "image"
																								},
																								{
																									"Type": "NodeCloseBracket"
																								},
																								{
																									"Type": "NodeOpenParen"
																								},
																								{
																									"Type": "NodeLinkDest",
																									"Data": "assets/image-20230202203604-23bu2xx.png"
																								},
																								{
																									"Type": "NodeCloseParen"
																								}
																							]
																						},
																						{
																							"Type": "NodeKramdownSpanIAL",
																							"Data": "{: style=\"width: 546px;\" parent-style=\"max-width: 556px; display: block;\"}"
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20230202203643-xvd58dh",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202203643-xvd58dh",
																		"updated": "20230202203939"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "三次握手是建立连接的过程，当客户端向"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端发起连接时，会先发一组数据请求连接，询问"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端能否建立连接，这组数据我们称为SYN包，如果"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端同意连接，则回复一个SYN+ACK包，客户端收到之后回复一组ACK包，建立连接。"
																		}
																	]
																},
																{
																	"ID": "20230202203940-l7yt040",
																	"Type": "NodeList",
																	"ListData": {
																		"Typ": 1
																	},
																	"Properties": {
																		"id": "20230202203940-l7yt040",
																		"updated": "20230202203943"
																	},
																	"Children": [
																		{
																			"ID": "20230202203943-mpk0gdx",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "MS4=",
																				"Num": 1
																			},
																			"Properties": {
																				"id": "20230202203943-mpk0gdx",
																				"updated": "20230202203943"
																			},
																			"Children": [
																				{
																					"ID": "20230202203943-vkvsntl",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202203943-vkvsntl",
																						"updated": "20230202204212"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "建立连接时，客户端发送SYN包（SYN=i）到"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器，并进入SYN-SEND状态，等待"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器确认。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202204038-juain1c",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Mi4=",
																				"Num": 2
																			},
																			"Properties": {
																				"id": "20230202204038-juain1c"
																			},
																			"Children": [
																				{
																					"ID": "20230202204038-7s4x8tf",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202204038-7s4x8tf",
																						"updated": "20230202204334"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器收到SYN包，回应一个ACK（ACK=i+1），同时自己也发送一个SYN请求（SYN=k），即发送SYN+ACK包，此时"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器进入SYN-RECV状态。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202204334-tvvmecp",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "My4=",
																				"Num": 3
																			},
																			"Properties": {
																				"id": "20230202204334-tvvmecp"
																			},
																			"Children": [
																				{
																					"ID": "20230202204334-29ypwiq",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202204334-29ypwiq",
																						"updated": "20230202204839"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端收到"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器的SYN+ACK包，向"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器发送确认报文ACK（ACK=k+1），发送完毕，客户端和"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器进入ESTABLISHED状态，完成三次握手，开始传输数据。"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202204842-4rso1rt",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202204842-4rso1rt"
															},
															"Children": [
																{
																	"ID": "20230202204842-uo2gsde",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202204842-uo2gsde",
																		"updated": "20230202210607"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "四次挥手过程"
																		}
																	]
																},
																{
																	"ID": "20230202204858-2fhgp8x",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20230202204858-2fhgp8x",
																		"updated": "20230202204859"
																	},
																	"Children": [
																		{
																			"ID": "20230202204859-fq8cudi",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"fold": "1",
																				"id": "20230202204859-fq8cudi",
																				"updated": "20230202204859"
																			},
																			"Children": [
																				{
																					"ID": "20230202204859-ajt8xvp",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202204859-ajt8xvp",
																						"updated": "20230202204901"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "示意图"
																						}
																					]
																				},
																				{
																					"ID": "20230202204902-uzkhg1p",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202204902-uzkhg1p",
																						"updated": "20230202204914"
																					},
																					"Children": [
																						{
																							"Type": "NodeImage",
																							"Data": "span",
																							"Properties": {
																								"parent-style": "max-width: 730px; display: block;",
																								"style": "width: 720px;"
																							},
																							"Children": [
																								{
																									"Type": "NodeBang"
																								},
																								{
																									"Type": "NodeOpenBracket"
																								},
																								{
																									"Type": "NodeLinkText",
																									"Data": "image"
																								},
																								{
																									"Type": "NodeCloseBracket"
																								},
																								{
																									"Type": "NodeOpenParen"
																								},
																								{
																									"Type": "NodeLinkDest",
																									"Data": "assets/image-20230202204908-bumupno.png"
																								},
																								{
																									"Type": "NodeCloseParen"
																								}
																							]
																						},
																						{
																							"Type": "NodeKramdownSpanIAL",
																							"Data": "{: style=\"width: 720px;\" parent-style=\"max-width: 730px; display: block;\"}"
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20230202204922-oakzhq7",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202204922-oakzhq7",
																		"updated": "20230202205738"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "处于连接状态的客户端和"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端都可以发起关闭连接，即四次挥手。假设客户端发起"
																		}
																	]
																},
																{
																	"ID": "20230202205722-dx2kyc8",
																	"Type": "NodeList",
																	"ListData": {
																		"Typ": 1
																	},
																	"Properties": {
																		"id": "20230202205722-dx2kyc8",
																		"updated": "20230202205724"
																	},
																	"Children": [
																		{
																			"ID": "20230202205724-ujjwzwo",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "MS4=",
																				"Num": 1
																			},
																			"Properties": {
																				"id": "20230202205724-ujjwzwo",
																				"updated": "20230202205724"
																			},
																			"Children": [
																				{
																					"ID": "20230202205724-6b7cb6f",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202205724-6b7cb6f",
																						"updated": "20230202205832"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端向"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端发起一个FIN请求，表示要关闭连接，客户端进入终止等待状态。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202205832-d3ue7uv",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Mi4=",
																				"Num": 2
																			},
																			"Properties": {
																				"id": "20230202205832-d3ue7uv"
																			},
																			"Children": [
																				{
																					"ID": "20230202205832-ogg09ey",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202205832-ogg09ey",
																						"updated": "20230202210058"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端收到FIN请求，回应一个ACK包，表示"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端进入关闭等待状态，客户端收到后进入终止等待2状态。此时"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端还可以发送未完成的数据，客户端还可以接受数据。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202210059-2mq23nr",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "My4=",
																				"Num": 3
																			},
																			"Properties": {
																				"id": "20230202210059-2mq23nr"
																			},
																			"Children": [
																				{
																					"ID": "20230202210059-qb6ggau",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202210059-qb6ggau",
																						"updated": "20230202210149"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端发送完数据后，发送FIN请求，"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端进入最后确认状态。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202210149-ltcrisf",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "NC4=",
																				"Num": 4
																			},
																			"Properties": {
																				"id": "20230202210149-ltcrisf"
																			},
																			"Children": [
																				{
																					"ID": "20230202210149-u6zqru1",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202210149-u6zqru1",
																						"updated": "20230202210346"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端收到FIN请求后，回复ACK包，并进入超时等待状态（2MSL）。经过超时时间后关闭连接。"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端收到ACK后立刻关闭连接。"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202210541-e5fbsg1",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202210541-e5fbsg1"
															},
															"Children": [
																{
																	"ID": "20230202210541-4evtqqi",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202210541-4evtqqi",
																		"updated": "20230202210650"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "四次挥手为什么最后需要超时等待时间"
																		}
																	]
																},
																{
																	"ID": "20230202210640-avv0e1d",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202210640-avv0e1d",
																		"updated": "20230202210854"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "这是为了保证对方收到ACK包，假设客户端发送ACK包后立刻关闭了连接，一旦ACK包在网络中丢失，"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端将一直停留在最后确认状态。"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202211026-5sseby5",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202211026-5sseby5"
															},
															"Children": [
																{
																	"ID": "20230202211033-ici3u29",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202211033-ici3u29",
																		"updated": "20230202211033"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "什么是MSL？"
																		}
																	]
																},
																{
																	"ID": "20230202211033-8xnbyso",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202211033-8xnbyso",
																		"updated": "20230202211033"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "MSL（Maximum Segment Lifetime），报文最大生存时间，它是任何报文在网络上存在的最长时间，超过这个时间报文将被丢弃。"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202211041-fdbqt73",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202211041-fdbqt73"
															},
															"Children": [
																{
																	"ID": "20230202211041-dp8mk4p",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202211041-dp8mk4p",
																		"updated": "20230202211046"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "为什么TIME_WAIT 等待的时间是 2MSL？"
																		}
																	]
																},
																{
																	"ID": "20230202211059-ls7kkp6",
																	"Type": "NodeList",
																	"ListData": {
																		"Typ": 1
																	},
																	"Properties": {
																		"id": "20230202211059-ls7kkp6",
																		"updated": "20230202211103"
																	},
																	"Children": [
																		{
																			"ID": "20230202211103-gsr8i41",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "MS4=",
																				"Num": 1
																			},
																			"Properties": {
																				"id": "20230202211103-gsr8i41",
																				"updated": "20230202211103"
																			},
																			"Children": [
																				{
																					"ID": "20230202211103-46rx90l",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202211103-46rx90l",
																						"updated": "20230202211145"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "保证"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "端的连接能够正确关闭"
																						}
																					]
																				},
																				{
																					"ID": "20230202211249-pon4lxs",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202211249-pon4lxs",
																						"updated": "20230202211428"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端是发出了第四次挥手的报文后进入的TIME_WAIT，如果第四次握手中，客户端发给"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器的ACK报文丢失了，"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器就会超时重发 FIN报文给客户端。"
																						}
																					]
																				},
																				{
																					"ID": "20230202212624-a0zkx2l",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202212624-a0zkx2l",
																						"updated": "20230202212624"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端要保证极端情况下也能接受到"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器的超时重发FIN报文，然后给"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器重传第四次握手报文，确保"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "服务"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "器能正常关闭。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202211115-r0lb0zu",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Mi4=",
																				"Num": 2
																			},
																			"Properties": {
																				"id": "20230202211115-r0lb0zu"
																			},
																			"Children": [
																				{
																					"ID": "20230202211115-zx1nt9h",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202211115-zx1nt9h",
																						"updated": "20230202211140"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "防止收到历史数据，从而导致数据错乱的问题"
																						}
																					]
																				},
																				{
																					"ID": "20230202211342-wjiu0t1",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202211342-wjiu0t1",
																						"updated": "20230202211402"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "客户端发送完最后一个确认报文后，在这个2MSL时间中，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样"
																						},
																						{
																							"Type": "NodeTextMark",
																							"TextMarkType": "strong",
																							"TextMarkTextContent": "新的连接中不会出现旧连接的历史数据"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "。"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202212657-9gua42m",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202212657-9gua42m"
															},
															"Children": [
																{
																	"ID": "20230202212658-m3f2tfk",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202212658-m3f2tfk",
																		"updated": "20230202212658"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "为什么建立连接是三次握手，关闭连接确是四次挥手呢？"
																		}
																	]
																},
																{
																	"ID": "20230202212711-8670lbh",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202212711-8670lbh",
																		"updated": "20230202212749"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "器收到对方的FIN报文时，很"
																		},
																		{
																			"Type": "NodeTextMark",
																			"TextMarkType": "strong",
																			"TextMarkTextContent": "可能还有数据没发完"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "，需要等到数据发送完毕之后才向客户端发送FIN报文，但是又不能让客户端等太久，就先发ACK告诉客户端我收到了你的FIN释放连接请求，客户端收到ACK之后便不会重复发送断开连接的请求。"
																		}
																	]
																},
																{
																	"ID": "20230202212711-4037ioe",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202212711-4037ioe",
																		"updated": "20230202212711"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "等到"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "器数据传输完毕后，才会发FIN释放连接报文。"
																		}
																	]
																},
																{
																	"ID": "20230202212711-ln5t09c",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202212711-ln5t09c",
																		"updated": "20230202212711"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "另外，如果"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "服务"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "端确定没有数据需要发给客户端，那么当然是可以把 FIN 和 ACK 合并成一个包，四次挥手的过程就成了三次。"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202212903-bjnvg7b",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202212903-bjnvg7b"
															},
															"Children": [
																{
																	"ID": "20230202212903-xutnj11",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202212903-xutnj11",
																		"updated": "20230202212910"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "报文类型"
																		}
																	]
																},
																{
																	"ID": "20230202212911-q7q6h9m",
																	"Type": "NodeTable",
																	"TableAligns": [
																		0,
																		0,
																		0
																	],
																	"Properties": {
																		"colgroup": "min-width: 60px;|min-width: 60px;|min-width: 60px;",
																		"id": "20230202212911-q7q6h9m",
																		"updated": "20230202213308"
																	},
																	"Children": [
																		{
																			"Type": "NodeTableHead",
																			"Data": "thead",
																			"Children": [
																				{
																					"Type": "NodeTableRow",
																					"Data": "tr",
																					"Children": [
																						{
																							"Type": "NodeTableCell",
																							"Data": "th",
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "报文类型"
																								}
																							]
																						},
																						{
																							"Type": "NodeTableCell",
																							"Data": "th",
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "含义"
																								}
																							]
																						},
																						{
																							"Type": "NodeTableCell",
																							"Data": "th",
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "状态"
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"Type": "NodeTableRow",
																			"Data": "tr",
																			"Children": [
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "SYN"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "发起一个新连接"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "1表示发起连接"
																						}
																					]
																				}
																			]
																		},
																		{
																			"Type": "NodeTableRow",
																			"Data": "tr",
																			"Children": [
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "FIN"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "释放一个链接"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "1表示结束连接"
																						}
																					]
																				}
																			]
																		},
																		{
																			"Type": "NodeTableRow",
																			"Data": "tr",
																			"Children": [
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "ACK"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "确认序号有效"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "ack=seq+1"
																						}
																					]
																				}
																			]
																		},
																		{
																			"Type": "NodeTableRow",
																			"Data": "tr",
																			"Children": [
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "seq"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "随机序号"
																						}
																					]
																				},
																				{
																					"Type": "NodeTableCell",
																					"Data": "td",
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "随机数"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20230202201411-uiqtdo3",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201411-uiqtdo3",
												"updated": "20230202213700"
											},
											"Children": [
												{
													"ID": "20230202201411-49d0fiw",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201411-49d0fiw",
														"updated": "20230202204647"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "OSI七层模型与对应的协议"
														}
													]
												},
												{
													"ID": "20230202213613-d55izjg",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20230202213613-d55izjg",
														"updated": "20230202213700"
													},
													"Children": [
														{
															"ID": "20230202213656-ksdgnm1",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202213656-ksdgnm1",
																"updated": "20230202213700"
															},
															"Children": [
																{
																	"ID": "20230202213656-8yb9wjj",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202213656-8yb9wjj",
																		"updated": "20230202213656"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "示意图"
																		}
																	]
																},
																{
																	"ID": "20230202213658-zz89ypz",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202213658-zz89ypz",
																		"updated": "20230202213838"
																	},
																	"Children": [
																		{
																			"Type": "NodeImage",
																			"Data": "span",
																			"Properties": {
																				"parent-style": "max-width: 670px; display: block;",
																				"style": "width: 660px;"
																			},
																			"Children": [
																				{
																					"Type": "NodeBang"
																				},
																				{
																					"Type": "NodeOpenBracket"
																				},
																				{
																					"Type": "NodeLinkText",
																					"Data": "image"
																				},
																				{
																					"Type": "NodeCloseBracket"
																				},
																				{
																					"Type": "NodeOpenParen"
																				},
																				{
																					"Type": "NodeLinkDest",
																					"Data": "assets/image-20230202213700-2lilnfe.png"
																				},
																				{
																					"Type": "NodeCloseParen"
																				}
																			]
																		},
																		{
																			"Type": "NodeKramdownSpanIAL",
																			"Data": "{: style=\"width: 660px;\" parent-style=\"max-width: 670px; display: block;\"}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20230202213953-phpzvvs",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20230202213953-phpzvvs",
														"updated": "20230202214010"
													},
													"Children": [
														{
															"ID": "20230202214010-ud5b1n5",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"fold": "1",
																"id": "20230202214010-ud5b1n5",
																"updated": "20230202214010"
															},
															"Children": [
																{
																	"ID": "20230202214010-72z9r4o",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202214010-72z9r4o",
																		"updated": "20230202214023"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "各层的作用"
																		}
																	]
																},
																{
																	"ID": "20230202214024-wjm3fxs",
																	"Type": "NodeList",
																	"ListData": {
																		"Typ": 1
																	},
																	"Properties": {
																		"id": "20230202214024-wjm3fxs",
																		"updated": "20230202214025"
																	},
																	"Children": [
																		{
																			"ID": "20230202214025-cuwtgwe",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "MS4=",
																				"Num": 1
																			},
																			"Properties": {
																				"id": "20230202214025-cuwtgwe",
																				"updated": "20230202214025"
																			},
																			"Children": [
																				{
																					"ID": "20230202214025-dqpyfv9",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202214025-dqpyfv9",
																						"updated": "20230202214028"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "物理层"
																						}
																					]
																				},
																				{
																					"ID": "20230202214028-7akj90e",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202214028-7akj90e",
																						"updated": "20230202214114"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "通过物理连接组网，传送比特流0和1"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202214115-k03j7kv",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Mi4=",
																				"Num": 2
																			},
																			"Properties": {
																				"id": "20230202214115-k03j7kv"
																			},
																			"Children": [
																				{
																					"ID": "20230202214115-on00vi1",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202214115-on00vi1",
																						"updated": "20230202214120"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "数据链路层"
																						}
																					]
																				},
																				{
																					"ID": "20230202214121-t302py4",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202214121-t302py4",
																						"updated": "20230202214929"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "完成相邻节点之间的通讯，将网络层传来的IP数据组装为帧"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202215409-b2wiks4",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "My4=",
																				"Num": 3
																			},
																			"Properties": {
																				"id": "20230202215409-b2wiks4"
																			},
																			"Children": [
																				{
																					"ID": "20230202215409-3t1q37v",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215409-3t1q37v",
																						"updated": "20230202215413"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "网络层"
																						}
																					]
																				},
																				{
																					"ID": "20230202215414-p137quy",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215414-p137quy",
																						"updated": "20230202215453"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "完成主机到主机之间的通信，完成转发和路由的功能"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202215454-dxb2qam",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "NC4=",
																				"Num": 4
																			},
																			"Properties": {
																				"id": "20230202215454-dxb2qam"
																			},
																			"Children": [
																				{
																					"ID": "20230202215454-6x75c63",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215454-6x75c63",
																						"updated": "20230202215458"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "传输层"
																						}
																					]
																				},
																				{
																					"ID": "20230202215459-zn12j9e",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215459-zn12j9e",
																						"updated": "20230202215526"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "完成端口到端口之间的通信"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202215526-kjs6n5e",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "NS4=",
																				"Num": 5
																			},
																			"Properties": {
																				"id": "20230202215526-kjs6n5e"
																			},
																			"Children": [
																				{
																					"ID": "20230202215526-v5uz9t2",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215526-v5uz9t2",
																						"updated": "20230202215538"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "会话层"
																						}
																					]
																				},
																				{
																					"ID": "20230202215538-d6gmtfy",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215538-d6gmtfy",
																						"updated": "20230202215619"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "向两个实体的表示层提供建立和使用连接的方法。将不同实体之间的表示层的连接称为会话。因此会话层的任务就是组织和协调两个会话进程之间的通信，并对数据交换进行管理"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202215620-beb4lw3",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Ni4=",
																				"Num": 6
																			},
																			"Properties": {
																				"id": "20230202215620-beb4lw3"
																			},
																			"Children": [
																				{
																					"ID": "20230202215620-75bmupm",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202215620-75bmupm",
																						"updated": "20230202220731"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "表示层"
																						}
																					]
																				},
																				{
																					"ID": "20230202220731-ttch5a0",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202220731-ttch5a0",
																						"updated": "20230202220827"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "处理用户信息的表示问题，如编码，数据格式转换和加密解密等。"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20230202220828-fjf5zk1",
																			"Type": "NodeListItem",
																			"ListData": {
																				"Typ": 1,
																				"Delimiter": 46,
																				"Marker": "Ny4=",
																				"Num": 7
																			},
																			"Properties": {
																				"id": "20230202220828-fjf5zk1"
																			},
																			"Children": [
																				{
																					"ID": "20230202220828-p8hkg78",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202220828-p8hkg78",
																						"updated": "20230202220833"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "应用层"
																						}
																					]
																				},
																				{
																					"ID": "20230202220834-u2verkh",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20230202220834-u2verkh",
																						"updated": "20230202220900"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "直接向用户提供服务，完成用户希望在网络上完成的各种工作"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20230202221809-bao0cho",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202221809-bao0cho",
												"updated": "20230202233214"
											},
											"Children": [
												{
													"ID": "20230202221809-o4a69oe",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202221809-o4a69oe",
														"updated": "20230202221834"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "TCP/IP四层模型"
														}
													]
												},
												{
													"ID": "20230202221907-rxgusnv",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20230202221907-rxgusnv",
														"updated": "20230202233214"
													},
													"Children": [
														{
															"ID": "20230202221958-jae9dsi",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20230202221958-jae9dsi",
																"updated": "20230202221958"
															},
															"Children": [
																{
																	"ID": "20230202221958-pzx3o5j",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202221958-pzx3o5j",
																		"updated": "20230202221958"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "示意图"
																		}
																	]
																},
																{
																	"ID": "20230202222000-xfkyqkb",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222000-xfkyqkb",
																		"updated": "20230202222006"
																	},
																	"Children": [
																		{
																			"Type": "NodeImage",
																			"Data": "span",
																			"Properties": {
																				"parent-style": "max-width: 649px; display: block;",
																				"style": "width: 639px;"
																			},
																			"Children": [
																				{
																					"Type": "NodeBang"
																				},
																				{
																					"Type": "NodeOpenBracket"
																				},
																				{
																					"Type": "NodeLinkText",
																					"Data": "image"
																				},
																				{
																					"Type": "NodeCloseBracket"
																				},
																				{
																					"Type": "NodeOpenParen"
																				},
																				{
																					"Type": "NodeLinkDest",
																					"Data": "assets/image-20230202222001-f7up691.png"
																				},
																				{
																					"Type": "NodeCloseParen"
																				}
																			]
																		},
																		{
																			"Type": "NodeKramdownSpanIAL",
																			"Data": "{: style=\"width: 639px;\" parent-style=\"max-width: 649px; display: block;\"}"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202222015-zz3e4bw",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20230202222015-zz3e4bw"
															},
															"Children": [
																{
																	"ID": "20230202222015-m4hu8qv",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222015-m4hu8qv",
																		"updated": "20230202222109"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "数据链路层（网络接口层）"
																		}
																	]
																},
																{
																	"ID": "20230202222110-24vieq0",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222110-24vieq0",
																		"updated": "20230202222600"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "传输单位是帧，"
																		}
																	]
																},
																{
																	"ID": "20230202222641-mueaoyn",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222641-mueaoyn",
																		"updated": "20230202222709"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "添加了mac地址信息，用于局域网内通信，"
																		}
																	]
																},
																{
																	"ID": "20230202222643-ek3n1nd",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222643-ek3n1nd"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "物理设备为网桥，交换机，网卡"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202222728-3ce09g9",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20230202222728-3ce09g9",
																"updated": "20230202222728"
															},
															"Children": [
																{
																	"ID": "20230202222728-iamtkru",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222728-iamtkru",
																		"updated": "20230202222728"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "网络层（ip层）"
																		}
																	]
																},
																{
																	"ID": "20230202222737-z587nd7",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222737-z587nd7",
																		"updated": "20230202222746"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "传输单位是包"
																		}
																	]
																},
																{
																	"ID": "20230202222748-ohuvclj",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202222748-ohuvclj",
																		"updated": "20230202224952"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "添加ip头部信息，用于广域网通信"
																		}
																	]
																},
																{
																	"ID": "20230202224953-lnwd8hf",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202224953-lnwd8hf",
																		"updated": "20230202225009"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "物理设备为路由器，三层交换机"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202225010-y56x3c2",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20230202225010-y56x3c2"
															},
															"Children": [
																{
																	"ID": "20230202225010-zmt3o4l",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225010-zmt3o4l",
																		"updated": "20230202225016"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "传输层"
																		}
																	]
																},
																{
																	"ID": "20230202225016-wuvhvuq",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225016-wuvhvuq",
																		"updated": "20230202225037"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "传输单位是段，"
																		}
																	]
																},
																{
																	"ID": "20230202225039-k308r4w",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225039-k308r4w",
																		"updated": "20230202225100"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "添加端口信息，用于进程间通信"
																		}
																	]
																},
																{
																	"ID": "20230202225100-uclr6cj",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225100-uclr6cj",
																		"updated": "20230202225138"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "物理设备为四层交换机，四层路由器"
																		}
																	]
																}
															]
														},
														{
															"ID": "20230202225139-g5cokux",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20230202225139-g5cokux",
																"updated": "20230202233214"
															},
															"Children": [
																{
																	"ID": "20230202225139-pi4m7y2",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225139-pi4m7y2",
																		"updated": "20230202225143"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "应用层"
																		}
																	]
																},
																{
																	"ID": "20230202225146-ugns7qa",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20230202225146-ugns7qa",
																		"updated": "20230202233214"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "http，ftp等协议，传输具体数据"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20230202213944-879inbk",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20230202213944-879inbk",
										"updated": "20230202213944"
									},
									"Children": [
										{
											"ID": "20230202201430-0m0gicj",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201430-0m0gicj"
											},
											"Children": [
												{
													"ID": "20230202201430-0g8k12d",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201430-0g8k12d",
														"updated": "20230202204645"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "linux中查找大于10M的文件并删除"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201457-qiuw25i",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201457-qiuw25i"
											},
											"Children": [
												{
													"ID": "20230202201457-5hhr736",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201457-5hhr736",
														"updated": "20230202204640"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "查看cpu占用，查看内存占用，查看磁盘io，系统的核心指标"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201538-h6hm4xm",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201538-h6hm4xm"
											},
											"Children": [
												{
													"ID": "20230202201538-manbc96",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201538-manbc96",
														"updated": "20230202204637"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "查看硬盘磁盘的信息"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201623-drqhuzw",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201623-drqhuzw"
											},
											"Children": [
												{
													"ID": "20230202201623-uei0zpr",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201623-uei0zpr",
														"updated": "20230202204632"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "lvs"
														},
														{
															"Type": "NodeText",
															"Data": "与"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "的区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201637-jphohyo",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201637-jphohyo"
											},
											"Children": [
												{
													"ID": "20230202201653-lyvyccj",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201653-lyvyccj",
														"updated": "20230202204629"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "使用"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "+keepalived实现负载均衡，解决单点与高流量并发问题。为什么要用"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "而不用"
														},
														{
															"Type": "NodeText",
															"Data": "lvs"
														},
														{
															"Type": "NodeText",
															"Data": "？（使用"
														},
														{
															"Type": "NodeText",
															"Data": "nginx"
														},
														{
															"Type": "NodeText",
															"Data": "做七层负载均衡的由？）"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201706-noeux3s",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201706-noeux3s"
											},
											"Children": [
												{
													"ID": "20230202201706-zgf38i8",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201706-zgf38i8",
														"updated": "20230202204625"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "目前主流的虚拟化平台"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201748-kady7ka",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201748-kady7ka"
											},
											"Children": [
												{
													"ID": "20230202201748-d77jey0",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201748-d77jey0",
														"updated": "20230202204619"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "两层交换机与三层交换机的区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201804-yzxse0y",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201804-yzxse0y"
											},
											"Children": [
												{
													"ID": "20230202201804-8o3i8xs",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201804-8o3i8xs",
														"updated": "20230202204617"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "linux的常用文件系统"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201840-8f0jut0",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201840-8f0jut0"
											},
											"Children": [
												{
													"ID": "20230202201840-v0l5q7w",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201840-v0l5q7w",
														"updated": "20230202204614"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "shell中单引号与双引号的区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201905-a33k1ia",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201905-a33k1ia"
											},
											"Children": [
												{
													"ID": "20230202201905-hvsandx",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201905-hvsandx",
														"updated": "20230202204611"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "怎样配置定时任务"
														}
													]
												}
											]
										},
										{
											"ID": "20230202201927-ehmubnb",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202201927-ehmubnb"
											},
											"Children": [
												{
													"ID": "20230202201927-7cm90nt",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202201927-7cm90nt",
														"updated": "20230202204609"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "无法连接网络，怎样去安装软件"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202020-3qajpsz",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202020-3qajpsz"
											},
											"Children": [
												{
													"ID": "20230202202020-g4mlpja",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202202020-g4mlpja",
														"updated": "20230202204607"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "列举常用的端口"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202042-liwbrcl",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202042-liwbrcl"
											},
											"Children": [
												{
													"ID": "20230202202205-wp5thrq",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202202205-wp5thrq",
														"updated": "20230202204605"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "ARP欺骗原理"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202211-hefzvhp",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202211-hefzvhp"
											},
											"Children": [
												{
													"ID": "20230202202219-kvjy0dc",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202202219-kvjy0dc",
														"updated": "20230202204604"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "T"
														},
														{
															"Type": "NodeText",
															"Data": "CP"
														},
														{
															"Type": "NodeText",
															"Data": "/IP工作原理"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202225-1mhpdg0",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202225-1mhpdg0"
											},
											"Children": [
												{
													"ID": "20230202202225-7am3770",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202202225-7am3770",
														"updated": "20230202204601"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "LNMP架构访问分析"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202259-ujzc7ui",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202259-ujzc7ui"
											},
											"Children": [
												{
													"ID": "20230202202309-iww7zz7",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202202309-iww7zz7",
														"updated": "20230202204559"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "LAMP和LNMP区别是什么？"
														}
													]
												}
											]
										},
										{
											"ID": "20230202202316-3bwbs84",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202202316-3bwbs84"
											},
											"Children": [
												{
													"ID": "20230202203058-uo61820",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203058-uo61820",
														"updated": "20230202204557"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "对称加密和非对称加密有什么区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203103-zhs3xl1",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203103-zhs3xl1"
											},
											"Children": [
												{
													"ID": "20230202203103-qjzavg0",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203103-qjzavg0",
														"updated": "20230202204542"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "公钥与私钥的作用"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203117-1yq35d4",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203117-1yq35d4"
											},
											"Children": [
												{
													"ID": "20230202203211-3vzbvdx",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203211-3vzbvdx",
														"updated": "20230202204533"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "三剑客"
														},
														{
															"Type": "NodeText",
															"Data": "sed"
														},
														{
															"Type": "NodeText",
															"Data": "、"
														},
														{
															"Type": "NodeText",
															"Data": "grep"
														},
														{
															"Type": "NodeText",
															"Data": "、"
														},
														{
															"Type": "NodeText",
															"Data": "awk"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203216-9i85nt1",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203216-9i85nt1"
											},
											"Children": [
												{
													"ID": "20230202203244-p87c3dl",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203244-p87c3dl",
														"updated": "20230202204527"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "Linux下useradd与adduser的区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203249-r30bbau",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203249-r30bbau"
											},
											"Children": [
												{
													"ID": "20230202203249-ya7kdwm",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203249-ya7kdwm",
														"updated": "20230202204525"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "CI/"
														},
														{
															"Type": "NodeText",
															"Data": "CD"
														},
														{
															"Type": "NodeText",
															"Data": "是什么"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203301-425m8l4",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203301-425m8l4"
											},
											"Children": [
												{
													"ID": "20230202203301-unnwos1",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203301-unnwos1",
														"updated": "20230202204518"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "SVN和Git的区别"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203329-ois3tgo",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203329-ois3tgo"
											},
											"Children": [
												{
													"ID": "20230202203329-guy1os2",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203329-guy1os2",
														"updated": "20230202204512"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "怎么查询日志"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203350-0ujue47",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203350-0ujue47"
											},
											"Children": [
												{
													"ID": "20230202203350-h0ozch0",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203350-h0ozch0",
														"updated": "20230202204509"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "linux日志文件列表"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203405-nkb4oum",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203405-nkb4oum"
											},
											"Children": [
												{
													"ID": "20230202203405-gfermq0",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203405-gfermq0",
														"updated": "20230202204506"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "linux开机概述"
														}
													]
												}
											]
										},
										{
											"ID": "20230202203419-oepb3ze",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20230202203419-oepb3ze"
											},
											"Children": [
												{
													"ID": "20230202203438-ish5l85",
													"Type": "NodeHeading",
													"HeadingLevel": 3,
													"Properties": {
														"id": "20230202203438-ish5l85",
														"updated": "20230202204504"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "docker"
														},
														{
															"Type": "NodeText",
															"Data": "与虚拟机的区别是什么"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230202201240-6p731ca",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230202201240-6p731ca",
						"updated": "20230202201248"
					}
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20230202201245-vs755ok",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230202201245-vs755ok"
			}
		}
	]
}